DFHNCOPT TITLE 'CICS Named Counter Server: Sample Option Table'
***********************************************************************
*                                                                     *
* MODULE NAME = DFHNCOPT                                              *
*                                                                     *
* DESCRIPTIVE NAME = CICS TS  Named Counter Server Sample Option Table*
*                                                                     *
*                                                                     *
*                                                                     *
*        Licensed Materials - Property of IBM                         *
*                                                                     *
*        "Restricted Materials of IBM"                                *
*                                                                     *
*        5655-Y04                                                     *
*                                                                     *
*        (C) Copyright IBM Corp. 1998, 2014"                          *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*  STATUS = 7.2.0                                                     *
*                                                                     *
* FUNCTION =                                                          *
*        Standard sample option table for named counter server.       *
*                                                                     *
*        This table defines the mapping of named counter pool names   *
*        specified by application programs to the actual pool name    *
*        identifying the server to be used.                           *
*                                                                     *
* NOTES :                                                             *
*    DEPENDENCIES = S/390                                             *
*    RESTRICTIONS = None                                              *
*    REGISTER CONVENTIONS =  Not Applicable                           *
*    MODULE TYPE = Table                                              *
*    PROCESSOR = High Level Assembler                                 *
*    ATTRIBUTES = Not Applicable                                      *
*                                                                     *
*---------------------------------------------------------------------*
* DESCRIPTION:                                                        *
*                                                                     *
* DFHNCOPT - The named counter server option table                    *
*                                                                     *
* The mapping of pool selection parameters on DFHNCTR calls to the    *
* corresponding actual pool name is performed using an option table,  *
* DFHNCOPT, which can be modified by the installation.  This table    *
* is provided in sample form and is generated using the DFHNCO        *
* macro. A typical use of this option table would be to enable        *
* production and test jobs to use a separate counter pool without     *
* needing to change any application program code. To avoid the need   *
* to maintain multiple versions of this table, table entries can be   *
* used to select pools based not only on the pool selection           *
* parameter but also on the job name and CICS APPLID of the current   *
* region, and it is also possible to call a user exit program to      *
* make the selection.                                                 *
*                                                                     *
* The table is loaded using the name DFHNCOPT from the first library  *
* (STEPLIB, JOBLIB, LPA or link list) in the search sequence in which *
* it is found.  It must be present if named counter services will     *
* be used by any application running in that region.                  *
*                                                                     *
* The table is defined using one or more invocations of the DFHNCO    *
* macro. Each invocation generates an option table entry which        *
* defines the pool name or user exit program to be used whenever any  *
* selection conditions specified on the entry are met. The first      *
* entry automatically generates the table header (including the       *
* CSECT statement). The last entry should be followed by an END       *
* statement specifying the table module entry point DFHNCOPT.         *
*                                                                     *
*                      DFHNCO macro syntax                            *
* +----------+------------------------------------------------+       *
* |  DFHNCO  | POOLSEL={patterns|*},                          |       *
* |          | JOBNAME={patterns|*},                          |       *
* |          | APPLID={patterns|*},                           |       *
* |          | { POOL={YES|NO|name}  |  CALL= program }       |       *
* |          |                                                |       *
* +----------+------------------------------------------------+       *
*                                                                     *
* The POOLSEL, JOBNAME and APPLID operands specify optional           *
* selection conditions to determine whether the entry applies to the  *
* current request. Each of these operands may be specified as a       *
* single name pattern or a list in parentheses containing one or      *
* more name patterns. Each name pattern may include characters which  *
* can appear in the appropriate name plus the "wild card" characters  *
* "*" to match any sequence of zero or more non-blank characters and  *
* "%" to match any single non-blank character. When multiple name     *
* patterns are specified, the selection condition is satisfied if     *
* any one of them matches. A blank pool selector value may be         *
* matched using a null POOLSEL operand, for example POOLSEL= or       *
* POOLSEL=().                                                         *
*                                                                     *
* Each entry also requires a POOL operand specifying the pool name    *
* to be used or a CALL operand specifying the name of a user exit     *
* program which will be called to determine the pool name.            *
*                                                                     *
* POOLSEL={patterns|*}                                                *
*           specifies that this option table entry only applies       *
*           when the pool selection parameter specified by the        *
*           application program matches one of the patterns           *
*           specified on this operand.                                *
*                                                                     *
* JOBNAME={patterns|*}                                                *
*           specifies that this option table entry only applies       *
*           when the current job name matches one of the patterns     *
*           specified on this operand.                                *
*                                                                     *
* APPLID={patterns|*}                                                 *
*           specifies that this option table entry only applies       *
*           when the current CICS APPLID matches one of the           *
*           patterns specified on this operand.                       *
*                                                                     *
* POOL={YES|NO| name }                                                *
*           specifies the pool name to be used. This operand is       *
*           mutually exclusive with the CALL operand.                 *
*                                                                     *
*           POOL=YES                                                  *
*                     specifies that the pool selection parameter     *
*                     specified by the application program is to      *
*                     be used as the actual pool name.                *
*                                                                     *
*           POOL=NO                                                   *
*                     indicates that no pool is to be selected, in    *
*                     which case the application program request      *
*                     will be rejected with an error code.            *
*                                                                     *
*           POOL=name                                                 *
*                     specifies the actual pool name to be used.      *
*                     If the name is omitted, this indicates that     *
*                     the default pool is to be used.  (For the       *
*                     CALL interface, the default pool is DFHNC001,   *
*                     but for the EXEC CICS interface the default     *
*                     pool may be overriden using a SIT parameter).   *
*                                                                     *
* CALL=program                                                        *
*           specifies the name of a user exit program which will      *
*           be called to determine the actual pool name to be         *
*           used. This operand is mutually exclusive with the POOL    *
*           operand.                                                  *
*                                                                     *
*           The program named on this operand may link-edited with    *
*           the option table, which generates a weak external         *
*           reference (WXTRN) for it, or it can be loaded             *
*           dynamically the first time it is used. The program is     *
*           called using standard MVS linkage, with a standard        *
*           save area and a parameter list pointing to two fields,    *
*           the 8-byte actual pool name result field and the          *
*           8-byte pool selection parameter, in that order. The       *
*           end-of-list bit is set in the second parameter            *
*           address.  (This interface allows for the possibility      *
*           of adding further parameters to aid pool selection in     *
*           a future release).                                        *
*                                                                     *
*           The user exit program should set one of the following     *
*           return codes in register 15:                              *
*                                                                     *
*           0    Use the pool name which has been successfully set    *
*                by the program.  (If the pool name is all blank,     *
*                the default pool is used).                           *
*                                                                     *
*           4    The program did not handle this case, so continue    *
*                option table processing at the next entry, as for    *
*                the case where selection conditions were not met.    *
*                                                                     *
*           8    Reject the request (as for POOL=NO).                 *
*                                                                     *
* The standard supplied option table contains only two entries,       *
* as follows:                                                         *
*                                                                     *
*          DFHNCO POOLSEL=DFHNC*,POOL=YES                             *
*          DFHNCO POOL=                                               *
*          END   DFHNCOPT                                             *
*                                                                     *
* If each application region only uses one pool, a simple table       *
* with one entry can be created and stored in a STEPLIB dataset       *
* for that region, for example:                                       *
*                                                                     *
*          DFHNCO POOL=PRODPOOL                                       *
*          END   DFHNCOPT                                             *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* CHANGE ACTIVITY :                                                   *
*        $MOD(DFHNCOPT),COMP(NAMEDCTR),PROD(CICS TS ):                *
*                                                                     *
*     PN= REASON REL YYMMDD HDXXIII : REMARKS                         *
*    $D0= I06780 530 980318 HDBNJAS : Named Counter Server            *
*    $D1= I06832 530 981103 HDBNJAS : Support external default pool   *
***********************************************************************
         EJECT ,
***********************************************************************
* If pool selector matches DFHNC*, assume it is a real pool name.     *
***********************************************************************
         DFHNCO POOLSEL=DFHNC*,POOL=YES
***********************************************************************
* For any other pool selector, assume the default pool name.          *
***********************************************************************
         DFHNCO POOL=                                              @D1C
***********************************************************************
* The END statement must specify the table entry point DFHNCOPT.      *
***********************************************************************
         END   DFHNCOPT
