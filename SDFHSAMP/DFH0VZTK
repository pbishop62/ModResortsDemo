 CBL CICS('FEPI,COBOL3')
 CBL MAP,OBJ,RENT,NODYNAM,OPT,LIB,DATA(31),LIST,APOST
      *****************************************************************
      *                                                               *
      *                                                               *
      *                                                               *
      *     Licensed Materials - Property of IBM                      *
      *                                                               *
      *     "Restricted Materials of IBM"                             *
      *                                                               *
      *     5655-Y04                                                  *
      *                                                               *
      *     (C) Copyright IBM Corp. 1994"                             *
      *                                                               *
      *                                                               *
      *                                                               *
      *                                                               *
      *   STATUS = 7.2.0                                              *
      *                                                               *
      * CHANGE ACTIVITY :                                             *
      *                                                               *
      *   $MOD(DFH0VZTK),COMP(FEPI),PROD(CICS TS ):                   *
      *                                                               *
      *  PN= REASON REL YYMMDD HDXXIII : REMARKS                      *
      * $L0= Base   410 94     HD5VDLA : Base                         *
      *                                                               *
      *****************************************************************
      *****************************************************************
       IDENTIFICATION DIVISION.
      *****************************************************************
       PROGRAM-ID.                      DFH0VZTK .
       DATE-COMPILED.
      *REMARKS.
      *****************************************************************
      *                                                               *
      * MODULE NAME = DFH0VZTK                                        *
      *                                                               *
      * DESCRIPTIVE NAME = CICS TS  (FEPI) - Sample program:          *
      *                    Key stroke CONVERSE.                       *
      *                    COBOL version                              *
      *                                                               *
      *                                                               *
      * FUNCTION = This sample program demonstrates using FEPI to     *
      *            obtain information from a back-end transaction     *
      *            using the key stroke data format.                  *
      *                                                               *
      * TRANSACTION NAME = CZTK                                       *
      *                                                               *
      * MAP NAME = DFH0MZ1                                            *
      *                                                               *
      *****************************************************************
      *                                                               *
      * OVERVIEW                                                      *
      *                                                               *
      * On the first invocation of the transaction,                   *
      * a map is sent to the front-end terminal.                      *
      *                                                               *
      * When there is input from the front-end terminal, CICS         *
      * reinvokes the transaction.  The customer number from the      *
      * input is built into a key stroke sequence which runs a        *
      * transaction at the back-end system.  The key strokes are sent *
      * and the results received using a FEPI ALLOCATE-CONVERSE-FREE  *
      * command sequence.  Information is extracted from the results  *
      * and sent to the front-end terminal.  Further input is then    *
      * awaited.                                                      *
      *                                                               *
      * When PF3 or CLEAR is received from the front-end terminal,    *
      * the transaction ends.  If there is an error, the front-end    *
      * map is reset.  These situations are detected using HANDLE     *
      * CONDITION.                                                    *
      *                                                               *
      * If the back-end system sends a CICS message, it is sent on    *
      * to the front-end terminal, and the transaction ends.          *
      *                                                               *
      * For clarity, error checking is minimal except for the FEPI    *
      * commands.  Note that the key stroke sequence used involves    *
      * several attention keys, so that if the intermediate responses *
      * are not what is expected, the effects are unpredictable.      *
      * According to your requirements, it may be advisable to send   *
      * each attention sequence individually and to check each time   *
      * that the results are as expected.                             *
      *                                                               *
      *****************************************************************
      *                                                               *
      * PROGRAM LOGIC                                                 *
      *                                                               *
      *   MAIN procedure:                                             *
      *                                                               *
      *     Test COMMAREA                                             *
      *     If transaction not previously invoked                     *
      *         Call SEND-NEW-MAP                                     *
      *                                                               *
      *     Set up exceptional condition handling:                    *
      *         Map error - SEND-NEW-MAP                              *
      *         CLEAR/PF3 - END-PROG                                  *
      *                                                               *
      *     RECEIVE MAP from front-end terminal                       *
      *                                                               *
      *     Build key stroke sequence to:                             *
      *         clear back-end screen                                 *
      *         type  transaction ID                                  *
      *         ENTER                                                 *
      *         type the customer number                              *
      *         ENTER                                                 *
      *                                                               *
      *     FEPI ALLOCATE conversation with back-end system           *
      *     FEPI CONVERSE to send key strokes to back-end system      *
      *         and get the resulting screen image                    *
      *     FEPI FREE     conversation with back-end system           *
      *                                                               *
      *     If CICS message received from back-end system             *
      *         SEND message to front-end terminal                    *
      *         RETURN                                                *
      *                                                               *
      *     Get customer information from back-end screen image       *
      *     Build data for front-end terminal map                     *
      *     SEND map data to front-end terminal                       *
      *     RETURN TRANSID(CZTK) with COMMAREA                        *
      *                                                               *
      *   SEND-NEW-MAP routine:                                       *
      *                                                               *
      *     SEND new map to front-end terminal                        *
      *     RETURN TRANSID(CZTK) with COMMAREA                        *
      *                                                               *
      *   END-PROG routine:                                           *
      *                                                               *
      *     Clear front-end terminal                                  *
      *     RETURN                                                    *
      *                                                               *
      *****************************************************************
      *
      *
      *****************************************************************
       ENVIRONMENT DIVISION.
      *****************************************************************
      *
      *
      *****************************************************************
       DATA DIVISION.
      *****************************************************************
      *
      *===============================================================*
       WORKING-STORAGE SECTION.
      *===============================================================*
      *
       01  W00-EYECATCHER          PIC X(32)   VALUE
                 '* ***** WORKING STORAGE ***** *'.
      *
       01  W01-PROGID               PIC X(8) VALUE 'DFH0VZTK'.
       01  W01-MAPNAME              PIC X(7) VALUE 'DFH0MZ1'.
      *
      * The data from the back-end system is in screen image format,
      * represented by an 80-column 24-line table.
      *
       01  W02-SCREEN.
           05  W02-LINE OCCURS 24 PIC X(80).
      *
      * UNSTRING area for CICS messages.
      *
       01  W02-WASTE                PIC X.
       01  W02-DFH-MESSAGE.
           05  W02-DFH              PIC X(3).
           05  W02-TEXT             PIC X(77).
       01  W02-CICS-ID              PIC X(3) VALUE 'DFH'.
      *
      * W03 holds the values for CICS commands.
      *
       01  W03-CONVID               PIC X(8).
       01  W03-RESP1                PIC S9(7) COMP.
       01  W03-LENGTHRETD           PIC S9(9) COMP.
       01  W03-LENGTHSENT           PIC S9(9) COMP.
       01  W03-SPACE                PIC X VALUE SPACE.
      *
      * W04 determines if there has been a problem.
      *
       01  W04-PROBLEM-FLAG         PIC 9.
       01  W04-NO-PROBLEM           PIC 9 VALUE 0.
       01  W04-PROBLEM              PIC 9 VALUE 1.
      *
      * The following key stroke sequence is used to run the back-end
      * transaction.  It clears the screen, types the transaction ID,
      * then ENTER.  When the results appear, it types the customer
      * number and then ENTER.
      *
       01  W05-KEYSTROKE-SEQ.
           05  W05-KEY-CLEAR       PIC X(3) VALUE '&CL'.
           05  W05-KEY-TRANSID     PIC X(4).
           05  W05-KEY-ENTER1      PIC X(3) VALUE '&EN'.
           05  W05-KEY-CUSTNO      PIC X(4).
           05  W05-KEY-ENTER2      PIC X(3) VALUE '&EN'.
      *
      * DFH0BZ1O defines the layout of the front-end terminal map.
      *
       COPY DFH0BZ1O.
      *
      *
      *===============================================================*
      *=       Constants                                             =*
      *===============================================================*
      *
      * DFH0BZCO defines the customizable constants used by the
      * FEPI sample programs.
      *
       COPY DFH0BZCO.
      *
      * DFH0BZMO defines the messages and other text used by the
      * FEPI sample programs.
      *
       COPY DFH0BZMO.
      *
      * DFHSZAPO defines the FEPI RESP2 values.
      *
       COPY DFHSZAPO.
      *
      * DFHAID defines the standard attention identifiers (AIDs).
      *
       COPY DFHAID.
      *
      *
      *===============================================================*
       LINKAGE SECTION.
      *===============================================================*
      *
      * The COMMAREA is used to pass the transaction ID between
      * invocations of the transaction.
      *
       01  DFHCOMMAREA.
           03  COMMAREA-TRANSID       PIC X(4).
      *
      *
      *****************************************************************
       PROCEDURE DIVISION.
      *****************************************************************
      *
      *===============================================================*
      *=       Main Procedure                                        =*
      *===============================================================*
      *
      * This section controls processing.  Depending on information
      * in the COMMAREA, it sends a new map to the front-end terminal
      * to get input, or it processes that input, building a key stroke
      * sequence to send to the back-end system.  Data is extracted
      * from the returned screen image to send to the front-end
      * terminal.
      *
      * It sets up exceptional condition handling for common errors.
      *
       A-MAIN SECTION.
       A-010.
      *
      * Set flag to show no problems.
      *
           MOVE W04-NO-PROBLEM TO W04-PROBLEM-FLAG.
      *
      * If this transaction has not previously been invoked
      * (no COMMAREA, implying no transaction in progress),
      * send a new map to the front-end terminal and exit.
      *
           IF EIBCALEN IS ZERO
           OR DFH0BZCO-KEYSTROKE-TRANSID IS NOT = COMMAREA-TRANSID
               GO TO Z-SEND-NEW-MAP
           END-IF
      *
      * Set up exceptional condition handling for maps.
      *
           EXEC CICS HANDLE CONDITION
               MAPFAIL(Z-SEND-NEW-MAP)
           END-EXEC.
      *
           EXEC CICS HANDLE AID
               PF3(Z-END-PROG)
               CLEAR(Z-END-PROG)
           END-EXEC.
      *
      * RECEIVE map from front-end terminal.
      *
           EXEC CICS RECEIVE MAP(W01-MAPNAME)
               INTO(DFH0MZ1I)
           END-EXEC
      *
      * Pass the customer number to the back-end transaction
      * to get data from the customer database.
      *
           PERFORM B-BUILD-KEYSTROKE-AND-CONVERSE.
           IF W04-PROBLEM-FLAG = W04-PROBLEM
               GO TO A-099
           END-IF.
      *
      * Extract customer name from the resulting screen image
      * and send it in the map to the front-end terminal.
      * Also check for a CICS message.
      *
           PERFORM C-FORMAT-MAP.
      *
       A-099.
           EXEC CICS SEND MAP(W01-MAPNAME)
               FROM(DFH0MZ1O)
               ERASE
           END-EXEC.
      *
      * Exit - with own transaction ID to continue the transaction
      * when the user responds.
      *
           EXEC CICS RETURN
               TRANSID(DFH0BZCO-KEYSTROKE-TRANSID)
               COMMAREA(DFH0BZCO-KEYSTROKE-TRANSID)
           END-EXEC.
       A-EXIT.
           EXIT.
      *
      *
      *===============================================================*
      *=       Build key strokes and CONVERSE routine                =*
      *===============================================================*
      *
      * This section builds the key stroke sequence which controls the
      * back-end transaction.  It then performs the FEPI CONVERSE
      * to get the resulting screen image.
      *
       B-BUILD-KEYSTROKE-AND-CONVERSE SECTION.
       B-010.
      *
      * Complete the key stroke sequence with the customer number
      * input by the user and the back-end transaction name.
      *
           MOVE MCUSTNOI TO W05-KEY-CUSTNO.
           MOVE DFH0BZCO-BACKEND-TRANSID TO W05-KEY-TRANSID.
      *
      * Allocate a conversation to the back-end system
      * using formatted data.
      *
           EXEC CICS FEPI ALLOCATE
               TIMEOUT(DFH0BZCO-TIMEOUT)
               POOL(DFH0BZCO-FORMATTED-POOL)
               TARGET(DFH0BZCO-TARGET-CICS)
               CONVID(W03-CONVID)
               RESP(W03-RESP1)
               RESP2(DFHSZ-RESP2)
           END-EXEC.
      *
      * Check the response - exit with message if error.
      *
           IF DFHSZ-RESP2 NOT = ZERO
               MOVE W04-PROBLEM TO W04-PROBLEM-FLAG
               MOVE DFH0BZMO-MSG4 TO MMSG2O
               GO TO B-099
           END-IF
      *
      * The FEPI CONVERSE FORMATTED command is used to communicate
      * with a back-end system.
      * The options used are individually
      * discussed in the order they appear in the command.
      *
      * Basic command, specifying that formatted data is used.
      *    EXEC CICS FEPI CONVERSE FORMATTED
      *
      * If TIMEOUT is zero, the command will not time-out.
      * Because this could lead to queueing problems, a suitable
      * application- and system-dependent value should be set.
      * For this sample, the value 20 seconds is used.
      *        TIMEOUT(DFH0BZCO-TIMEOUT)
      *
      * CONVID identifies the conversation which has previously
      * been allocated.
      *        CONVID(W03-CONVID)
      *
      * The FROM area is where the SEND part of the command obtains its
      * data to transmit.  In this case it is an area initialized with
      * a key stroke sequence.
      *        FROM(W05-KEYSTROKE-SEQ)
      *
      * The FROMLENGTH option reflects the length of the data area
      * to be transmitted.
      *        FROMFLENGTH(W03-LENGTHSENT)
      *
      * KEYSTROKES specifies that the data is a key stroke sequence.
      *        KEYSTROKES
      *
      * The escape character which signals that the following
      * characters have special significance is defined as an
      * ampersand.
      *        ESCAPE('&')
      *
      * The INTO area is where the data returned by the command is
      * placed.  MAXFLENGTH need not be specified:  it defaults to the
      * declared length of the INTO area.
      *        INTO(W02-DATA)
      *
      * And TOFLENGTH is where its length is put.
      *        TOFLENGTH(W03-LENGTHRETD)
      *
      * The RESP option returns DFHRESP(NORMAL) or DFHRESP(INVREQ).
      * In the latter case, further
      * information can be obtained from the RESP2 option.
      *        RESP(W03-RESP1)
      *        RESP2(DFHSZ-RESP2)
      *
           MOVE LENGTH OF W05-KEYSTROKE-SEQ TO W03-LENGTHSENT.
           MOVE LENGTH OF W02-SCREEN        TO W03-LENGTHRETD.
           EXEC CICS FEPI CONVERSE FORMATTED
               TIMEOUT(DFH0BZCO-TIMEOUT)
               CONVID(W03-CONVID)
               FROM(W05-KEYSTROKE-SEQ)
               FROMFLENGTH(W03-LENGTHSENT)
               KEYSTROKES
               ESCAPE('&')
               INTO(W02-SCREEN)
               TOFLENGTH(W03-LENGTHRETD)
               RESP(W03-RESP1)
               RESP2(DFHSZ-RESP2)
           END-EXEC.
      *
      * Check the response - exit with message if error.
      *
           IF DFHSZ-RESP2 IS NOT EQUAL TO ZERO
               MOVE W04-PROBLEM TO W04-PROBLEM-FLAG
               MOVE DFH0BZMO-MSG2 TO MMSG2O
           END-IF.
      *
      * FREE the conversation.
      *
           EXEC CICS FEPI FREE
               CONVID(W03-CONVID)
               RESP(W03-RESP1)
               RESP2(DFHSZ-RESP2)
           END-EXEC.
      *
      * Check the response - exit with message if error.
      *
           IF DFHSZ-RESP2 NOT = ZERO
               MOVE W04-PROBLEM TO W04-PROBLEM-FLAG
               MOVE DFH0BZMO-MSG5 TO MMSG2O
           END-IF.
      *
       B-099.
           EXIT.
      *
      *
      *===============================================================*
      *=       Format map routine                                    =*
      *===============================================================*
      *
      * This section examines the returned screen image.
      * If there is a CICS message, it is sent on to the front-end
      * terminal.  Otherwise, data to be displayed at the front-end
      * terminal is extracted.
      *
       C-FORMAT-MAP SECTION.
       C-010.
      *
      * Examine the screen image for a CICS message.
      *
           MOVE SPACE TO W02-DFH
           UNSTRING W02-SCREEN
               DELIMITED BY W02-CICS-ID
               INTO
                   W02-WASTE
                       DELIMITER IN W02-DFH
                   W02-TEXT
           END-UNSTRING.
      *
      * If a CICS message was present, it is
      * doubtful that the transaction completed, so send the
      * message to the front-end terminal and exit.
      *
           IF W02-DFH IS NOT EQUAL TO SPACE
               MOVE W02-DFH-MESSAGE TO MMSG2O
               EXEC CICS SEND MAP(W01-MAPNAME)
                   FROM(DFH0MZ1O)
                   ERASE
               END-EXEC
               EXEC CICS RETURN
               END-EXEC
           END-IF
      *
      * Extract required customer data.
      * This is most conveniently done using UNSTRING on the
      * screen image.  The FEPI EXTRACT FIELD command would be an
      * alternative method, but would have to be done before the
      * conversation was freed.
      *
           UNSTRING W02-SCREEN
               DELIMITED BY ALL HIGH-VALUES
               INTO
                   W02-WASTE
                   W02-WASTE
                   W02-WASTE
                   W02-WASTE
                   W02-WASTE
                   MCUSTNOO
                   W02-WASTE
                   W02-WASTE
                   MCUSTNMO
                   W02-WASTE
                   W02-WASTE
                   W02-WASTE
                   MCUSTA1O
                   MCUSTA2O
                   MCUSTA3O
                   W02-WASTE
                   W02-WASTE
                   MMSG2O
           END-UNSTRING.
      *
       C-099.
           EXIT.
      *
      *
      *===============================================================*
      *=       End transaction routine                               =*
      *===============================================================*
      *
      * This section gets control if PF3 or CLEAR is input at the
      * front-end terminal.
      *
      * The transaction exits after clearing the front-end terminal.
      *
       Z-END-PROG SECTION.
      *
       Z-B10.
           EXEC CICS SEND FROM(W03-SPACE)
               LENGTH (0)
               ERASE
           END-EXEC.
      *
           EXEC CICS RETURN
           END-EXEC.
      *
       Z-B99.
           EXIT.
      *
      *
      *===============================================================*
      *=       Send new map routine                                  =*
      *===============================================================*
      *
      * This section gets control if the MAPFAIL condition is raised
      * or if the transaction has not previously been invoked.
      *
      * It sends a new map to the front-end terminal and returns to
      * CICS to await the user input.
      *
       Z-SEND-NEW-MAP SECTION.
      *
       Z-C10.
           EXEC CICS SEND MAP(W01-MAPNAME)
               MAPONLY
               ERASE
           END-EXEC.
      *
           EXEC CICS RETURN
               TRANSID(DFH0BZCO-KEYSTROKE-TRANSID)
               COMMAREA(DFH0BZCO-KEYSTROKE-TRANSID)
           END-EXEC.
      *
       Z-C99.
           EXIT.
      *
      *
      *****************************************************************
      *        End of program DFH0VZTK                                *
      *****************************************************************
