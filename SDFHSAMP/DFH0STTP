      CBL CICS('COBOL3,SP') APOST
PROCESS MAP,XREF,TRUNC(BIN)
      *****************************************************************
      *                                                               *
      * MODULE NAME = DFH0STTP                                        *
      *                                                               *
      * DESCRIPTIVE NAME = Collect and Print Statistics Sample        *
      *                                                               *
      *                                                               *
      *                                                               *
      *     Licensed Materials - Property of IBM                      *
      *                                                               *
      *     "Restricted Materials of IBM"                             *
      *                                                               *
      *     5655-Y04                                                  *
      *                                                               *
      *     (C) Copyright IBM Corp. 1999, 2015"                       *
      *                                                               *
      *                                                               *
      *                                                               *
      *                                                               *
      * STATUS = 7.2.0                                                *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      * DESCRIPTION :                                                 *
      *                                                               *
      *     This set of programs illustrate ways of using the EXEC    *
      *     CICS INQUIRE, COLLECT and EXTRACT STATISTICS commands of  *
      *     CICS to produce information about a CICS system.          *
      *     The reports include a CICS and MVS storage analysis.      *
      *     Statistics obtained using these commands can be used to   *
      *     aid the specification of the DSA Size parameters.         *
      *     (See the CICS Performance Guide and CICS Data Areas       *
      *      manuals for more information, and the CICS System        *
      *      Programming Reference for use of commands)               *
      *                                                               *
      *     These programs can be invoked from the PLT at PLTSD or    *
      *     as a CICS transaction (conversationally).                 *
      *     The output is sent via the CICS JES SPOOL interface for   *
      *     which a number of default parameters can be changed by    *
      *     the user to specify the distribution of the report(s).    *
      *     These defaults are defined in the working-storage         *
      *     section of the DFH0STAT program under the 01 level        *
      *     "OUTPUT-DEFAULTS".                                        *
      *                                                               *
      *     Installation instructions:-                               *
      *     Require SIT parameters:-  SPOOL=YES                       *
      *     Required CICS definitions:-                               *
      *         Transactions:-  STAT -> DFH0STAT                      *
      *         Programs:-    DFH0STAT   IBM COBOL                    *
      *                       DFH0STDB       for OS/390 & VM          *
      *                       DFH0STEJ           2.1.1 or later       *
      *                       DFH0STEP       "   "   "                *
      *                       DFH0STGN       "   "   "                *
      *                       DFH0STLK       "   "   "                *
      *                       DFH0STPR       "   "   "                *
      *                       DFH0STSA       "   "   "                *
      *                       DFH0STSY       "   "   "                *
      *                       DFH0STTP       "   "   "                *
      *                       DFH0STTS       "   "   "                *
      *                       DFH0STWB       "   "   "                *
      *                       DFH$STAS   Assembler                    *
      *                       DFH$STCN   Assembler                    *
      *                       DFH$STTB   Assembler                    *
      *         Mapsets:-     DFH0STM                                 *
      *                       DFH0STS                                 *
      *                                                               *
      *     The CICS-supplied RDO group, DFH$STAT, contains all       *
      *     the necessary resource definitions for this sample.       *
      *                                                               *
      *     All programs are command level and run above the          *
      *     16Mb line. Note: that DFH0STAT, DFH0STDB, DFH0STEJ,       *
      *     DFH0STEP, DFH0STGN, DFH0STLK, DFH0STPR, DFH0STSA,         *
      *     DFH0STSY, DFH0STTP, DFH0STTS, and DFH0STWB must be        *
      *     translated with the Translator options "COBOL3 and SP".   *
      *                                                               *
      *   SPOOL errors.  If an EXEC CICS SPOOL .. command fails       *
      *   when the program is run as a transaction, an error message  *
      *   is displayed on the users screen and the transaction will   *
      *   continue.  If the program is not being run from a terminal  *
      *   then a message will be sent to the console using EXEC       *
      *   CICS WRITE OPERATOR commands and the transaction will be    *
      *   terminated normally.                                        *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      * CHANGE ACTIVITY :                                             *
      *  $SEG(DFH0STTP),COMP(SAMPLES),PROD(CICS):                     *
      *                                                               *
      *  PN= REASON REL YYMMDD HDXIII : REMARKS                       *
      * $L0= 776    610 991027 HD1VCJB : Module created from DFH0STAT *
      * $L1= 795    610 991203 HD1VCJB : EJB Related Resources suppor *
      * $L2= 773    620 000627 HD1VCJB : Statistics Support for ECI   *
      * $L3= 819    620 010510 HD1VCJB : Discard STATS for corbaserve *
      * $L4= 852    640 040524 HD1VCJB: Statistics Updates for 3.1    *
      * $L5= 897    650 061010 HD1VCJB: LIBRARY Stats Infrastructure  *
      * $L6= 897    650 070125 HD1VCJB: Dynamic Library Support       *
      * $L7= 907    660 071005 HD1VCJB: Part 3 RDO audit for PROGRAM  *
      * $L8= 923    660 080515 HD1VCJB: Atomservice Statistics Support*
      * $L9= 927    660 080604 HD1VCJB: Event Processing Support      *
      * $LA= R00279 670 100310 HDIRSX : Add JVM server to programdef  *
      * $LB= R00290 670 100414 HD4PALT: new concurrency option        *
      * $D1= I07099 620 001013 HD1VCJB : Enhanced Logstream Statistic *
      * $D2= I07372 640 040127 HD4PALS: Remove HOTPOOLING             *
      * $D3= I07610 650 050506 HD1VCJB: Clock/Timestamp Formatting    *
      * $P1= M15441 610 000505 HD1VCJB : Statistics Consistency for T *
      * $P2= D03414 620 011105 HD1VCJB : Correct TSMODEL Report       *
      * $P3= D04942 630 021104 HD1VCJB: Missing TSMODEL Page Number   *
      * $P4= D03721 630 021106 HD4PALS: Remove jvmprogram from LD sts *
      * $P5= D06897 630 030317 HD4PALS: Jvmprogram count & stats      *
      * $P6= D11730 640 041021 HD1VCJB: Add API Status to Program repo*
      * $P7= D15023 650 060118 HD1VCJB: Program Total Report Descripti*
      * $P8= D16709 650 061019 HD1VCJB: Correct DFH0STAT Reports      *
      * $P9= D18343 650 070326 HD1VCJB: Large Lastused Interval value *
      * $PA= D18439 650 070405 HD1VCJB: Max DFHRPL dataset printing   *
      * $PB= D18479 650 070418 HD1VCJB: Missing fields in Pgm Report  *
      * $PC= D19533 660 080115 HD1VCJB: Program/DFHRPL Report Selectio*
      *      R48697 680 120329 HD1VCJB: JVMPOOL/JVMPROFILE Removal    *
      *      R38042 690 130404 HDAFDRB: Use EXTRACT STATISTICS more   *
      *      R38042 690 130422 HDIDNCS: Use EXTRACT STATISTICS more   *
      *      D73942 690 130626 HD1VCJB: Tranclass report truncation   *
      * $01= A76701 630 030812 HD4PALS: Migrate PQ76701 from SPA      *
      * $02= A83165 640 040130 HDNONER:VMigrate PQ83165 from SPA R630 *
      *      D98593 700 150106 HD3BADW: Fix comments                  *
      *     R141239 720 171010 HDLHJJH: Add transaction abend count   *
      *     D146617 720 180124 HDLHJJH: Total transaction abend count *
      *     D150786 720 181023 HDFVGMB: Add TRUNC(BIN) to PROCESS     *
      *                                                               *
      *****************************************************************
       ID DIVISION.
       PROGRAM-ID. DFH0STTP.

       ENVIRONMENT DIVISION.
           EJECT
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       77  STCN-COMMAREA               PIC S9(4)  COMP.
       77  INQUIRE-RESP                PIC S9(8)  COMP VALUE +0.
       77  INQUIRE-TRANSACTION-RESP    PIC S9(8)  COMP VALUE +0.
       77  INQUIRE-LIBRARY-RESP        PIC S9(8)  COMP VALUE +0.
       77  COLLECT-PROGRAM-RESP        PIC S9(8)  COMP VALUE +0.
       77  COLLECT-JVMPROGRAM-RESP     PIC S9(8)  COMP VALUE +0.

       77  SUB1                        PIC S9(4)  COMP VALUE +0.
       77  SUB2                        PIC S9(4)  COMP VALUE +0.
       77  SUB3                        PIC S9(4)  COMP VALUE +0.

       77  PERCENTAGE-WORK             PIC 99V9999     VALUE 0.
       77  PERCENTAGE                  PIC 999V99      VALUE 0.
       77  RESULT                      PIC S9(8)  COMP VALUE +0.
       77  RESULT-WORK                 PIC 9(18)  COMP VALUE 0.

       77  CURRENT-SECONDS             PIC S9(8)  COMP VALUE +0.

       77  DFHRPL-DATA-COLLECTED       PIC X           VALUE 'N'.
           EJECT
       77  TRANSACTION-ID              PIC X(4)        VALUE SPACES.
       77  TRANCLASS-NAME              PIC X(8)        VALUE SPACES.
       77  ISOLATE                     PIC S9(8)  COMP VALUE +0.
       77  TRANSACTION-DATAKEY         PIC S9(8)  COMP VALUE +0.
       77  TRANSACTION-DATALOC         PIC S9(8)  COMP VALUE +0.
       77  TRANSACTION-PRIORITY        PIC S9(8)  COMP VALUE +0.
       77  TRANSACTION-PROGRAM         PIC X(8)        VALUE SPACES.

       77  LIBRARY-NUMBER-OF-DSNAMES   PIC S9(8)  COMP VALUE +0.
       77  MAX-RPL-OFFSET              PIC S9(8)  COMP VALUE +0.

       77  PROGRAM-NAME                PIC X(8)        VALUE SPACES.
       77  PROGRAM-RUNTIME             PIC S9(8)  COMP VALUE +0.
       77  PROGRAM-LANGUAGE-DEDUCED    PIC S9(8)  COMP VALUE +0.
       77  PROGRAM-TYPE                PIC S9(8)  COMP VALUE +0.
       77  PROGRAM-DATALOC             PIC S9(8)  COMP VALUE +0.
       77  PROGRAM-EXECKEY             PIC S9(8)  COMP VALUE +0.
       77  PROGRAM-DYNAMIC             PIC S9(8)  COMP VALUE +0.
       77  PROGRAM-CONCURRENCY         PIC S9(8)  COMP VALUE +0.
       77  PROGRAM-API-STATUS          PIC S9(8)  COMP VALUE +0.
       77  PROGRAM-JVMCLASS            PIC X(255)      VALUE SPACES.
       77  PROGRAM-LIBRARY-NAME        PIC X(8)        VALUE SPACES.
       77  PROGRAM-LIBRARY-DSNAME      PIC X(44)       VALUE SPACES.
           EJECT
      *****************************************************************
      ***  Total fields                                             ***
      *****************************************************************
       77  TRANCLASS-TOTAL             PIC S9(9)  COMP-3 VALUE +0.
       77  TRANCLASS-TRANSACTIONS      PIC S9(9)  COMP-3 VALUE +0.
       77  TRANCLASS-ATTACHES          PIC S9(9)  COMP-3 VALUE +0.
       77  TRANCLASS-LIMIT-TOTAL       PIC S9(9)  COMP-3 VALUE +0.

       77  TRANSACTION-TOTAL           PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-TOTAL-1         PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-ATTACHES-1      PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-TOTAL-2         PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-ATTACHES-2      PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-TOTAL-3         PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-ATTACHES-3      PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-TOTAL-4         PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-ATTACHES-4      PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-TOTAL-5         PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-ATTACHES-5      PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-TOTAL-6         PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-ATTACHES-6      PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-TOTAL-7         PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-ATTACHES-7      PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-TOTAL-8         PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-ATTACHES-8      PIC S9(9)  COMP-3 VALUE +0.

       77  TRANSACTION-ATTACHES        PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-RESTARTS        PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-DYNAMIC-LOCAL   PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-DYNAMIC-REMOTE  PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-REMOTE-STARTS   PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-STG-VIOLATIONS  PIC S9(9)  COMP-3 VALUE +0.
       77  TRANSACTION-ABENDS          PIC S9(9)  COMP-3 VALUE +0.

       77  TIMES-USED                  PIC S9(9)  COMP-3 VALUE +0.
       77  TIMES-FETCHED               PIC S9(9)  COMP-3 VALUE +0.
       77  TIMES-NEWCOPY               PIC S9(9)  COMP-3 VALUE +0.
       77  TIMES-REMOVED               PIC S9(9)  COMP-3 VALUE +0.

       77  CDSA-PROGRAMS               PIC S9(9)  COMP-3 VALUE +0.
       77  SDSA-PROGRAMS               PIC S9(9)  COMP-3 VALUE +0.
       77  RDSA-PROGRAMS               PIC S9(9)  COMP-3 VALUE +0.
       77  ECDSA-PROGRAMS              PIC S9(9)  COMP-3 VALUE +0.
       77  ESDSA-PROGRAMS              PIC S9(9)  COMP-3 VALUE +0.
       77  ERDSA-PROGRAMS              PIC S9(9)  COMP-3 VALUE +0.

       77  LPA-PROGRAMS                PIC S9(9)  COMP-3 VALUE +0.
       77  ELPA-PROGRAMS               PIC S9(9)  COMP-3 VALUE +0.

       77  PROGRAM-TOTAL               PIC S9(9)  COMP-3 VALUE +0.
       77  UNUSED-PROGRAMS             PIC S9(9)  COMP-3 VALUE +0.
       77  NOT-LOCATED-PROGRAMS        PIC S9(9)  COMP-3 VALUE +0.

       77  PROGRAMS                    PIC S9(9)  COMP-3 VALUE +0.
       77  MAPS                        PIC S9(9)  COMP-3 VALUE +0.
       77  PARTITIONSETS               PIC S9(9)  COMP-3 VALUE +0.

       77  ASSEMBLER-PROGRAMS          PIC S9(9)  COMP-3 VALUE +0.
       77  C-PROGRAMS                  PIC S9(9)  COMP-3 VALUE +0.
       77  COBOL-PROGRAMS              PIC S9(9)  COMP-3 VALUE +0.
       77  JAVA-PROGRAMS               PIC S9(9)  COMP-3 VALUE +0.
       77  LE370-PROGRAMS              PIC S9(9)  COMP-3 VALUE +0.
       77  PL1-PROGRAMS                PIC S9(9)  COMP-3 VALUE +0.
       77  REMOTE-PROGRAMS             PIC S9(9)  COMP-3 VALUE +0.
       77  NOT-DEDUCED-PROGRAMS        PIC S9(9)  COMP-3 VALUE +0.
           EJECT
      *****************************************************************
      ***  Program total fields for DFHRPL and Non DFHRPL analysis. ***
      *****************************************************************
       01  DFHRPL-PROGRAM-TOTALS.
           03  DFHRPL-LIBRARY-NAME         PIC X(8)  VALUE 'DFHRPL  '.
           03  DFHRPL-TOTAL    OCCURS 96.
               05  DFHRPL-PROGRAMS             PIC S9(9)  COMP-3.
               05  DFHRPL-PROGRAM-USES         PIC S9(9)  COMP-3.
               05  DFHRPL-PROGRAM-FETCHES      PIC S9(9)  COMP-3.
               05  DFHRPL-PROGRAM-FETCH-TIME   PIC 9(8)   COMP.
               05  DFHRPL-PROGRAM-NEWCOPIES    PIC S9(9)  COMP-3.
               05  DFHRPL-PROGRAM-REMOVES      PIC S9(9)  COMP-3.

       01  NON-DFHRPL-PROGRAM-TOTALS.
           03  NON-DFHRPL-PROGRAMS             PIC S9(9)  COMP-3.
           03  NON-DFHRPL-PROGRAM-USES         PIC S9(9)  COMP-3.
           03  NON-DFHRPL-PROGRAM-FETCHES      PIC S9(9)  COMP-3.
           03  NON-DFHRPL-PROGRAM-FETCH-TIME   PIC 9(8)   COMP.
           03  NON-DFHRPL-PROGRAM-NEWCOPIES    PIC S9(9)  COMP-3.
           03  NON-DFHRPL-PROGRAM-REMOVES      PIC S9(9)  COMP-3.
           EJECT
      *****************************************************************
      ***  Report print line definitions                            ***
      *****************************************************************
       01  PRINT-LINE.
           03  PRINT-CONTROL           PIC X.
           03  PP1-132.
               05  FILLER              PIC XX.
               05  PP3-52              PIC X(50).
               05  FILLER              PIC XX.
               05  PP55-64             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X(68).
           03 FILLER REDEFINES PP1-132.
               05  PP1-18.
                   07  PP1-15.
                       09  PP1-14      PIC X(14).
                       09  FILLER      PIC X.
                   07  FILLER          PIC XXX.
               05  FILLER REDEFINES PP1-18.
                   07  PP1-12.
                       09  PP1-8       PIC X(8).
                       09  FILLER      PIC X(4).
                   07  FILLER          PIC X(6).
               05  FILLER              PIC X(114).
           03 FILLER REDEFINES PP1-132.
               05  PP1-19.
                   07  PP1-16          PIC X(16).
                   07  FILLER          PIC XXX.
               05  FILLER              PIC X(113).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC X(62).
               05  PP63-72             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP75-84             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X(26).
               05  PP111-120           PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP123-132           PIC ZZ,ZZZ,ZZ9.
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-6               PIC X(4).
               05  FILLER              PIC XX.
               05  PP9-16              PIC X(8).
               05  FILLER              PIC XX.
               05  PP19-26             PIC X(8).
               05  FILLER              PIC XX.
               05  PP29-35             PIC X(7).
               05  FILLER              PIC X(3).
               05  PP39-41             PIC XXX.
               05  FILLER              PIC X(4).
               05  PP46-50             PIC X(5).
               05  PP51                PIC X.
               05  PP52-55             PIC X(4).
               05  FILLER              PIC X(77).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-10              PIC X(8).
               05  FILLER              PIC XX.
               05  PP13-22.
                   07  PP13-17         PIC X(5).
                   07  PP18            PIC X.
                   07  PP19-22         PIC X(4).
               05  FILLER REDEFINES PP13-22.
                   07  PP13-22N        PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP25-34             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XXX.
               05  PP38-47             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X.
               05  PP49-62             PIC X(14).
               05  FILLER              PIC XX.
               05  PP65-78             PIC X(14).
               05  FILLER              PIC XX.
               05  PP81-88             PIC X(8).
               05  FILLER              PIC XX.
               05  PP91-93             PIC ZZ9.
               05  FILLER              PIC XX.
               05  FILLER              PIC XX.
               05  PP98-104            PIC ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP107-113           PIC ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP116-125           PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP128-132           PIC X(5).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC X(11).
               05  PP12-23             PIC X(12).
               05  FILLER              PIC X.
               05  PP25-34X            PIC X(10).
               05  FILLER              PIC XX.
               05  PP37-40             PIC X(4).
               05  FILLER              PIC XX.
               05  PP43-46             PIC X(4).
               05  FILLER              PIC XXX.
               05  PP50-54             PIC X(5).
               05  FILLER              PIC XXX.
               05  PP58-68             PIC X(11).
               05  FILLER              PIC XX.
               05  PP71-76             PIC X(6).
               05  FILLER              PIC XX.
               05  FILLER              PIC XXX.
               05  PP82-89             PIC X(8).
               05  FILLER              PIC XX.
               05  FILLER              PIC XX.
               05  PP94-96             PIC XXX.
               05  FILLER              PIC XXX.
               05  PP100-107           PIC X(8).
               05  FILLER              PIC XX.
               05  PP110-113           PIC X(4).
               05  FILLER              PIC XXX.
               05  PP117-120           PIC X(4).
               05  FILLER              PIC X.
               05  FILLER              PIC XX.
               05  FILLER              PIC X(9).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC X(26).
               05  PP27-30             PIC X(4).
               05  FILLER              PIC XXX.
               05  PP34-43             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP46-52             PIC ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP55-68             PIC X(14).
               05  FILLER              PIC XX.
               05  PP71-84             PIC X(14).
               05  FILLER              PIC XXX.
               05  PP88-90             PIC ZZ9.
               05  FILLER              PIC X(4).
               05  PP95-101            PIC ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP104-110           PIC ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP113-122           PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X(4).
               05  PP127-131           PIC X(5).
               05  FILLER              PIC X.
           03 FILLER REDEFINES PP1-132.
               05  PP1-23              PIC X(23).
               05  FILLER              PIC XX.
               05  PP26-35             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X.
               05  PP37-46             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP49-58             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP61-70             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP73-82             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP85-94             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP97-106            PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X(26).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC X(10).
               05  PP11-20             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP23-32             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP35-44             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP47-60             PIC X(14).
               05  FILLER              PIC X(37).
               05  PP98-105            PIC X(8).
               05  FILLER              PIC X(4).
               05  PP110-117           PIC X(8).
               05  FILLER              PIC X(15).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XXX.
               05  PP4-6               PIC ZZ9.
               05  FILLER              PIC X(4).
               05  PP11-54             PIC X(44).
               05  FILLER              PIC XX.
               05  PP57-66             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP69-78             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP81-90             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP93-106            PIC X(14).
               05  FILLER              PIC XX.
               05  PP109-118           PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP121-130           PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-34              PIC X(32).
               05  FILLER              PIC X(98).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-132.
                   07  PP3-102.
                       09  PP3-72.
                           11  PP3-37  PIC X(35).
                           11  PP38-72 PIC X(35).
                       09  PP73-102    PIC X(30).
                   07  PP103-132       PIC X(30).
               05  FILLER REDEFINES PP3-132.
                   07  PP3-130.
                       09  PP3-84.
                           11  PP3-8   PIC X(6).
                           11  FILLER  PIC X(76).
                       09  FILLER      PIC X(46).
                   07  FILLER          PIC XX.
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-59.
                   07  PP3-43.
                       09  PP3-31      PIC X(29).
                       09  FILLER      PIC X(12).
                   07  FILLER          PIC X(6).
                   07  PP50-59         PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X(73).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC X(67).
               05  PP68-77             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X.
               05  PP79-88             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X.
               05  PP90-99             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X.
               05  PP101-110           PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X.
               05  PP112-121           PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X(11).

           EJECT
       LINKAGE SECTION.
           EJECT
      *****************************************************************
      ***  Statistics Sample Programs Commarea.                     ***
      *****************************************************************
       01  DFHCOMMAREA.
           COPY DFH0STCM.
           EJECT
       01  DFHRPL-LIBRARY-DSNAMES.
           03  DFHRPL-LIBRARY-DSNAME OCCURS 1 TO 255
                           DEPENDING ON LIBRARY-NUMBER-OF-DSNAMES.
               05  FILLER              PIC X(44).
           EJECT
      *****************************************************************
      *** Data structures for Loader LIBRARY statistics             ***
      *** (See the CICS Data Areas manual)                          ***
      *****************************************************************
           COPY DFHLDBDS.
           EJECT
      *****************************************************************
      *** Data structures for Program statistics                    ***
      *** (See the CICS Data Areas manual)                          ***
      *****************************************************************
           COPY DFHLDRDS.
           EJECT
      *****************************************************************
      *** Data structures for Program Definition statistics         ***
      *** (See the CICS Data Areas manual)                          ***
      *****************************************************************
           COPY DFHPGDDS.
           EJECT
      *****************************************************************
      *** Data structures for Jvmprogram statistics                 ***
      *** (See the CICS Data Areas manual)                          ***
      *****************************************************************
           COPY DFHPGRDS.
           EJECT
      *****************************************************************
      *** Data structures for Storage Manager Domain Subpool stats  ***
      *** (See the CICS Data Areas manual)                          ***
      *****************************************************************
           COPY DFHSMDDS.
           EJECT
      *****************************************************************
      *** Data structures for Storage Manager DSA                   ***
      *** (See the CICS Data Areas manual)                          ***
      *****************************************************************
           COPY DFHSMSDS.
           EJECT
      *****************************************************************
      *** Data structures for Transaction Class statistics          ***
      *** (See the CICS Data Areas manual)                          ***
      *****************************************************************
           COPY DFHXMCDS.
           EJECT
      *****************************************************************
      *** Data structures for Transaction statistics                ***
      *** (See the CICS Data Areas manual)                          ***
      *****************************************************************
           COPY DFHXMRDS.
           EJECT
      *****************************************************************
      ***                                                           ***
      ***           CICS Collect and print statistics               ***
      ***                                                           ***
      *****************************************************************
       PROCEDURE DIVISION.

      *****************************************************************
      *** MAIN-PROCESSING                                           ***
      ***     Initialise the totals fields                          ***
      ***     Get CICS system information                           ***
      ***     Print the statistics reports                          ***
      ***     Return to DFH0STLK                                    ***
      *****************************************************************

       MAIN-PROCESSING SECTION.

           PERFORM TOTALS-INITIALISE.

           PERFORM PRINT-STATISTICS.

           EXEC CICS RETURN
           END-EXEC.

       MAIN-PROCESSING-EXIT.
           GOBACK.
           EJECT
      *****************************************************************
      *****************************************************************
      ***         Collect and Print the CICS Statistics             ***
      *****************************************************************
      *****************************************************************
      ***                                                           ***
      *** 1. Print the statistics in the following order:-          ***
      ***    - Transaction Classes                                  ***
      ***    - Transactions                                         ***
      ***    - Program Definitions                                  ***
      ***    - Programs                                             ***
      ***    - DFHRPL and LIBRARY Analysis                          ***
      ***    - Programs by DSA and LPA                              ***
      ***                                                           ***
      *****************************************************************
      *****************************************************************

       PRINT-STATISTICS SECTION.

           IF SELECT-TRANCLASS = 'Y' OR 'y' THEN
               PERFORM TRANCLASS-STATISTICS
           END-IF.

           IF SELECT-TRANSIDS = 'Y' OR 'y' THEN
               PERFORM TRANSACTION-STATISTICS
           END-IF.

           IF SELECT-PROGRAMDEFS = 'Y' OR 'y' THEN
               PERFORM PROGRAMDEF-STATISTICS
           END-IF.

           IF SELECT-PROGRAMS = 'Y' OR 'y' THEN
               PERFORM PROGRAM-STATISTICS
           END-IF.

           IF SELECT-DFHRPL-ANALYSIS = 'Y' OR 'y' THEN
               PERFORM PRINT-DFHRPL-ANALYSIS
           END-IF.

           IF SELECT-PROGRAMS-BY-DSA = 'Y' OR 'y' THEN
               PERFORM PROGRAM-STATISTICS-BY-DSA
           END-IF.

       PRINT-STATISTICS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** TRANCLASS-STATISTICS                                      ***
      ***   Print heading and transaction class statistics.         ***
      *****************************************************************
       TRANCLASS-STATISTICS SECTION.

           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO TRANCLASSES-PAGENO.

           MOVE '-'     TO PRINT-CONTROL.
           MOVE 'Transaction Classes' TO PP1-19.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-19.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      ***   Print the transaction class statistics - Pass 1.        ***
      *****************************************************************

           MOVE '0'       TO PRINT-CONTROL.

           EXEC CICS INQUIRE TRANCLASS START
           END-EXEC.

           EXEC CICS INQUIRE TRANCLASS(TRANCLASS-NAME) NEXT
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               IF LINE-COUNT > LINES-PER-PAGE THEN
                   PERFORM PAGE-HEADINGS
               END-IF

               IF SUB-HEADINGS = 'Y' THEN
                   PERFORM TRANCLASS-SUB-HEADINGS-1
               END-IF

               EXEC CICS EXTRACT STATISTICS TRANCLASS
                   RESID (TRANCLASS-NAME)
                   SET(ADDRESS OF DFHXMCDS)
               END-EXEC

               PERFORM TRANCLASS-TOTALS

               MOVE TRANCLASS-NAME TO PP3-10
               MOVE XMCITD         TO PP13-22N
               MOVE XMCTAT         TO PP25-34
               MOVE XMCMXT         TO PP37-46
               MOVE XMCTAMA        TO PP49-58
               MOVE XMCCAT         TO PP61-70
               MOVE XMCPAT         TO PP73-82
               MOVE XMCCQT         TO PP85-94
               MOVE XMCPQT         TO PP97-106
               MOVE XMCAI          TO PP109-118
               MOVE XMCAAQ         TO PP121-130
               PERFORM WRITE-OUTPUT

               EXEC CICS INQUIRE TRANCLASS(TRANCLASS-NAME) NEXT
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE TRANCLASS END
           END-EXEC.

      *****************************************************************
      ***   Print the Transaction Class totals.                     ***
      *****************************************************************
           IF TRANCLASS-TOTAL > 0 THEN
               PERFORM PRINT-TRANCLASS-TOTALS-1
           END-IF.

      *****************************************************************
           PERFORM PAGE-HEADINGS.

           MOVE '-'     TO PRINT-CONTROL.
           MOVE 'Transaction Classes' TO PP1-19.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-19.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      ***   Print the transaction class statistics - Pass 2.        ***
      *****************************************************************

           MOVE '0'       TO PRINT-CONTROL.

           EXEC CICS INQUIRE TRANCLASS START
           END-EXEC.

           EXEC CICS INQUIRE TRANCLASS(TRANCLASS-NAME) NEXT
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               IF LINE-COUNT > LINES-PER-PAGE THEN
                   PERFORM PAGE-HEADINGS
               END-IF

               IF SUB-HEADINGS = 'Y' THEN
                   PERFORM TRANCLASS-SUB-HEADINGS-2
               END-IF

               EXEC CICS EXTRACT STATISTICS TRANCLASS
                   RESID (TRANCLASS-NAME)
                   SET(ADDRESS OF DFHXMCDS)
               END-EXEC

               MOVE TRANCLASS-NAME TO PP3-10
               MOVE XMCITD         TO PP13-22N
               MOVE XMCMXT         TO PP25-34
               MOVE XMCPUR         TO PP37-46
               MOVE XMCTAPT        TO PP49-58
               MOVE XMCPI          TO PP61-70
               MOVE XMCPWQ         TO PP73-82
               MOVE XMCTQ          TO PP85-94
               MOVE XMCTQTME       TO STCK-WORK-A
               IF XMCTQ > 0 THEN
                   MOVE STCK-WORK-NUM-A TO RESULT-WORK
                   COMPUTE STCK-WORK-NUM-A = (RESULT-WORK / XMCTQ)
               END-IF
               MOVE STCK-WORK-A    TO CLOCK-FIELD
               PERFORM STOPWATCH-CONVERT
               MOVE STOPWATCH4-11  TO PP98-105
               MOVE XMCCQTME       TO STCK-WORK-A
               IF XMCCQT > 0 THEN
                   MOVE STCK-WORK-NUM-A TO RESULT-WORK
                   COMPUTE STCK-WORK-NUM-A = (RESULT-WORK / XMCCQT)
               END-IF
               MOVE STCK-WORK-A    TO CLOCK-FIELD
               PERFORM STOPWATCH-CONVERT
               MOVE STOPWATCH4-11  TO PP110-117
               PERFORM WRITE-OUTPUT

               EXEC CICS INQUIRE TRANCLASS(TRANCLASS-NAME) NEXT
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE TRANCLASS END
           END-EXEC.

      *****************************************************************
      ***   Print the Transaction Class totals.                     ***
      *****************************************************************
           IF TRANCLASS-TOTAL > 0 THEN
               PERFORM PRINT-TRANCLASS-TOTALS-2
           END-IF.

       TRANCLASS-STATISTICS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** TRANCLASS-SUB-HEADINGS                                    ***
      *****************************************************************
       TRANCLASS-SUB-HEADINGS-1 SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE ' Tclass     Trans      Attaches    ' TO PP3-37.
           MOVE '  Class     At Class     Current   ' TO PP38-72.
           MOVE '   Peak       Current      Pea'      TO PP73-102.
           MOVE 'k      Accepted    Accepted   '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '  Name    in Tclass   in Tclass    ' TO PP3-37.
           MOVE '  Limit       Limit      Active    ' TO PP38-72.
           MOVE '  Active      Queued      Queu'      TO PP73-102.
           MOVE 'ed     Immediate    Queued    '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-132.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'N'     TO SUB-HEADINGS.

       TRANCLASS-SUB-HEADINGS-1-EXIT.
           EXIT.

       TRANCLASS-SUB-HEADINGS-2 SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE ' Tclass     Trans        Class     ' TO PP3-37.
           MOVE '  Purge     At Purge     Purged    ' TO PP38-72.
           MOVE '  Purged      Total        Avg'      TO PP73-102.
           MOVE '.      Avg. Cur               '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '  Name    in Tclass      Limit     ' TO PP3-37.
           MOVE 'Threshold   Threshold   Immediate  ' TO PP38-72.
           MOVE '  Queued      Queued    Queue '      TO PP73-102.
           MOVE 'Time  Queue Time              '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-37
                           PP38-72
                           PP73-102.
           MOVE '________________              '      TO PP103-132.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'N'     TO SUB-HEADINGS.

       TRANCLASS-SUB-HEADINGS-2-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** TRANCLASS-TOTALS                                          ***
      *****************************************************************
       TRANCLASS-TOTALS SECTION.

           ADD 1      TO TRANCLASS-TOTAL.
           ADD XMCITD TO TRANCLASS-TRANSACTIONS.
           ADD XMCTAT TO TRANCLASS-ATTACHES.
           ADD XMCMXT TO TRANCLASS-LIMIT-TOTAL.

       TRANCLASS-TOTALS-EXIT.
           EXIT.

      *****************************************************************
      *** PRINT-TRANCLASS-TOTALS                                    ***
      *****************************************************************
       PRINT-TRANCLASS-TOTALS-1 SECTION.

      *****************************************************************
      ***  Make sure there's enough room for the column totals,     ***
      *** print them and print the total number of transaction      ***
      *** classes.                                                  ***
      *****************************************************************
           IF LINE-COUNT > (LINES-PER-PAGE - 4) THEN
               PERFORM PAGE-HEADINGS
               MOVE '-' TO PRINT-CONTROL
               PERFORM WRITE-OUTPUT
           END-IF.

           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-132.
           PERFORM WRITE-OUTPUT.
           MOVE 'Totals'               TO PP3-8.
           MOVE TRANCLASS-TRANSACTIONS TO PP13-22N.
           MOVE TRANCLASS-ATTACHES     TO PP25-34.
           MOVE TRANCLASS-LIMIT-TOTAL  TO PP37-46.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Transaction Classes . :' TO PP1-23.
           MOVE TRANCLASS-TOTAL           TO PP26-35.
           PERFORM WRITE-OUTPUT.

       PRINT-TRANCLASS-TOTALS-1-EXIT.
           EXIT.

       PRINT-TRANCLASS-TOTALS-2 SECTION.

      *****************************************************************
      ***  Make sure there's enough room for the column totals,     ***
      *** print them and print the total number of transaction      ***
      *** classes.                                                  ***
      *****************************************************************
           IF LINE-COUNT > (LINES-PER-PAGE - 4) THEN
               PERFORM PAGE-HEADINGS
               MOVE '-' TO PRINT-CONTROL
               PERFORM WRITE-OUTPUT
           END-IF.

           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-37
                           PP38-72
                           PP73-102.
           MOVE '________________              '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE 'Totals'               TO PP3-8.
           MOVE TRANCLASS-TRANSACTIONS TO PP13-22N.
           MOVE TRANCLASS-LIMIT-TOTAL  TO PP25-34.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Transaction Classes . :' TO PP1-23.
           MOVE TRANCLASS-TOTAL           TO PP26-35.
           PERFORM WRITE-OUTPUT.

       PRINT-TRANCLASS-TOTALS-2-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** TRANSACTION-STATISTICS                                    ***
      ***   Print heading and transaction statistics.               ***
      *****************************************************************
       TRANSACTION-STATISTICS SECTION.

           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO TRANSACTIONS-PAGENO.

           MOVE '-'     TO PRINT-CONTROL.
           MOVE 'Transactions' TO PP1-12.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-12.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      ***   Print the transaction statistics.                       ***
      *****************************************************************

           MOVE '0'       TO PRINT-CONTROL.

           EXEC CICS INQUIRE TRANSACTION START
           END-EXEC.

           EXEC CICS INQUIRE TRANSACTION(TRANSACTION-ID) NEXT
               ISOLATEST(ISOLATE)
               TASKDATAKEY(TRANSACTION-DATAKEY)
               TASKDATALOC(TRANSACTION-DATALOC)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               IF LINE-COUNT > LINES-PER-PAGE THEN
                   PERFORM PAGE-HEADINGS
               END-IF

               IF SUB-HEADINGS = 'Y' THEN
                   PERFORM TRANSACTION-SUB-HEADINGS
               END-IF

               EXEC CICS EXTRACT STATISTICS TRANSACTION
                   RESID(TRANSACTION-ID)
                   SET(ADDRESS OF DFHXMRDS)
               END-EXEC

               EVALUATE OUTPUT-ABBREV
      *        'U' means only show 'Used' transactions
                   WHEN 'U'
                       IF XMRAC > 0 THEN
                           PERFORM FORMAT-TRANSACTION-STATS
                           PERFORM WRITE-OUTPUT
                       END-IF
                   WHEN 'u'
                       IF XMRAC > 0 THEN
                           PERFORM FORMAT-TRANSACTION-STATS
                           PERFORM FORMAT-PROGRAM-STATS
                           PERFORM WRITE-OUTPUT
                       END-IF
      *        'N' means only show 'Not used' transactions
                   WHEN 'N'
                       IF XMRAC = 0 THEN
                           PERFORM FORMAT-TRANSACTION-STATS
                           PERFORM WRITE-OUTPUT
                       END-IF
                   WHEN 'n'
                       IF XMRAC = 0 THEN
                           PERFORM FORMAT-TRANSACTION-STATS
                           PERFORM WRITE-OUTPUT
                       END-IF
      *        otherwise show all transactions
                   WHEN OTHER
                       PERFORM FORMAT-TRANSACTION-STATS
                       PERFORM WRITE-OUTPUT
               END-EVALUATE

               EXEC CICS INQUIRE TRANSACTION(TRANSACTION-ID) NEXT
                   ISOLATEST(ISOLATE)
                   TASKDATAKEY(TRANSACTION-DATAKEY)
                   TASKDATALOC(TRANSACTION-DATALOC)
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE TRANSACTION END
           END-EXEC.

      *****************************************************************
      ***   Print the Transaction totals.                           ***
      *****************************************************************
           IF TRANSACTION-TOTAL > 0 THEN
               PERFORM PRINT-TRANSACTION-TOTALS
           END-IF.

       TRANSACTION-STATISTICS-EXIT.
           EXIT.
           EJECT
       FORMAT-TRANSACTION-STATS SECTION.

           PERFORM TRANSACTION-TOTALS.

           MOVE TRANSACTION-ID  TO PP3-6.
           MOVE XMRTCL          TO PP9-16.
           MOVE XMRPN           TO PP19-26.
           IF XMRDYN = 'Y' THEN
               MOVE 'Dynamic'   TO PP29-35
           ELSE
               MOVE 'Static '   TO PP29-35
           END-IF.
           EVALUATE ISOLATE
               WHEN DFHVALUE(ISOLATE)
                   MOVE 'Yes'   TO PP39-41
               WHEN DFHVALUE(NOISOLATE)
                   MOVE ' No'   TO PP39-41
               WHEN OTHER
                   CONTINUE
           END-EVALUATE.
           EVALUATE TRANSACTION-DATALOC
               WHEN DFHVALUE(BELOW)
                   MOVE 'Below' TO PP46-50
               WHEN DFHVALUE(ANY)
                   MOVE '  Any' TO PP46-50
               WHEN OTHER
                   CONTINUE
           END-EVALUATE.
           MOVE '/'             TO PP51.
           EVALUATE TRANSACTION-DATAKEY
               WHEN DFHVALUE(CICSDATAKEY)
                   MOVE 'CICS'  TO PP52-55
               WHEN DFHVALUE(USERDATAKEY)
                   MOVE 'USER'  TO PP52-55
               WHEN OTHER
                   CONTINUE
           END-EVALUATE.
           MOVE XMRAC           TO PP57-66.
           MOVE XMRRC           TO PP68-77.
           MOVE XMRDLC          TO PP79-88.
           MOVE XMRDRC          TO PP90-99.
           MOVE XMRRSC          TO PP101-110.
           MOVE XMRSVC          TO PP112-121.
           MOVE XMRAENDC        TO PP123-132.

       FORMAT-TRANSACTION-STATS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** TRANSACTION-SUB-HEADINGS                                  ***
      *****************************************************************
       TRANSACTION-SUB-HEADINGS SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Tran    Tran    Program            ' TO PP3-37.
           MOVE '        Task Data      Attach    Re' TO PP38-72.
           MOVE 'start   Dynamic --- Counts    '      TO PP73-102.
           MOVE '  Remote    Storage     Abend '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE ' id     Class     Name    Dynamic I' TO PP3-37.
           MOVE 'solate Location/Key    Count      C' TO PP38-72.
           MOVE 'ount     Local   -  Remote    '      TO PP73-102.
           MOVE '  Starts     Viols      Count '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-132.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'N'     TO SUB-HEADINGS.

       TRANSACTION-SUB-HEADINGS-EXIT.
           EXIT.

      *****************************************************************
      *** TRANSACTION-TOTALS                                        ***
      *****************************************************************
       TRANSACTION-TOTALS SECTION.

           ADD 1      TO TRANSACTION-TOTAL.
           ADD XMRAC  TO TRANSACTION-ATTACHES.
           ADD XMRRC  TO TRANSACTION-RESTARTS.
           ADD XMRDLC TO TRANSACTION-DYNAMIC-LOCAL.
           ADD XMRDRC TO TRANSACTION-DYNAMIC-REMOTE.
           ADD XMRRSC TO TRANSACTION-REMOTE-STARTS.
           ADD XMRSVC TO TRANSACTION-STG-VIOLATIONS.
           ADD XMRAENDC TO TRANSACTION-ABENDS.

           EVALUATE ISOLATE
               WHEN DFHVALUE(ISOLATE)
                   EVALUATE TRANSACTION-DATALOC
                       WHEN DFHVALUE(BELOW)
                           EVALUATE TRANSACTION-DATAKEY
                               WHEN DFHVALUE(CICSDATAKEY)
                                   ADD 1     TO TRANSACTION-TOTAL-1
                                   ADD XMRAC TO TRANSACTION-ATTACHES-1
                               WHEN DFHVALUE(USERDATAKEY)
                                   ADD 1     TO TRANSACTION-TOTAL-3
                                   ADD XMRAC TO TRANSACTION-ATTACHES-3
                           END-EVALUATE
                       WHEN DFHVALUE(ANY)
                           EVALUATE TRANSACTION-DATAKEY
                               WHEN DFHVALUE(CICSDATAKEY)
                                   ADD 1     TO TRANSACTION-TOTAL-2
                                   ADD XMRAC TO TRANSACTION-ATTACHES-2
                               WHEN DFHVALUE(USERDATAKEY)
                                   ADD 1     TO TRANSACTION-TOTAL-4
                                   ADD XMRAC TO TRANSACTION-ATTACHES-4
                           END-EVALUATE
                   END-EVALUATE
               WHEN DFHVALUE(NOISOLATE)
                   EVALUATE TRANSACTION-DATALOC
                       WHEN DFHVALUE(BELOW)
                           EVALUATE TRANSACTION-DATAKEY
                               WHEN DFHVALUE(CICSDATAKEY)
                                   ADD 1     TO TRANSACTION-TOTAL-5
                                   ADD XMRAC TO TRANSACTION-ATTACHES-5
                               WHEN DFHVALUE(USERDATAKEY)
                                   ADD 1     TO TRANSACTION-TOTAL-7
                                   ADD XMRAC TO TRANSACTION-ATTACHES-7
                           END-EVALUATE
                       WHEN DFHVALUE(ANY)
                           EVALUATE TRANSACTION-DATAKEY
                               WHEN DFHVALUE(CICSDATAKEY)
                                   ADD 1     TO TRANSACTION-TOTAL-6
                                   ADD XMRAC TO TRANSACTION-ATTACHES-6
                               WHEN DFHVALUE(USERDATAKEY)
                                   ADD 1     TO TRANSACTION-TOTAL-8
                                   ADD XMRAC TO TRANSACTION-ATTACHES-8
                           END-EVALUATE
                   END-EVALUATE
           END-EVALUATE.

       TRANSACTION-TOTALS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PRINT-TRANSACTION-TOTALS                                  ***
      *****************************************************************
       PRINT-TRANSACTION-TOTALS SECTION.

      *****************************************************************
      ***  Make sure there's enough room for the column totals,     ***
      *** print them and print the total number of transactions.    ***
      *****************************************************************
           IF LINE-COUNT > (LINES-PER-PAGE - 4) THEN
               PERFORM PAGE-HEADINGS
               MOVE '-' TO PRINT-CONTROL
               PERFORM WRITE-OUTPUT
           END-IF.

           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-132.
           PERFORM WRITE-OUTPUT.
           MOVE 'Totals'                   TO PP3-8.
           MOVE TRANSACTION-ATTACHES       TO PP57-66.
           MOVE TRANSACTION-RESTARTS       TO PP68-77.
           MOVE TRANSACTION-DYNAMIC-LOCAL  TO PP79-88.
           MOVE TRANSACTION-DYNAMIC-REMOTE TO PP90-99.
           MOVE TRANSACTION-REMOTE-STARTS  TO PP101-110.
           MOVE TRANSACTION-STG-VIOLATIONS TO PP112-121.
           MOVE TRANSACTION-ABENDS         TO PP123-132.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Transactions. . . . . :' TO PP1-23.
           MOVE TRANSACTION-TOTAL         TO PP26-35.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      ***  Print the transaction toals including subspace details.  ***
      *****************************************************************
           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO TRANSACTION-TOTALS-PAGENO.

           MOVE '-'     TO PRINT-CONTROL.
           MOVE 'Transaction Totals' TO PP1-18.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-18.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE '           Task Data    Subspace  T' TO PP3-37.
           MOVE 'ransaction    Attach               ' TO PP38-72.
           PERFORM WRITE-OUTPUT.
           MOVE ' Isolate  Location/Key   Usage     ' TO PP3-37.
           MOVE '  Count       Count                ' TO PP38-72.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-59.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE '   Yes     Below/CICS     None  ' TO PP3-34.
           MOVE TRANSACTION-TOTAL-1      TO PP37-46.
           MOVE TRANSACTION-ATTACHES-1   TO PP50-59.
           PERFORM WRITE-OUTPUT.
           MOVE '   Yes       Any/CICS     None  ' TO PP3-34.
           MOVE TRANSACTION-TOTAL-2      TO PP37-46.
           MOVE TRANSACTION-ATTACHES-2   TO PP50-59.
           PERFORM WRITE-OUTPUT.
           MOVE '   Yes     Below/USER    Unique ' TO PP3-34.
           MOVE TRANSACTION-TOTAL-3      TO PP37-46.
           MOVE TRANSACTION-ATTACHES-3   TO PP50-59.
           PERFORM WRITE-OUTPUT.
           MOVE '   Yes       Any/USER    Unique ' TO PP3-34.
           MOVE TRANSACTION-TOTAL-4      TO PP37-46.
           MOVE TRANSACTION-ATTACHES-4   TO PP50-59.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE '    No     Below/CICS    Common ' TO PP3-34.
           MOVE TRANSACTION-TOTAL-5      TO PP37-46.
           MOVE TRANSACTION-ATTACHES-5   TO PP50-59.
           PERFORM WRITE-OUTPUT.
           MOVE '    No       Any/CICS    Common ' TO PP3-34.
           MOVE TRANSACTION-TOTAL-6      TO PP37-46.
           MOVE TRANSACTION-ATTACHES-6   TO PP50-59.
           PERFORM WRITE-OUTPUT.
           MOVE '    No     Below/USER    Common ' TO PP3-34.
           MOVE TRANSACTION-TOTAL-7      TO PP37-46.
           MOVE TRANSACTION-ATTACHES-7   TO PP50-59.
           PERFORM WRITE-OUTPUT.
           MOVE '    No       Any/USER    Common ' TO PP3-34.
           MOVE TRANSACTION-TOTAL-8      TO PP37-46.
           MOVE TRANSACTION-ATTACHES-8   TO PP50-59.
           PERFORM WRITE-OUTPUT.

           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-59.
           PERFORM WRITE-OUTPUT.
           MOVE 'Totals'             TO PP3-8.
           MOVE TRANSACTION-TOTAL    TO PP37-46.
           MOVE TRANSACTION-ATTACHES TO PP50-59.
           PERFORM WRITE-OUTPUT.

           PERFORM PRINT-SUBSPACE-STATISTICS.

       PRINT-TRANSACTION-TOTALS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** SUBSPACE-STATISTICS                                       ***
      ***   Print heading and subspace statistics.                  ***
      *****************************************************************
       PRINT-SUBSPACE-STATISTICS SECTION.

      *****************************************************************
      *** Get the Storage Manager DSA statistics.                   ***
      *****************************************************************
           EXEC CICS EXTRACT STATISTICS STORAGE
               SET(ADDRESS OF DFHSMSDS)
           END-EXEC.

      *****************************************************************
      ***   Print heading and Subspace statistics                   ***
      *****************************************************************
           MOVE PAGENO TO SUBSPACE-PAGENO.

           MOVE '-'     TO PRINT-CONTROL.
           MOVE 'Subspace Statistics' TO PP1-19.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-19.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Current Unique Subspace Users (Isolate=Yes). . . :'
                       TO PP3-52.
           MOVE SMSUSSCUR                             TO PP55-64.
           PERFORM WRITE-OUTPUT.
           MOVE 'Peak Unique Subspace Users (Isolate=Yes) . . . . :'
                       TO PP3-52.
           MOVE SMSUSSHWM                             TO PP55-64.
           PERFORM WRITE-OUTPUT.
           MOVE 'Total Unique Subspace Users (Isolate=Yes). . . . :'
                       TO PP3-52.
           MOVE SMSUSSCUM                             TO PP55-64.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Current Common Subspace Users (Isolate=No) . . . :'
                       TO PP3-52.
           MOVE SMSCSSCUR                             TO PP55-64.
           PERFORM WRITE-OUTPUT.
           MOVE 'Peak Common Subspace Users (Isolate=No). . . . . :'
                       TO PP3-52.
           MOVE SMSCSSHWM                             TO PP55-64.
           PERFORM WRITE-OUTPUT.
           MOVE 'Total Common Subspace Users (Isolate=No) . . . . :'
                       TO PP3-52.
           MOVE SMSCSSCUM                             TO PP55-64.
           PERFORM WRITE-OUTPUT.

       PRINT-SUBSPACE-STATISTICS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PROGRAMDEF-STATISTICS                                     ***
      ***   Print heading and program definition statistics.        ***
      *****************************************************************
       PROGRAMDEF-STATISTICS SECTION.

           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO PROGRAMDEFS-PAGENO.

           MOVE '-'                   TO PRINT-CONTROL.
           MOVE 'Program Definitions' TO PP1-19.
           PERFORM WRITE-OUTPUT.
           MOVE '+'        TO PRINT-CONTROL.
           MOVE ALL '_'    TO PP1-19.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      ***   Print the program definition statistics.                ***
      *****************************************************************

           MOVE '0'       TO PRINT-CONTROL.

           EXEC CICS INQUIRE PROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               IF LINE-COUNT > LINES-PER-PAGE THEN
                   PERFORM PAGE-HEADINGS
               END-IF

               IF SUB-HEADINGS = 'Y' THEN
                   PERFORM PROGRAMDEF-SUB-HEADINGS
               END-IF

               EXEC CICS EXTRACT STATISTICS PROGRAMDEF
                   RESID(PROGRAM-NAME)
                   SET(ADDRESS OF DFHPGDDS)
                   NOHANDLE
               END-EXEC

               MOVE PROGRAM-NAME   TO PP3-10
               EVALUATE TRUE
                   WHEN PGD-TYPE-PROGRAM
                       MOVE 'Program     ' TO PP12-23
                   WHEN PGD-TYPE-MAPSET
                       MOVE 'Mapset      ' TO PP12-23
                   WHEN PGD-TYPE-PARTITIONSET
                       MOVE 'Partitionset' TO PP12-23
                   WHEN OTHER
                       CONTINUE
               END-EVALUATE

               EVALUATE TRUE
                   WHEN PGD-CONCURRENCY-QUASIRENT
                       MOVE 'Quasirent ' TO PP25-34X
                   WHEN PGD-CONCURRENCY-THREADSAFE
                       MOVE 'Threadsafe' TO PP25-34X
                   WHEN PGD-CONCURRENCY-REQUIRED
                       MOVE 'Required  ' TO PP25-34X
                   WHEN OTHER
                       CONTINUE
               END-EVALUATE

               EVALUATE TRUE
                   WHEN PGD-API-CICSAPI
                       MOVE 'CICS' TO PP37-40
                   WHEN PGD-API-OPENAPI
                       MOVE 'Open' TO PP37-40
                   WHEN OTHER
                       CONTINUE
               END-EVALUATE

               EVALUATE TRUE
                   WHEN PGD-CICS-KEY
                       MOVE 'CICS' TO PP43-46
                   WHEN PGD-USER-KEY
                       MOVE 'USER' TO PP43-46
                   WHEN OTHER
                       CONTINUE
               END-EVALUATE

               EVALUATE TRUE
                   WHEN PGD-DATA-LOC-BELOW
                       MOVE 'Below' TO PP50-54
                   WHEN PGD-DATA-LOC-ANY
                       MOVE 'Any  ' TO PP50-54
                   WHEN OTHER
                       CONTINUE
               END-EVALUATE

               EVALUATE TRUE
                   WHEN PGD-LANG-NOT-DEFINED
                       MOVE 'Not Defined' TO PP58-68
                   WHEN PGD-LANG-NOT-DEDUCED
                       MOVE 'Not Deduced' TO PP58-68
                   WHEN PGD-LANG-ASSEMBLER
                       MOVE 'Assembler  ' TO PP58-68
                   WHEN PGD-LANG-C
                       MOVE 'C          ' TO PP58-68
                   WHEN PGD-LANG-COBOL
                       MOVE 'COBOL      ' TO PP58-68
                   WHEN PGD-LANG-LE
                       MOVE 'LE         ' TO PP58-68
                   WHEN PGD-LANG-PLI
                       MOVE 'PLI        ' TO PP58-68
                   WHEN PGD-LANG-JAVA
                       MOVE 'Java       ' TO PP58-68
                   WHEN OTHER
                       CONTINUE
               END-EVALUATE

               EVALUATE TRUE
                   WHEN PGD-RUNTIME-ENV-JVM
                       MOVE 'Java  ' TO PP71-76
                   WHEN PGD-RUNTIME-ENV-LE
                       MOVE 'LE    ' TO PP71-76
                   WHEN PGD-RUNTIME-ENV-NONLE
                       MOVE 'Non-LE' TO PP71-76
                   WHEN PGD-RUNTIME-ENV-XPLINK
                       MOVE 'XPLINK' TO PP71-76
                   WHEN OTHER
                       CONTINUE
               END-EVALUATE

               MOVE PGD-PROGRAM-JVMSERVER  TO PP82-89

               EVALUATE TRUE
                   WHEN PGD-DYNAMIC-NO
                       MOVE 'No ' TO PP94-96
                   WHEN PGD-DYNAMIC-YES
                       MOVE 'Yes' TO PP94-96
                   WHEN OTHER
                       CONTINUE
               END-EVALUATE

               MOVE PGD-PROGRAM-REMOTE-NAME  TO PP100-107
               MOVE PGD-PROGRAM-TRAN-ID      TO PP110-113
               MOVE PGD-PROGRAM-REMOTE-SYSID TO PP117-120

               PERFORM WRITE-OUTPUT

               EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE PROGRAM END
           END-EXEC.

       PROGRAMDEF-STATISTICS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PROGRAMDEF-SUB-HEADINGS                                   ***
      *****************************************************************
       PROGRAMDEF-SUB-HEADINGS SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Program                            ' TO PP3-37.
           MOVE '     EXEC   Data     Language    Ru' TO PP38-72.
           MOVE 'ntime    JVM                Re'      TO PP73-102.
           MOVE 'mote  Remote  Remote          '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '  Name    Type        Concurrency A' TO PP3-37.
           MOVE 'PI   Key  Location   Deduced   Envi' TO PP38-72.
           MOVE 'ronment  server    Dynamic   N'      TO PP73-102.
           MOVE 'ame    Tran   System          '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-132.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'N'     TO SUB-HEADINGS.

       PROGRAMDEF-SUB-HEADINGS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PROGRAM-STATISTICS                                        ***
      ***   Print heading and program statistics.                   ***
      *****************************************************************
       PROGRAM-STATISTICS SECTION.

           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO PROGRAMS-PAGENO.

           MOVE '-'        TO PRINT-CONTROL.
           MOVE 'Programs' TO PP1-8.
           PERFORM WRITE-OUTPUT.
           MOVE '+'        TO PRINT-CONTROL.
           MOVE ALL '_'    TO PP1-8.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      ***   Print the program statistics.                           ***
      *****************************************************************

           MOVE '0'       TO PRINT-CONTROL.

           EXEC CICS INQUIRE PROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
               APIST(PROGRAM-API-STATUS)
               CONCURRENCY(PROGRAM-CONCURRENCY)
               DATALOCATION(PROGRAM-DATALOC)
               DYNAMSTATUS(PROGRAM-DYNAMIC)
               EXECKEY(PROGRAM-EXECKEY)
               JVMCLASS(PROGRAM-JVMCLASS)
               LANGDEDUCED(PROGRAM-LANGUAGE-DEDUCED)
               LIBRARY(PROGRAM-LIBRARY-NAME)
               LIBRARYDSN(PROGRAM-LIBRARY-DSNAME)
               RUNTIME(PROGRAM-RUNTIME)
               PROGTYPE(PROGRAM-TYPE)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               IF LINE-COUNT > LINES-PER-PAGE THEN
                   PERFORM PAGE-HEADINGS
               END-IF

               IF SUB-HEADINGS = 'Y' THEN
                   PERFORM PROGRAM-SUB-HEADINGS
               END-IF

               IF PROGRAM-RUNTIME NOT = DFHVALUE(JVM) THEN
                 EXEC CICS EXTRACT STATISTICS PROGRAM
                     RESID(PROGRAM-NAME)
                     SET(ADDRESS OF DFHLDRDS)
                     RESP(COLLECT-PROGRAM-RESP)
                 END-EXEC

                 EVALUATE OUTPUT-ABBREV
      *        'U' means only show 'Used' programs
                   WHEN 'U'
                       IF LDRTU > 0 THEN
                           PERFORM FORMAT-PROGRAM-STATS
                           PERFORM WRITE-OUTPUT
                       END-IF
                   WHEN 'u'
                       IF LDRTU > 0 THEN
                           PERFORM FORMAT-PROGRAM-STATS
                           PERFORM WRITE-OUTPUT
                       END-IF
      *        'N' means only show 'Not used' programs
                   WHEN 'N'
                       IF LDRTU = 0 THEN
                           PERFORM FORMAT-PROGRAM-STATS
                           PERFORM WRITE-OUTPUT
                       END-IF
                   WHEN 'n'
                       IF LDRTU = 0 THEN
                           PERFORM FORMAT-PROGRAM-STATS
                           PERFORM WRITE-OUTPUT
                       END-IF
      *        otherwise show all programs
                   WHEN OTHER
                       PERFORM FORMAT-PROGRAM-STATS
                       PERFORM WRITE-OUTPUT
                 END-EVALUATE
               END-IF

               IF PROGRAM-RUNTIME = DFHVALUE(JVM) THEN
                 EXEC CICS EXTRACT STATISTICS JVMPROGRAM
                     RESID(PROGRAM-NAME)
                     SET(ADDRESS OF DFHPGRDS)
                     RESP(COLLECT-JVMPROGRAM-RESP)
                 END-EXEC

                 EVALUATE OUTPUT-ABBREV
      *        'U' means only show 'Used' programs
                   WHEN 'U'
                       IF PGR-JVMPROGRAM-USECOUNT > 0 THEN
                           PERFORM FORMAT-JVMPROGRAM-STATS
                           PERFORM WRITE-OUTPUT
                       END-IF
                   WHEN 'u'
                       IF PGR-JVMPROGRAM-USECOUNT > 0 THEN
                           PERFORM FORMAT-JVMPROGRAM-STATS
                           PERFORM WRITE-OUTPUT
                       END-IF
      *        'N' means only show 'Not used' programs
                   WHEN 'N'
                       IF PGR-JVMPROGRAM-USECOUNT = 0 THEN
                           PERFORM FORMAT-JVMPROGRAM-STATS
                           PERFORM WRITE-OUTPUT
                       END-IF
                   WHEN 'n'
                       IF PGR-JVMPROGRAM-USECOUNT = 0 THEN
                           PERFORM FORMAT-JVMPROGRAM-STATS
                           PERFORM WRITE-OUTPUT
                       END-IF
      *        otherwise show all programs
                   WHEN OTHER
                       PERFORM FORMAT-JVMPROGRAM-STATS
                       PERFORM WRITE-OUTPUT
                 END-EVALUATE
               END-IF

               EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
                   APIST(PROGRAM-API-STATUS)
                   CONCURRENCY(PROGRAM-CONCURRENCY)
                   DATALOCATION(PROGRAM-DATALOC)
                   DYNAMSTATUS(PROGRAM-DYNAMIC)
                   EXECKEY(PROGRAM-EXECKEY)
                   JVMCLASS(PROGRAM-JVMCLASS)
                   LANGDEDUCED(PROGRAM-LANGUAGE-DEDUCED)
                   LIBRARY(PROGRAM-LIBRARY-NAME)
                   LIBRARYDSN(PROGRAM-LIBRARY-DSNAME)
                   PROGTYPE(PROGRAM-TYPE)
                   RUNTIME(PROGRAM-RUNTIME)
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE PROGRAM END
           END-EXEC.

      *****************************************************************
           MOVE 'Y' TO DFHRPL-DATA-COLLECTED.

      *****************************************************************
      ***   Print the Program totals.                               ***
      *****************************************************************

           IF PROGRAM-TOTAL > 0 THEN
               PERFORM PRINT-PROGRAM-TOTALS
           END-IF.

       PROGRAM-STATISTICS-EXIT.
           EXIT.
           EJECT
       FORMAT-PROGRAM-STATS SECTION.

           ADD 1 TO PROGRAM-TOTAL.

           MOVE PROGRAM-NAME   TO PP3-10.
           EVALUATE PROGRAM-DATALOC
               WHEN DFHVALUE(BELOW)
                  MOVE 'Below' TO PP13-17
               WHEN DFHVALUE(ANY)
                  MOVE '  Any' TO PP13-17
               WHEN OTHER
                  MOVE '     ' TO PP13-17
           END-EVALUATE.
           MOVE '/'            TO PP18
           EVALUATE PROGRAM-EXECKEY
               WHEN DFHVALUE(CICSEXECKEY)
                   MOVE 'CICS' TO PP19-22
               WHEN DFHVALUE(USEREXECKEY)
                   MOVE 'USER' TO PP19-22
               WHEN OTHER
                   MOVE '    ' TO PP19-22
           END-EVALUATE.
           EVALUATE PROGRAM-TYPE
               WHEN DFHVALUE(PROGRAM)
                   PERFORM DETERMINE-PROGRAM-TYPE
               WHEN DFHVALUE(MAP)
                   ADD 1 TO MAPS
               WHEN DFHVALUE(PARTITIONSET)
                   ADD 1 TO PARTITIONSETS
               WHEN OTHER
                   CONTINUE
           END-EVALUATE.
           MOVE LDRTU         TO PP25-34.
           IF LDRPSIZE > 0 THEN
               PERFORM PROGRAM-TOTALS
               IF NOT LDRLPACO AND NOT LDRELPCO THEN
                   MOVE LDRFC     TO PP37-46
                   IF LDRFC > 0 THEN
                       MOVE LDRFT TO CLOCK-FIELD-S
                       PERFORM STOPWATCH-CONVERT
                       MOVE STOPWATCH TO PP49-62
                       COMPUTE CLOCK-FIELD-S = (LDRFT / LDRFC)
                       PERFORM STOPWATCH-CONVERT
                       MOVE STOPWATCH TO PP65-78
                   END-IF
                   MOVE LDRLBNM   TO PP81-88
                   MOVE LDRRPLO   TO PP91-93
               END-IF
               MOVE LDRPSIZE  TO PP116-125
               IF LDRNOCO
                   ADD 1 TO UNUSED-PROGRAMS
               END-IF
           ELSE
               ADD 1 TO NOT-LOCATED-PROGRAMS
           END-IF.
           MOVE LDRTN       TO PP98-104.
           MOVE LDRRPC      TO PP107-113.
           EVALUATE TRUE
               WHEN LDRNOCO
                   MOVE 'None ' TO PP128-132
               WHEN LDRCDCO
                   ADD 1 TO CDSA-PROGRAMS
                   MOVE 'CDSA ' TO PP128-132
               WHEN LDRRDCO
                   ADD 1 TO RDSA-PROGRAMS
                   MOVE 'RDSA ' TO PP128-132
               WHEN LDRSDCO
                   ADD 1 TO SDSA-PROGRAMS
                   MOVE 'SDSA ' TO PP128-132
               WHEN LDRECDCO
                   ADD 1 TO ECDSA-PROGRAMS
                   MOVE 'ECDSA' TO PP128-132
               WHEN LDRESDCO
                   ADD 1 TO ESDSA-PROGRAMS
                   MOVE 'ESDSA' TO PP128-132
               WHEN LDRERDCO
                   ADD 1 TO ERDSA-PROGRAMS
                   MOVE 'ERDSA' TO PP128-132
               WHEN LDRLPACO
                   ADD 1 TO LPA-PROGRAMS
                   MOVE 'LPA '  TO PP128-132
               WHEN LDRELPCO
                   ADD 1 TO ELPA-PROGRAMS
                   MOVE 'ELPA ' TO PP128-132
               WHEN OTHER
                   MOVE 'None ' TO PP128-132
           END-EVALUATE.

       FORMAT-PROGRAM-STATS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *  Jvmprogram stats section                                     *
      *****************************************************************
       FORMAT-JVMPROGRAM-STATS SECTION.

           ADD 1 TO PROGRAM-TOTAL.

           MOVE PROGRAM-NAME   TO PP3-10.

           EVALUATE PROGRAM-EXECKEY
               WHEN DFHVALUE(CICSEXECKEY)
                   MOVE 'CICS' TO PP19-22
               WHEN DFHVALUE(USEREXECKEY)
                   MOVE 'USER' TO PP19-22
               WHEN OTHER
                   MOVE '    ' TO PP19-22
           END-EVALUATE.

           PERFORM DETERMINE-PROGRAM-TYPE.

           MOVE PGR-JVMPROGRAM-USECOUNT TO PP25-34.

           ADD 1 TO NOT-LOCATED-PROGRAMS.

       FORMAT-JVMPROGRAM-STATS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PROGRAM-SUB-HEADINGS                                      ***
      *****************************************************************
       PROGRAM-SUB-HEADINGS SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Program   Data Loc/                ' TO PP3-37.
           MOVE '  Times         Total         Avera' TO PP38-72.
           MOVE 'ge      <-- LIBRARY -->   Time'      TO PP73-102.
           MOVE 's    Times    Program    Prog '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '  Name     Exec Key   Times Used   ' TO PP3-37.
           MOVE ' Fetched     Fetch Time      Fetch ' TO PP38-72.
           MOVE 'Time    Name     Offset  Newco'      TO PP73-102.
           MOVE 'py  Removed     Size     Locn '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-132.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'N'     TO SUB-HEADINGS.

       PROGRAM-SUB-HEADINGS-EXIT.
           EXIT.

       DETERMINE-PROGRAM-TYPE SECTION.

           ADD 1 TO PROGRAMS.
           EVALUATE PROGRAM-LANGUAGE-DEDUCED
               WHEN DFHVALUE(ASSEMBLER)
                   IF PROGRAM-RUNTIME = DFHVALUE(JVM) THEN
                       ADD 1 TO JAVA-PROGRAMS
                   ELSE
                       ADD 1 TO ASSEMBLER-PROGRAMS
                   END-IF
               WHEN DFHVALUE(C)
                   IF PROGRAM-RUNTIME = DFHVALUE(JVM) THEN
                       ADD 1 TO JAVA-PROGRAMS
                   ELSE
                       ADD 1 TO C-PROGRAMS
                   END-IF
               WHEN DFHVALUE(COBOL)
                   IF PROGRAM-RUNTIME = DFHVALUE(JVM) THEN
                       ADD 1 TO JAVA-PROGRAMS
                   ELSE
                       ADD 1 TO COBOL-PROGRAMS
                   END-IF
               WHEN DFHVALUE(JAVA)
                   IF PROGRAM-RUNTIME = DFHVALUE(JVM) THEN
                       ADD 1 TO JAVA-PROGRAMS
                   ELSE
                       ADD 1 TO NOT-DEDUCED-PROGRAMS
                   END-IF
               WHEN DFHVALUE(LE370)
                   IF PROGRAM-RUNTIME = DFHVALUE(JVM) THEN
                       ADD 1 TO JAVA-PROGRAMS
                   ELSE
                       ADD 1 TO LE370-PROGRAMS
                   END-IF
               WHEN DFHVALUE(PLI)
                   IF PROGRAM-RUNTIME = DFHVALUE(JVM) THEN
                       ADD 1 TO JAVA-PROGRAMS
                   ELSE
                       ADD 1 TO PL1-PROGRAMS
                   END-IF
               WHEN DFHVALUE(PL1)
                   IF PROGRAM-RUNTIME = DFHVALUE(JVM) THEN
                       ADD 1 TO JAVA-PROGRAMS
                   ELSE
                       ADD 1 TO PL1-PROGRAMS
                   END-IF
               WHEN DFHVALUE(NOTAPPLIC)
                   ADD 1 TO REMOTE-PROGRAMS
               WHEN DFHVALUE(NOTDEFINED)
                   IF PROGRAM-RUNTIME = DFHVALUE(JVM) THEN
                       ADD 1 TO JAVA-PROGRAMS
                   ELSE
                       ADD 1 TO NOT-DEDUCED-PROGRAMS
                   END-IF
               WHEN OTHER
                   ADD 1 TO NOT-DEDUCED-PROGRAMS
           END-EVALUATE.

       DETERMINE-PROGRAM-TYPE-EXIT.
           EXIT.

      *****************************************************************
      *** PROGRAM-TOTALS                                            ***
      *****************************************************************
       PROGRAM-TOTALS SECTION.

           MOVE LDRRPLO TO SUB1.
           ADD 1        TO SUB1.

           IF PROGRAM-LIBRARY-NAME = 'DFHRPL  ' THEN
               IF SUB1 NOT > 96 THEN
                   ADD 1        TO DFHRPL-PROGRAMS(SUB1)
                   ADD LDRTU    TO TIMES-USED
                                   DFHRPL-PROGRAM-USES(SUB1)
                   ADD LDRFC    TO TIMES-FETCHED
                                   DFHRPL-PROGRAM-FETCHES(SUB1)
                   ADD LDRFT    TO DFHRPL-PROGRAM-FETCH-TIME(SUB1)
                   ADD LDRTN    TO TIMES-NEWCOPY
                                   DFHRPL-PROGRAM-NEWCOPIES(SUB1)
                   ADD LDRRPC   TO TIMES-REMOVED
                                   DFHRPL-PROGRAM-REMOVES(SUB1)
               END-IF
           ELSE
               ADD 1        TO NON-DFHRPL-PROGRAMS
               ADD LDRTU    TO TIMES-USED
                               NON-DFHRPL-PROGRAM-USES
               ADD LDRFC    TO TIMES-FETCHED
                               NON-DFHRPL-PROGRAM-FETCHES
               ADD LDRFT    TO NON-DFHRPL-PROGRAM-FETCH-TIME
               ADD LDRTN    TO TIMES-NEWCOPY
                               NON-DFHRPL-PROGRAM-NEWCOPIES
               ADD LDRRPC   TO TIMES-REMOVED
                               NON-DFHRPL-PROGRAM-REMOVES
           END-IF.

       PROGRAM-TOTALS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PRINT-PROGRAM-TOTALS                                      ***
      *****************************************************************
       PRINT-PROGRAM-TOTALS SECTION.

      *****************************************************************
      ***  Print the Program Column Totals.                         ***
      *****************************************************************
           PERFORM PRINT-PROGRAM-COLUMN-TOTALS.

      *****************************************************************
      ***  Print the Program Totals.                                ***
      *****************************************************************
           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO PROGRAM-TOTALS-PAGENO.

           MOVE '-'              TO PRINT-CONTROL.
           MOVE 'Program Totals' TO PP1-14.
           PERFORM WRITE-OUTPUT.
           MOVE '+'              TO PRINT-CONTROL.
           MOVE ALL '_'          TO PP1-14.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Programs. . . . . . . . . . :' TO PP3-31.
           MOVE PROGRAMS                        TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE '  Assembler . . . . . . . . :' TO PP3-31.
           MOVE ASSEMBLER-PROGRAMS              TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE '  C . . . . . . . . . . . . :' TO PP3-31.
           MOVE C-PROGRAMS                      TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE '  COBOL . . . . . . . . . . :' TO PP3-31.
           MOVE COBOL-PROGRAMS                  TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE '  Java (JVM). . . . . . . . :' TO PP3-31.
           MOVE JAVA-PROGRAMS                   TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE '  Language Environment. . . :' TO PP3-31.
           MOVE LE370-PROGRAMS                  TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE '  PL1 . . . . . . . . . . . :' TO PP3-31.
           MOVE PL1-PROGRAMS                    TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE '  Remote. . . . . . . . . . :' TO PP3-31.
           MOVE REMOTE-PROGRAMS                 TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE '  Not Deduced . . . . . . . :' TO PP3-31.
           MOVE NOT-DEDUCED-PROGRAMS            TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE 'Maps. . . . . . . . . . . . :' TO PP3-31.
           MOVE MAPS                            TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE 'Partitionsets . . . . . . . :' TO PP3-31.
           MOVE PARTITIONSETS                   TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE '+'                             TO PRINT-CONTROL.
           MOVE ALL '_'                         TO PP3-43.
           PERFORM WRITE-OUTPUT.
           MOVE 'Total . . . . . . . . . . . :' TO PP3-31.
           MOVE PROGRAM-TOTAL                   TO PP34-43.
           PERFORM WRITE-OUTPUT.

           MOVE '-' TO PRINT-CONTROL.
           MOVE 'CDSA Programs . . . . . . . :' TO PP3-31.
           MOVE CDSA-PROGRAMS                   TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE 'SDSA Programs . . . . . . . :' TO PP3-31.
           MOVE SDSA-PROGRAMS                   TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE 'RDSA Programs . . . . . . . :' TO PP3-31.
           MOVE RDSA-PROGRAMS                   TO PP34-43.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'ECDSA Programs. . . . . . . :' TO PP3-31.
           MOVE ECDSA-PROGRAMS                  TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE 'ESDSA Programs. . . . . . . :' TO PP3-31.
           MOVE ESDSA-PROGRAMS                  TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE 'ERDSA Programs. . . . . . . :' TO PP3-31.
           MOVE ERDSA-PROGRAMS                  TO PP34-43.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'LPA Programs. . . . . . . . :' TO PP3-31.
           MOVE LPA-PROGRAMS                    TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE 'ELPA Programs . . . . . . . :' TO PP3-31.
           MOVE ELPA-PROGRAMS                   TO PP34-43.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Unused Programs . . . . . . :' TO PP3-31.
           MOVE UNUSED-PROGRAMS                 TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE 'Not Located Programs. . . . :' TO PP3-31.
           MOVE NOT-LOCATED-PROGRAMS            TO PP34-43.
           PERFORM WRITE-OUTPUT.
           MOVE '+' TO PRINT-CONTROL.
           MOVE ALL '_'                         TO PP3-43.
           PERFORM WRITE-OUTPUT.
           MOVE 'Total . . . . . . . . . . . :' TO PP3-31.
           MOVE PROGRAM-TOTAL                   TO PP34-43.
           PERFORM WRITE-OUTPUT.

       PRINT-PROGRAM-TOTALS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PRINT-PROGRAM-COLUMN-TOTALS                               ***
      *****************************************************************
       PRINT-PROGRAM-COLUMN-TOTALS SECTION.

      *****************************************************************
      ***  Print the Program Column Totals.                         ***
      *****************************************************************
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-132.
           PERFORM WRITE-OUTPUT.
           MOVE 'Totals'      TO PP3-8.
           MOVE TIMES-USED    TO PP25-34.
           MOVE TIMES-FETCHED TO PP38-47.
           MOVE TIMES-NEWCOPY TO PP98-104.
           MOVE TIMES-REMOVED TO PP107-113.
           PERFORM WRITE-OUTPUT.

       PRINT-PROGRAM-COLUMN-TOT-EXIT.
           EXIT.

      *****************************************************************
      *** PRINT-PROGRAM-COLUMN-TOTALS-2                             ***
      *****************************************************************
       PRINT-PROGRAM-COLUMN-TOTALS-2 SECTION.

      *****************************************************************
      ***  Print the Program Column Totals.                         ***
      *****************************************************************
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-132.
           PERFORM WRITE-OUTPUT.
           MOVE 'Totals'      TO PP3-8.
           MOVE TIMES-USED    TO PP34-43.
           MOVE TIMES-FETCHED TO PP46-52.
           MOVE TIMES-NEWCOPY TO PP95-101.
           MOVE TIMES-REMOVED TO PP104-110.
           PERFORM WRITE-OUTPUT.

       PRINT-PROGRAM-COLUMN-TOT2-EXIT.
           EXIT.

       RESET-PROGRAM-COLUMN-TOTALS SECTION.

      *****************************************************************
      ***  Reset the Program Column Totals.                         ***
      *****************************************************************

           MOVE 0 TO PROGRAM-TOTAL TIMES-USED TIMES-FETCHED
                     TIMES-NEWCOPY TIMES-REMOVED.

       RESET-PROGRAM-COLUMN-TOT-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PRINT-DFHRPL-ANALYSIS                                     ***
      ***   Print an analysis of programs by the DFHRPL or LIBRARY  ***
      ***   concatenation.                                          ***
      *****************************************************************
       PRINT-DFHRPL-ANALYSIS SECTION.

      *****************************************************************
      ***                                                           ***
      *****************************************************************
           IF DFHRPL-DATA-COLLECTED = 'N' THEN
               PERFORM COLLECT-DFHRPL-STATS
           END-IF.

      *****************************************************************
           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO DFHRPL-ANALYSIS-PAGENO.

           MOVE '-'               TO PRINT-CONTROL.
           MOVE 'DFHRPL Analysis' TO PP1-15.
           PERFORM WRITE-OUTPUT.
           MOVE '+'               TO PRINT-CONTROL.
           MOVE ALL '_'           TO PP1-15.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
           EXEC CICS EXTRACT STATISTICS LIBRARY
               RESID(DFHRPL-LIBRARY-NAME)
               SET(ADDRESS OF DFHLDBDS)
               NOHANDLE
           END-EXEC.

           PERFORM DFHRPL-SUB-HEADINGS.

           EXEC CICS INQUIRE LIBRARY(DFHRPL-LIBRARY-NAME)
               NUMDSNAMES(LIBRARY-NUMBER-OF-DSNAMES)
               DSNAMELIST(ADDRESS OF DFHRPL-LIBRARY-DSNAMES)
               RESP(INQUIRE-RESP)
           END-EXEC.

      *****************************************************************
      *** Now print the information for each DFHRPL dataset used.   ***
      *****************************************************************
           MOVE 1   TO SUB1.
           MOVE 0   TO SUB2.

           IF LIBRARY-NUMBER-OF-DSNAMES > 96 THEN
               MOVE 96 TO MAX-RPL-OFFSET
           ELSE
              MOVE LIBRARY-NUMBER-OF-DSNAMES TO MAX-RPL-OFFSET
           END-IF.

           PERFORM WITH TEST BEFORE
               UNTIL SUB1 > MAX-RPL-OFFSET

               IF LINE-COUNT > LINES-PER-PAGE THEN
                   PERFORM PAGE-HEADINGS
               END-IF

               IF SUB-HEADINGS = 'Y' THEN
                   PERFORM DFHRPL-SUB-HEADINGS
               END-IF

               MOVE SUB2                           TO PP4-6
               MOVE DFHRPL-LIBRARY-DSNAME(SUB1)    TO PP11-54
               MOVE DFHRPL-PROGRAMS(SUB1)          TO PP57-66
               MOVE DFHRPL-PROGRAM-USES(SUB1)      TO PP69-78
               MOVE DFHRPL-PROGRAM-FETCHES(SUB1)   TO PP81-90
               IF DFHRPL-PROGRAM-FETCHES(SUB1) > 0 THEN
                   COMPUTE CLOCK-FIELD-S =
                       (DFHRPL-PROGRAM-FETCH-TIME(SUB1) /
                                       DFHRPL-PROGRAM-FETCHES(SUB1))
                   PERFORM STOPWATCH-CONVERT
                   MOVE STOPWATCH                  TO PP93-106
               END-IF
               MOVE DFHRPL-PROGRAM-NEWCOPIES(SUB1) TO PP109-118
               MOVE DFHRPL-PROGRAM-REMOVES(SUB1)   TO PP121-130

               PERFORM WRITE-OUTPUT

               ADD 1 TO SUB1
                        SUB2

           END-PERFORM.

      *****************************************************************
      *** Now print the totals for 'ALL' the DFHRPL datasets used.  ***
      *****************************************************************
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-130.
           PERFORM WRITE-OUTPUT.
           MOVE 'Totals'      TO PP3-8.
           COMPUTE RESULT = (PROGRAM-TOTAL - NOT-LOCATED-PROGRAMS).
           MOVE RESULT        TO PP57-66.
           MOVE TIMES-USED    TO PP69-78.
           MOVE TIMES-FETCHED TO PP81-90.
           MOVE TIMES-NEWCOPY TO PP109-118.
           MOVE TIMES-REMOVED TO PP121-130.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      *** Now print the totals for 'ALL' the LIBRARY (other than    ***
      *** DFHRPL) datasets used.                                    ***
      *****************************************************************

           IF LINE-COUNT > (LINES-PER-PAGE - 10) THEN
               PERFORM PAGE-HEADINGS
           END-IF.

           MOVE '-'                TO PRINT-CONTROL.
           MOVE 'LIBRARY Analysis' TO PP1-16.
           PERFORM WRITE-OUTPUT.
           MOVE '+'                TO PRINT-CONTROL.
           MOVE ALL '_'            TO PP1-16.
           PERFORM WRITE-OUTPUT.

           PERFORM LIBRARY-SUB-HEADINGS

      *****************************************************************

           MOVE '0'                           TO PRINT-CONTROL.
           MOVE 'Totals'                      TO PP3-8.
           MOVE NON-DFHRPL-PROGRAMS           TO PP11-20.
           MOVE NON-DFHRPL-PROGRAM-USES       TO PP23-32.
           MOVE NON-DFHRPL-PROGRAM-FETCHES    TO PP35-44.
           IF NON-DFHRPL-PROGRAM-FETCHES > 0 THEN
               COMPUTE CLOCK-FIELD-S =
                   (NON-DFHRPL-PROGRAM-FETCH-TIME /
                                       NON-DFHRPL-PROGRAM-FETCHES)
           END-IF
           PERFORM STOPWATCH-CONVERT.
           MOVE STOPWATCH                     TO PP47-60.
           MOVE NON-DFHRPL-PROGRAM-NEWCOPIES  TO PP63-72.
           MOVE NON-DFHRPL-PROGRAM-REMOVES    TO PP75-84.
           PERFORM WRITE-OUTPUT.

       PRINT-DFHRPL-ANALYSIS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** DFHRPL-SUB-HEADINGS                                       ***
      *****************************************************************
       DFHRPL-SUB-HEADINGS SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'DFHRPL                             ' TO PP3-37.
           MOVE '                                   ' TO PP38-72.
           MOVE '                       Average'      TO PP73-102.
           MOVE '                              '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE 'Offset  DFHRPL Dataset name        ' TO PP3-37.
           MOVE '                    Programs   Time' TO PP38-72.
           MOVE 's Used    Fetches     Fetch Ti'      TO PP73-102.
           MOVE 'me     Newcopies    Removes   '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-130.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'N' TO SUB-HEADINGS.

       DFHRPL-SUB-HEADINGS-EXIT.
           EXIT.
      *****************************************************************
      *** LIBRARY-SUB-HEADINGS                                      ***
      *****************************************************************
       LIBRARY-SUB-HEADINGS SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE '                                   ' TO PP3-37.
           MOVE '            Average                ' TO PP38-72.
           MOVE '                              '      TO PP73-102.
           MOVE '                              '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '         Programs   Times Used    F' TO PP3-37.
           MOVE 'etches     Fetch Time     Newcopies' TO PP38-72.
           MOVE '    Removes                   '      TO PP73-102.
           MOVE '                              '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-84.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'N' TO SUB-HEADINGS.

       LIBRARY-SUB-HEADINGS-EXIT.
           EXIT.
           EJECT
       COLLECT-DFHRPL-STATS SECTION.

           MOVE 0 TO PROGRAM-TOTAL NOT-LOCATED-PROGRAMS
                     TIMES-USED TIMES-FETCHED
                     TIMES-NEWCOPY TIMES-REMOVED.

           EXEC CICS INQUIRE PROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
               LIBRARY(PROGRAM-LIBRARY-NAME)
               RUNTIME(PROGRAM-RUNTIME)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               IF PROGRAM-RUNTIME NOT = DFHVALUE(JVM) THEN
                 EXEC CICS EXTRACT STATISTICS PROGRAM
                     RESID(PROGRAM-NAME)
                     SET(ADDRESS OF DFHLDRDS)
                     RESP(COLLECT-PROGRAM-RESP)
                 END-EXEC

                 EVALUATE OUTPUT-ABBREV
      *        'U' means only show 'Used' programs
                   WHEN 'U'
                       IF LDRTU > 0 THEN
                           PERFORM COLLECT-DFHRPL-DATA
                       END-IF
                   WHEN 'u'
                       IF LDRTU > 0 THEN
                           PERFORM COLLECT-DFHRPL-DATA
                       END-IF
      *        'N' means only show 'Not used' programs
                   WHEN 'N'
                       IF LDRTU = 0 THEN
                           PERFORM COLLECT-DFHRPL-DATA
                       END-IF
                   WHEN 'n'
                       IF LDRTU = 0 THEN
                           PERFORM COLLECT-DFHRPL-DATA
                       END-IF
      *        otherwise show all programs
                   WHEN OTHER
                      PERFORM COLLECT-DFHRPL-DATA
                 END-EVALUATE
               END-IF

               EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
                   LIBRARY(PROGRAM-LIBRARY-NAME)
                   RUNTIME(PROGRAM-RUNTIME)
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE PROGRAM END
           END-EXEC.

       COLLECT-DFHRPL-STATS-EXIT.
           EXIT.

      *****************************************************************
       COLLECT-DFHRPL-DATA SECTION.

           ADD 1 TO PROGRAM-TOTAL.

           IF LDRPSIZE > 0 THEN
               PERFORM PROGRAM-TOTALS
           ELSE
               ADD 1 TO NOT-LOCATED-PROGRAMS
           END-IF.

       COLLECT-DFHRPL-DATA-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PROGRAM-STATISTICS-BY-DSA                                 ***
      ***   Print heading and program statistics.                   ***
      *****************************************************************
       PROGRAM-STATISTICS-BY-DSA SECTION.

           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO PROGRAMS-BY-DSA-PAGENO.

           MOVE '-'               TO PRINT-CONTROL.
           MOVE 'Programs by DSA and LPA' TO PP1-23.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-23.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      ***   Print the program statistics by DSA for the CDSA.       ***
      *****************************************************************

           PERFORM RESET-PROGRAM-COLUMN-TOTALS.

           EXEC CICS INQUIRE PROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
               APIST(PROGRAM-API-STATUS)
               CONCURRENCY(PROGRAM-CONCURRENCY)
               DYNAMSTATUS(PROGRAM-DYNAMIC)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               EXEC CICS EXTRACT STATISTICS PROGRAM
                   RESID(PROGRAM-NAME)
                   SET(ADDRESS OF DFHLDRDS)
                   RESP(COLLECT-PROGRAM-RESP)
               END-EXEC

               IF LDRCDCO
                   IF LINE-COUNT > LINES-PER-PAGE THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   IF SUB-HEADINGS = 'Y' THEN
                       PERFORM PROGRAM-SUB-HEADINGS-2
                   END-IF

                   MOVE PROGRAM-NAME  TO PP3-10
                   EVALUATE PROGRAM-CONCURRENCY
                       WHEN DFHVALUE(QUASIRENT)
                           MOVE 'Quasirent ' TO PP13-22
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Threadsafe' TO PP13-22
                       WHEN DFHVALUE(REQUIRED)
                           MOVE 'Required  ' TO PP13-22
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE PROGRAM-API-STATUS
                       WHEN DFHVALUE(CICSAPI)
                           MOVE 'CICS' TO PP27-30
                       WHEN DFHVALUE(OPENAPI)
                           MOVE 'Open' TO PP27-30
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   MOVE LDRTU         TO PP34-43
                   IF LDRPSIZE > 0 THEN
                       MOVE LDRFC     TO PP46-52
                       IF LDRFC > 0 THEN
                           MOVE LDRFT TO CLOCK-FIELD-S
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP55-68
                           COMPUTE CLOCK-FIELD-S = (LDRFT / LDRFC)
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP71-84
                       END-IF
                       MOVE LDRRPLO   TO PP88-90
                       MOVE LDRPSIZE  TO PP113-122
                   END-IF
                   MOVE LDRTN   TO PP95-101
                   MOVE LDRRPC  TO PP104-110
                   MOVE 'CDSA ' TO PP127-131

                   ADD LDRTU    TO TIMES-USED
                   ADD LDRFC    TO TIMES-FETCHED
                   ADD LDRTN    TO TIMES-NEWCOPY
                   ADD LDRRPC   TO TIMES-REMOVED

                   PERFORM WRITE-OUTPUT
               END-IF

               EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
                   APIST(PROGRAM-API-STATUS)
                   CONCURRENCY(PROGRAM-CONCURRENCY)
                   DYNAMSTATUS(PROGRAM-DYNAMIC)
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE PROGRAM END
           END-EXEC.

           IF PROGRAM-TOTAL > 0 THEN
               PERFORM PRINT-PROGRAM-COLUMN-TOTALS-2
           END-IF.

      *****************************************************************
      ***   Print the program statistics by DSA for the SDSA.       ***
      *****************************************************************

           PERFORM RESET-PROGRAM-COLUMN-TOTALS.

           MOVE 99 TO LINE-COUNT.

           EXEC CICS INQUIRE PROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
               APIST(PROGRAM-API-STATUS)
               CONCURRENCY(PROGRAM-CONCURRENCY)
               DYNAMSTATUS(PROGRAM-DYNAMIC)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               EXEC CICS EXTRACT STATISTICS PROGRAM
                   RESID(PROGRAM-NAME)
                   SET(ADDRESS OF DFHLDRDS)
                   RESP(COLLECT-PROGRAM-RESP)
               END-EXEC

               IF LDRSDCO
                   IF LINE-COUNT > LINES-PER-PAGE THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   IF SUB-HEADINGS = 'Y' THEN
                       PERFORM PROGRAM-SUB-HEADINGS-2
                   END-IF

                   ADD 1 TO PROGRAM-TOTAL

                   MOVE PROGRAM-NAME  TO PP3-10
                   EVALUATE PROGRAM-CONCURRENCY
                       WHEN DFHVALUE(QUASIRENT)
                           MOVE 'Quasirent ' TO PP13-22
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Threadsafe' TO PP13-22
                       WHEN DFHVALUE(REQUIRED)
                           MOVE 'Required  ' TO PP13-22
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE PROGRAM-API-STATUS
                       WHEN DFHVALUE(CICSAPI)
                           MOVE 'CICS' TO PP27-30
                       WHEN DFHVALUE(OPENAPI)
                           MOVE 'Open' TO PP27-30
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   MOVE LDRTU         TO PP34-43
                   IF LDRPSIZE > 0 THEN
                       MOVE LDRFC     TO PP46-52
                       IF LDRFC > 0 THEN
                           MOVE LDRFT TO CLOCK-FIELD-S
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP55-68
                           COMPUTE CLOCK-FIELD-S = (LDRFT / LDRFC)
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP71-84
                       END-IF
                       MOVE LDRRPLO   TO PP88-90
                       MOVE LDRPSIZE  TO PP113-122
                   END-IF
                   MOVE LDRTN   TO PP95-101
                   MOVE LDRRPC  TO PP104-110
                   MOVE 'SDSA ' TO PP127-131

                   ADD LDRTU    TO TIMES-USED
                   ADD LDRFC    TO TIMES-FETCHED
                   ADD LDRTN    TO TIMES-NEWCOPY
                   ADD LDRRPC   TO TIMES-REMOVED

                   PERFORM WRITE-OUTPUT
               END-IF

               EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
                   APIST(PROGRAM-API-STATUS)
                   CONCURRENCY(PROGRAM-CONCURRENCY)
                   DYNAMSTATUS(PROGRAM-DYNAMIC)
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE PROGRAM END
           END-EXEC.

           IF PROGRAM-TOTAL > 0 THEN
               PERFORM PRINT-PROGRAM-COLUMN-TOTALS-2
           END-IF.

      *****************************************************************
      ***   Print the program statistics by DSA for the RDSA.       ***
      *****************************************************************

           PERFORM RESET-PROGRAM-COLUMN-TOTALS.

           MOVE 99 TO LINE-COUNT.

           EXEC CICS INQUIRE PROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
               APIST(PROGRAM-API-STATUS)
               CONCURRENCY(PROGRAM-CONCURRENCY)
               DYNAMSTATUS(PROGRAM-DYNAMIC)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               EXEC CICS EXTRACT STATISTICS PROGRAM
                   RESID(PROGRAM-NAME)
                   SET(ADDRESS OF DFHLDRDS)
                   RESP(COLLECT-PROGRAM-RESP)
               END-EXEC

               IF LDRRDCO
                   IF LINE-COUNT > LINES-PER-PAGE THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   IF SUB-HEADINGS = 'Y' THEN
                       PERFORM PROGRAM-SUB-HEADINGS-2
                   END-IF

                   ADD 1 TO PROGRAM-TOTAL

                   MOVE PROGRAM-NAME  TO PP3-10
                   EVALUATE PROGRAM-CONCURRENCY
                       WHEN DFHVALUE(QUASIRENT)
                           MOVE 'Quasirent ' TO PP13-22
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Threadsafe' TO PP13-22
                       WHEN DFHVALUE(REQUIRED)
                           MOVE 'Required  ' TO PP13-22
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE PROGRAM-API-STATUS
                       WHEN DFHVALUE(CICSAPI)
                           MOVE 'CICS' TO PP27-30
                       WHEN DFHVALUE(OPENAPI)
                           MOVE 'Open' TO PP27-30
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   MOVE LDRTU         TO PP34-43
                   IF LDRPSIZE > 0 THEN
                       MOVE LDRFC     TO PP46-52
                       IF LDRFC > 0 THEN
                           MOVE LDRFT TO CLOCK-FIELD-S
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP55-68
                           COMPUTE CLOCK-FIELD-S = (LDRFT / LDRFC)
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP71-84
                       END-IF
                       MOVE LDRRPLO   TO PP88-90
                       MOVE LDRPSIZE  TO PP113-122
                   END-IF
                   MOVE LDRTN   TO PP95-101
                   MOVE LDRRPC  TO PP104-110
                   MOVE 'RDSA ' TO PP127-131

                   ADD LDRTU    TO TIMES-USED
                   ADD LDRFC    TO TIMES-FETCHED
                   ADD LDRTN    TO TIMES-NEWCOPY
                   ADD LDRRPC   TO TIMES-REMOVED

                   PERFORM WRITE-OUTPUT
               END-IF

               EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
                   APIST(PROGRAM-API-STATUS)
                   CONCURRENCY(PROGRAM-CONCURRENCY)
                   DYNAMSTATUS(PROGRAM-DYNAMIC)
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE PROGRAM END
           END-EXEC.

           IF PROGRAM-TOTAL > 0 THEN
               PERFORM PRINT-PROGRAM-COLUMN-TOTALS-2
           END-IF.

      *****************************************************************
      ***   Print the program statistics by DSA for the ECDSA.      ***
      *****************************************************************

           PERFORM RESET-PROGRAM-COLUMN-TOTALS.

           MOVE 99 TO LINE-COUNT.

           EXEC CICS INQUIRE PROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
               APIST(PROGRAM-API-STATUS)
               CONCURRENCY(PROGRAM-CONCURRENCY)
               DYNAMSTATUS(PROGRAM-DYNAMIC)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               EXEC CICS EXTRACT STATISTICS PROGRAM
                   RESID(PROGRAM-NAME)
                   SET(ADDRESS OF DFHLDRDS)
                   RESP(COLLECT-PROGRAM-RESP)
               END-EXEC

               IF LDRECDCO
                   IF LINE-COUNT > LINES-PER-PAGE THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   IF SUB-HEADINGS = 'Y' THEN
                       PERFORM PROGRAM-SUB-HEADINGS-2
                   END-IF

                   ADD 1 TO PROGRAM-TOTAL

                   MOVE PROGRAM-NAME  TO PP3-10
                   EVALUATE PROGRAM-CONCURRENCY
                       WHEN DFHVALUE(QUASIRENT)
                           MOVE 'Quasirent ' TO PP13-22
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Threadsafe' TO PP13-22
                       WHEN DFHVALUE(REQUIRED)
                           MOVE 'Required  ' TO PP13-22
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE PROGRAM-API-STATUS
                       WHEN DFHVALUE(CICSAPI)
                           MOVE 'CICS' TO PP27-30
                       WHEN DFHVALUE(OPENAPI)
                           MOVE 'Open' TO PP27-30
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   MOVE LDRTU         TO PP34-43
                   IF LDRPSIZE > 0 THEN
                       MOVE LDRFC     TO PP46-52
                       IF LDRFC > 0 THEN
                           MOVE LDRFT TO CLOCK-FIELD-S
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP55-68
                           COMPUTE CLOCK-FIELD-S = (LDRFT / LDRFC)
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP71-84
                       END-IF
                       MOVE LDRRPLO   TO PP88-90
                       MOVE LDRPSIZE  TO PP113-122
                   END-IF
                   MOVE LDRTN   TO PP95-101
                   MOVE LDRRPC  TO PP104-110
                   MOVE 'ECDSA' TO PP127-131

                   ADD LDRTU    TO TIMES-USED
                   ADD LDRFC    TO TIMES-FETCHED
                   ADD LDRTN    TO TIMES-NEWCOPY
                   ADD LDRRPC   TO TIMES-REMOVED

                   PERFORM WRITE-OUTPUT
               END-IF

               EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
                   APIST(PROGRAM-API-STATUS)
                   CONCURRENCY(PROGRAM-CONCURRENCY)
                   DYNAMSTATUS(PROGRAM-DYNAMIC)
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE PROGRAM END
           END-EXEC.

           IF PROGRAM-TOTAL > 0 THEN
               PERFORM PRINT-PROGRAM-COLUMN-TOTALS-2
           END-IF.

      *****************************************************************
      ***   Print the program statistics by DSA for the ESDSA.      ***
      *****************************************************************

           PERFORM RESET-PROGRAM-COLUMN-TOTALS.

           MOVE 99 TO LINE-COUNT.

           EXEC CICS INQUIRE PROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
               APIST(PROGRAM-API-STATUS)
               CONCURRENCY(PROGRAM-CONCURRENCY)
               DYNAMSTATUS(PROGRAM-DYNAMIC)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               EXEC CICS EXTRACT STATISTICS PROGRAM
                   RESID(PROGRAM-NAME)
                   SET(ADDRESS OF DFHLDRDS)
                   RESP(COLLECT-PROGRAM-RESP)
               END-EXEC

               IF LDRESDCO
                   IF LINE-COUNT > LINES-PER-PAGE THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   IF SUB-HEADINGS = 'Y' THEN
                       PERFORM PROGRAM-SUB-HEADINGS-2
                   END-IF

                   ADD 1 TO PROGRAM-TOTAL

                   MOVE PROGRAM-NAME  TO PP3-10
                   EVALUATE PROGRAM-CONCURRENCY
                       WHEN DFHVALUE(QUASIRENT)
                           MOVE 'Quasirent '    TO PP13-22
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Threadsafe'    TO PP13-22
                       WHEN DFHVALUE(REQUIRED)
                           MOVE 'Required  '    TO PP13-22
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE PROGRAM-API-STATUS
                       WHEN DFHVALUE(CICSAPI)
                           MOVE 'CICS' TO PP27-30
                       WHEN DFHVALUE(OPENAPI)
                           MOVE 'Open' TO PP27-30
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   MOVE LDRTU         TO PP34-43
                   IF LDRPSIZE > 0 THEN
                       MOVE LDRFC     TO PP46-52
                       IF LDRFC > 0 THEN
                           MOVE LDRFT TO CLOCK-FIELD-S
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP55-68
                           COMPUTE CLOCK-FIELD-S = (LDRFT / LDRFC)
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP71-84
                       END-IF
                       MOVE LDRRPLO   TO PP88-90
                       MOVE LDRPSIZE  TO PP113-122
                   END-IF
                   MOVE LDRTN   TO PP95-101
                   MOVE LDRRPC  TO PP104-110
                   MOVE 'ESDSA' TO PP127-131

                   ADD LDRTU    TO TIMES-USED
                   ADD LDRFC    TO TIMES-FETCHED
                   ADD LDRTN    TO TIMES-NEWCOPY
                   ADD LDRRPC   TO TIMES-REMOVED

                   PERFORM WRITE-OUTPUT
               END-IF

               EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
                   APIST(PROGRAM-API-STATUS)
                   CONCURRENCY(PROGRAM-CONCURRENCY)
                   DYNAMSTATUS(PROGRAM-DYNAMIC)
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE PROGRAM END
           END-EXEC.

           IF PROGRAM-TOTAL > 0 THEN
               PERFORM PRINT-PROGRAM-COLUMN-TOTALS-2
           END-IF.

      *****************************************************************
      ***   Print the program statistics by DSA for the ERDSA.      ***
      *****************************************************************

           PERFORM RESET-PROGRAM-COLUMN-TOTALS.

           MOVE 99 TO LINE-COUNT.

           EXEC CICS INQUIRE PROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
               APIST(PROGRAM-API-STATUS)
               CONCURRENCY(PROGRAM-CONCURRENCY)
               DYNAMSTATUS(PROGRAM-DYNAMIC)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               EXEC CICS EXTRACT STATISTICS PROGRAM
                   RESID(PROGRAM-NAME)
                   SET(ADDRESS OF DFHLDRDS)
                   RESP(COLLECT-PROGRAM-RESP)
               END-EXEC

               IF LDRERDCO
                   IF LINE-COUNT > LINES-PER-PAGE THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   IF SUB-HEADINGS = 'Y' THEN
                       PERFORM PROGRAM-SUB-HEADINGS-2
                   END-IF

                   ADD 1 TO PROGRAM-TOTAL

                   MOVE PROGRAM-NAME  TO PP3-10
                   EVALUATE PROGRAM-CONCURRENCY
                       WHEN DFHVALUE(QUASIRENT)
                           MOVE 'Quasirent ' TO PP13-22
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Threadsafe' TO PP13-22
                       WHEN DFHVALUE(REQUIRED)
                           MOVE 'Required  ' TO PP13-22
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE PROGRAM-API-STATUS
                       WHEN DFHVALUE(CICSAPI)
                           MOVE 'CICS' TO PP27-30
                       WHEN DFHVALUE(OPENAPI)
                           MOVE 'Open' TO PP27-30
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   MOVE LDRTU         TO PP34-43
                   IF LDRPSIZE > 0 THEN
                       MOVE LDRFC     TO PP46-52
                       IF LDRFC > 0 THEN
                           MOVE LDRFT TO CLOCK-FIELD-S
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP55-68
                           COMPUTE CLOCK-FIELD-S = (LDRFT / LDRFC)
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP71-84
                       END-IF
                       MOVE LDRRPLO   TO PP88-90
                       MOVE LDRPSIZE  TO PP113-122
                   END-IF
                   MOVE LDRTN   TO PP95-101
                   MOVE LDRRPC  TO PP104-110
                   MOVE 'ERDSA' TO PP127-131

                   ADD LDRTU    TO TIMES-USED
                   ADD LDRFC    TO TIMES-FETCHED
                   ADD LDRTN    TO TIMES-NEWCOPY
                   ADD LDRRPC   TO TIMES-REMOVED

                   PERFORM WRITE-OUTPUT
               END-IF

               EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
                   APIST(PROGRAM-API-STATUS)
                   CONCURRENCY(PROGRAM-CONCURRENCY)
                   DYNAMSTATUS(PROGRAM-DYNAMIC)
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE PROGRAM END
           END-EXEC.

           IF PROGRAM-TOTAL > 0 THEN
               PERFORM PRINT-PROGRAM-COLUMN-TOTALS-2
           END-IF.

      *****************************************************************
      ***   Print the program statistics by DSA for the LPA.        ***
      *****************************************************************

           PERFORM RESET-PROGRAM-COLUMN-TOTALS.

           MOVE 99 TO LINE-COUNT.

           EXEC CICS INQUIRE PROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
               APIST(PROGRAM-API-STATUS)
               CONCURRENCY(PROGRAM-CONCURRENCY)
               DYNAMSTATUS(PROGRAM-DYNAMIC)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               EXEC CICS EXTRACT STATISTICS PROGRAM
                   RESID(PROGRAM-NAME)
                   SET(ADDRESS OF DFHLDRDS)
                   RESP(COLLECT-PROGRAM-RESP)
               END-EXEC

               IF LDRLPACO
                   IF LINE-COUNT > LINES-PER-PAGE THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   IF SUB-HEADINGS = 'Y' THEN
                       PERFORM PROGRAM-SUB-HEADINGS-2
                   END-IF

                   ADD 1 TO PROGRAM-TOTAL

                   MOVE PROGRAM-NAME  TO PP3-10
                   EVALUATE PROGRAM-CONCURRENCY
                       WHEN DFHVALUE(QUASIRENT)
                           MOVE 'Quasirent ' TO PP13-22
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Threadsafe' TO PP13-22
                       WHEN DFHVALUE(REQUIRED)
                           MOVE 'Required  ' TO PP13-22
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE PROGRAM-API-STATUS
                       WHEN DFHVALUE(CICSAPI)
                           MOVE 'CICS' TO PP27-30
                       WHEN DFHVALUE(OPENAPI)
                           MOVE 'Open' TO PP27-30
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   MOVE LDRTU         TO PP34-43
                   IF LDRPSIZE > 0 THEN
                       MOVE LDRFC     TO PP46-52
                       IF LDRFC > 0 THEN
                           MOVE LDRFT TO CLOCK-FIELD-S
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP55-68
                           COMPUTE CLOCK-FIELD-S = (LDRFT / LDRFC)
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP71-84
                       END-IF
                       MOVE LDRRPLO   TO PP88-90
                       MOVE LDRPSIZE  TO PP113-122
                   END-IF
                   MOVE LDRTN   TO PP95-101
                   MOVE LDRRPC  TO PP104-110
                   MOVE 'LPA  ' TO PP127-131

                   ADD LDRTU    TO TIMES-USED
                   ADD LDRFC    TO TIMES-FETCHED
                   ADD LDRTN    TO TIMES-NEWCOPY
                   ADD LDRRPC   TO TIMES-REMOVED

                   PERFORM WRITE-OUTPUT
               END-IF

               EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
                   APIST(PROGRAM-API-STATUS)
                   CONCURRENCY(PROGRAM-CONCURRENCY)
                   DYNAMSTATUS(PROGRAM-DYNAMIC)
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE PROGRAM END
           END-EXEC.

           IF PROGRAM-TOTAL > 0 THEN
               PERFORM PRINT-PROGRAM-COLUMN-TOTALS-2
           END-IF.

      *****************************************************************
      ***   Print the program statistics by DSA for the ELPA.       ***
      *****************************************************************

           PERFORM RESET-PROGRAM-COLUMN-TOTALS.

           MOVE 99 TO LINE-COUNT.

           EXEC CICS INQUIRE PROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
               APIST(PROGRAM-API-STATUS)
               CONCURRENCY(PROGRAM-CONCURRENCY)
               DYNAMSTATUS(PROGRAM-DYNAMIC)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               EXEC CICS EXTRACT STATISTICS PROGRAM
                   RESID(PROGRAM-NAME)
                   SET(ADDRESS OF DFHLDRDS)
                   RESP(COLLECT-PROGRAM-RESP)
               END-EXEC

               IF LDRELPCO
                   IF LINE-COUNT > LINES-PER-PAGE THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   IF SUB-HEADINGS = 'Y' THEN
                       PERFORM PROGRAM-SUB-HEADINGS-2
                   END-IF

                   ADD 1 TO PROGRAM-TOTAL

                   MOVE PROGRAM-NAME  TO PP3-10
                   EVALUATE PROGRAM-CONCURRENCY
                       WHEN DFHVALUE(QUASIRENT)
                           MOVE 'Quasirent ' TO PP13-22
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Threadsafe' TO PP13-22
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Required  ' TO PP13-22
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE PROGRAM-API-STATUS
                       WHEN DFHVALUE(CICSAPI)
                           MOVE 'CICS' TO PP27-30
                       WHEN DFHVALUE(OPENAPI)
                           MOVE 'Open' TO PP27-30
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   MOVE LDRTU         TO PP34-43
                   IF LDRPSIZE > 0 THEN
                       MOVE LDRFC     TO PP46-52
                       IF LDRFC > 0 THEN
                           MOVE LDRFT TO CLOCK-FIELD-S
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP55-68
                           COMPUTE CLOCK-FIELD-S = (LDRFT / LDRFC)
                           PERFORM STOPWATCH-CONVERT
                           MOVE STOPWATCH TO PP71-84
                       END-IF
                       MOVE LDRRPLO   TO PP88-90
                       MOVE LDRPSIZE  TO PP113-122
                   END-IF
                   MOVE LDRTN   TO PP95-101
                   MOVE LDRRPC  TO PP104-110
                   MOVE 'ELPA ' TO PP127-131

                   ADD LDRTU    TO TIMES-USED
                   ADD LDRFC    TO TIMES-FETCHED
                   ADD LDRTN    TO TIMES-NEWCOPY
                   ADD LDRRPC   TO TIMES-REMOVED

                   PERFORM WRITE-OUTPUT
               END-IF

               EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME) NEXT
                   APIST(PROGRAM-API-STATUS)
                   CONCURRENCY(PROGRAM-CONCURRENCY)
                   DYNAMSTATUS(PROGRAM-DYNAMIC)
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE PROGRAM END
           END-EXEC.

           IF PROGRAM-TOTAL > 0 THEN
               PERFORM PRINT-PROGRAM-COLUMN-TOTALS-2
           END-IF.

       PROGRAM-STATISTICS-BY-DSA-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PROGRAM-SUB-HEADINGS-2                                    ***
      *****************************************************************
       PROGRAM-SUB-HEADINGS-2 SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Program   Concurrency   API        ' TO PP3-37.
           MOVE '         Times       Total         ' TO PP38-72.
           MOVE ' Average      LibDsn   Times  '      TO PP73-102.
           MOVE '  Times    Program    Program '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '  Name       Status    Status  Time' TO PP3-37.
           MOVE 's Used  Fetched    Fetch Time      ' TO PP38-72.
           MOVE 'Fetch Time    Offset  Newcopy '      TO PP73-102.
           MOVE ' Removed     Size     Location'      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-132.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'N'     TO SUB-HEADINGS.

       PROGRAM-SUB-HEADINGS-2-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** TOTALS-INITIALISE                                         ***
      *****************************************************************
       TOTALS-INITIALISE SECTION.

           MOVE 0 TO TRANCLASS-TOTAL
                     TRANCLASS-TRANSACTIONS TRANCLASS-ATTACHES
                     TRANCLASS-LIMIT-TOTAL.

           MOVE 0 TO TRANSACTION-TOTAL
                     TRANSACTION-TOTAL-1 TRANSACTION-TOTAL-2
                     TRANSACTION-TOTAL-3 TRANSACTION-TOTAL-4
                     TRANSACTION-TOTAL-5 TRANSACTION-TOTAL-6
                     TRANSACTION-TOTAL-7 TRANSACTION-TOTAL-8
                     TRANSACTION-ATTACHES-1 TRANSACTION-ATTACHES-2
                     TRANSACTION-ATTACHES-3 TRANSACTION-ATTACHES-4
                     TRANSACTION-ATTACHES-5 TRANSACTION-ATTACHES-6
                     TRANSACTION-ATTACHES-7 TRANSACTION-ATTACHES-8
                     TRANSACTION-ATTACHES TRANSACTION-RESTARTS
                     TRANSACTION-DYNAMIC-LOCAL
                     TRANSACTION-DYNAMIC-REMOTE
                     TRANSACTION-REMOTE-STARTS
                     TRANSACTION-STG-VIOLATIONS.

           MOVE 0 TO PROGRAM-TOTAL TIMES-USED TIMES-FETCHED
                     TIMES-NEWCOPY TIMES-REMOVED
                     CDSA-PROGRAMS SDSA-PROGRAMS RDSA-PROGRAMS
                     ECDSA-PROGRAMS ESDSA-PROGRAMS ERDSA-PROGRAMS
                     LPA-PROGRAMS ELPA-PROGRAMS
                     UNUSED-PROGRAMS NOT-LOCATED-PROGRAMS.

           MOVE 0 TO PROGRAMS MAPS PARTITIONSETS
                     ASSEMBLER-PROGRAMS C-PROGRAMS COBOL-PROGRAMS
                     JAVA-PROGRAMS LE370-PROGRAMS PL1-PROGRAMS
                     REMOTE-PROGRAMS NOT-DEDUCED-PROGRAMS.

           MOVE 'N' TO DFHRPL-DATA-COLLECTED.

           MOVE 1 TO SUB1.

           PERFORM WITH TEST BEFORE
               UNTIL SUB1 > 96

               MOVE 0 TO DFHRPL-PROGRAMS(SUB1)
                         DFHRPL-PROGRAM-USES(SUB1)
                         DFHRPL-PROGRAM-FETCHES(SUB1)
                         DFHRPL-PROGRAM-FETCH-TIME(SUB1)
                         DFHRPL-PROGRAM-NEWCOPIES(SUB1)
                         DFHRPL-PROGRAM-REMOVES(SUB1)

               ADD 1 TO SUB1

           END-PERFORM.

           MOVE 0 TO NON-DFHRPL-PROGRAMS
                     NON-DFHRPL-PROGRAM-USES
                     NON-DFHRPL-PROGRAM-FETCHES
                     NON-DFHRPL-PROGRAM-FETCH-TIME
                     NON-DFHRPL-PROGRAM-NEWCOPIES
                     NON-DFHRPL-PROGRAM-REMOVES.

       TOTALS-INITIALISE-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PAGE-HEADINGS                                             ***
      ***   Increment page                                          ***
      ***   Write new heading line to spool                         ***
      *****************************************************************
       PAGE-HEADINGS SECTION.

           ADD 1       TO PAGENO.
           MOVE PAGENO TO PAGE-NUMBER.
           MOVE 1      TO LINE-COUNT.

           MOVE '1'          TO PRINT-CONTROL.
           MOVE HEADING-LINE TO PP1-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'          TO PRINT-CONTROL.
           MOVE ALL '_'      TO PP1-132.
           PERFORM WRITE-OUTPUT.

           MOVE 'Y' TO SUB-HEADINGS.

       PAGE-HEADINGS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** STOPWATCH-CONVERT                                         ***
      *** Call program DFH$STCN to convert S/370 format TOD to      ***
      ***   EBCDIC date and time                                    ***
      *****************************************************************
       STOPWATCH-CONVERT SECTION.

           MOVE 'S'    TO CLOCK-TYPE.
           MOVE SPACES TO CLOCK-OUTPUT.

           MOVE LENGTH OF CLOCK-FIELDS TO STCN-COMMAREA.

           EXEC CICS LINK PROGRAM('DFH$STCN')
               COMMAREA(CLOCK-FIELDS)
               LENGTH(STCN-COMMAREA)
           END-EXEC.

           MOVE LOW-VALUES TO CLOCK-FIELD.

       STOPWATCH-CONVERT-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** WRITE-OUTPUT                                              ***
      ***   Write current print line to report output destination.  ***
      *****************************************************************
       WRITE-OUTPUT SECTION.

           PERFORM WRITE-SPOOL.

       WRITE-OUTPUT-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** WRITE-SPOOL                                               ***
      *** Write current print line to spool                         ***
      *** Increment line-count                                      ***
      *** IF CICS exceptional condition is raised THEN              ***
      ***    call error routine                                     ***
      *****************************************************************
       WRITE-SPOOL SECTION.

           EXEC CICS SPOOLWRITE TOKEN(OUTPUT-TOKEN)
               FROM(PRINT-LINE) FLENGTH(LINE-LENGTH)
               LINE
               NOHANDLE
           END-EXEC.

           EVALUATE PRINT-CONTROL
               WHEN ' '
                   ADD 1 TO LINE-COUNT
               WHEN '0'
                   ADD 2 TO LINE-COUNT
               WHEN '-'
                   ADD 3 TO LINE-COUNT
               WHEN '+'
                   ADD 0 TO LINE-COUNT
               WHEN '1'
                   MOVE 1 TO LINE-COUNT
           END-EVALUATE.

      *                                       Check return code
           IF EIBRESP NOT = DFHRESP(NORMAL) THEN
               MOVE 'SPOOLWRITE' TO CICS-COMMAND
               PERFORM ERROR-ROUTINE
           ELSE
               MOVE ' '    TO PRINT-CONTROL
               MOVE SPACES TO PP1-132
           END-IF.

       WRITE-SPOOL-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      ***  ERROR ROUTINE                                            ***
      ***  Error routine produces appropriate responses to CICS     ***
      ***  spool commands. To ensure this the resp and resp2 values ***
      ***  are returned to the main program DFH0STAT for appropriate***
      ***  outputing of the messages.                               ***
      *****************************************************************
       ERROR-ROUTINE SECTION.

      *  If an error occurs which is not due to the users input or if
      *  the program is not being run from a terminal then a general
      *  message is sent to the screen/console and the RESP and RESP2
      *  fields are given along with the spool command which failed.
           MOVE 'Y'      TO ERROR-FOUND.
           MOVE EIBRESP  TO STCM-RESP.
           MOVE EIBRESP2 TO STCM-RESP2.

      *  Whatever happens ensure we return to DFH0STAT quickly.
           EXEC CICS RETURN
           END-EXEC.

       ERROR-ROUTINE-EXIT.
           EXIT.
