***********************************************************************
*                                                                     *
*   MODULE NAME = DFHUCNV                                             *
*                                                                     *
* DESCRIPTIVE NAME = CICS TS  USER CONVERSION SAMPLE PROGRAM          *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*     Licensed Materials - Property of IBM                            *
*                                                                     *
*     "Restricted Materials of IBM"                                   *
*                                                                     *
*     5655-Y04                                                        *
*                                                                     *
*     (C) Copyright IBM Corp. 1988, 2014"                             *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* STATUS =%PEG0                                                       *
*                                                                     *
* FUNCTION =                                                          *
*        THIS IS A SAMPLE PROGRAM FOR USER DATA CONVERSION            *
*        IT IS INVOKED AS A RESULT OF A FUNCTION                      *
*        SHIPPED REQUEST OR RESPONSE VIA THE LU2 REMOTE SERVER        *
*        OR LU6.2 HOST MIRROR PROGRAM. IT IS ACTUALLY  CICS           *
*        LINKED FROM DFHCCNV TO ALLOW A USER PROGRAM TO               *
*        CONVERT DATA OF TYPE USERDATA AS DEFINED IN THE              *
*        CICS OS/2 CONVERSION MACROS (DFHCNV).                        *
*                                                                     *
*        THIS PROGRAM IS CALLED FOR EACH EXEC CICS REQUEST/RESPONSE   *
*        FOR WHICH DATA EXISTS FOR CONVERSION FROM ASCII TO EBCDIC.   *
*        IF A REQUEST DOES NOT CONTAIN ANY SUCH DATA, THIS PROGRAM    *
*        IS NOT INVOKED. THE PROGRAM IS INVOKED BEFORE THE CICS       *
*        CONVERSION PROGRAM (DFHCCNV) ATTEMPTS ANY CONVERSION         *
*        INBOUND FROM CICS OS/2 (ASCII TO EBCDIC) OR OUTBOUND         *
*        FROM CICS OS/2 (EBCDIC TO ASCII).                            *
*                                                                     *
*        A COMMAREA IS  PASSED WITHIN WHICH IS A SERIES OF POINTERS   *
*        TO INFORMATION THAT CAN BE USED BY THE PROGRAM TO            *
*        DETERMINE HOW TO CONVERT ANY RELEVANT DATA. THIS PROGRAM     *
*        SHOULD ONLY CONVERT DATA OF TYPE USERDATA AS INDICATED IN    *
*        THE CONVERSION TEMPLATES. ANY DATA OF TYPE CHARACTER         *
*        WILL BE CONVERTED BY THE CICS CONVERSION MODULE DFHCCNV.     *
*                                                                     *
*        SEE A LATER DESCRIPTION FOR WHAT THE SAMPLE DOES             *
*                                                                     *
*        NOTE: THIS SAMPLE IS DEFINED TO CICS WITH PROGRAM            *
*        ATTRIBUTE CONCURRENCY(THREADSAFE). ANY LOGIC ADDED TO THIS   *
*        SAMPLE NEEDS TO BE THREADSAFE. THE PROGRAM MAY BE INVOKED    *
*        ON AN OPEN TCB.                                              *
* NOTES :                                                             *
*    DEPENDENCIES = S/370                                             *
*        THIS PROGRAM SHOULD BE LINKED WITH RMODE(ANY) & RMODE(31).   *
*        ALL ADDRESSES SHOULD BE TREATED AS 31 BIT.                   *
*                                                                     *
*        NOTE: THIS SAMPLE IS DEFINED TO CICS WITH PROGRAM            *
*        ATTRIBUTE CONCURRENCY(THREADSAFE). ANY LOGIC ADDED TO THIS   *
*        SAMPLE NEEDS TO BE THREADSAFE. THE PROGRAM MAY BE INVOKED    *
*        ON AN OPEN TCB.                                              *
*                                                                     *
*    RESTRICTIONS =                                                   *
*          NONE                                                       *
*    REGISTER CONVENTIONS =                                           *
*          STANDARD EXEC                                              *
*    MODULE TYPE = EXECUTABLE                                         *
*    PROCESSOR = ASSEMBLER                                            *
*    ATTRIBUTES = READ ONLY, SERIALLY REUSABLE                        *
*                                                                     *
*------------------------------------------------------------------ *
*                                                                     *
* ENTRY POINT = DFHUCNV                                               *
*                                                                     *
*     PURPOSE =                                                       *
*         THIS IS THE ONLY ENTRY POINT FOR ALL FUNCTIONS              *
*                                                                     *
*     LINKAGE =                                                       *
*         EXEC CICS LINK FROM DFHCCNV IS THE ONLY WAY THIS PROGRAM    *
*         IS INVOKED                                                  *
*                                                                     *
*     INPUT =                                                         *
*         THE PARAMETERS ARE PASSED USING A COMMAREA AND THE          *
*         DSECT DFHUNVDS DESCRIBES THE STRUCTURE OF THESE PARAMETERS  *
*         THIS DSECT IS INCLUDED IN THIS PROGRAM BY ISSUING THE       *
*         DFHCNV TYPE=DSECT MACRO CALL.                               *
*                                                                     *
*     OUTPUT =                                                        *
*         NO SPECIFIC PARAMETERS  ARE RETURNED, AS THE PURPOSE OF     *
*         THIS PROGRAM IS PERFORM CONVERSION ON USER DATA.            *
*                                                                     *
*     EXIT-NORMAL =                                                   *
*         NORMAL RETURN IS VIA AN EXEC CICS RETURN                    *
*                                                                     *
*     EXIT-ERROR =                                                    *
**        SAME AS EXIT NORMAL                                         *
*                                                                     *
*------------------------------------------------------------------ *
*                                                                     *
* EXTERNAL REFERENCES =                                               *
*         NONE                                                        *
*                                                                     *
*     ROUTINES =                                                      *
*         NONE                                                        *
*                                                                     *
*     DATA AREAS =                                                    *
*         NONE                                                        *
*                                                                     *
*     CONTROL BLOCKS =                                                *
*         THE 2 MAIN CONTROL BLOCKS REFERENCED ARE                    *
*        DFHUNVDS                                                     *
*         DESCRIBES THE PARAMETER LIST PASSED IN THE COMMAREA FROM    *
*         DFHCCNV. IT IS BASICALLY CONSISTS OF A LIST OF POINTERS     *
*         TO INFORMATION OF INTEREST TO THIS USER PROGRAM. THE FIRST  *
*         PART OF THE LIST IS FIXED, AND THE SECOND PART CONSISTS     *
*         OF OVERLAYS DEPENDING ON THE RESOURCE TYPE IN QUESTION.     *
*        DFHCNVDS                                                     *
*         DESCRIBES THE STRUCTURE OF INDIVIDUAL FIELDS IN THE         *
*         PASSED TEMPLATE.                                            *
*                                                                     *
*     GLOBAL VARIABLES =                                              *
*         NONE                                                        *
*                                                                     *
* TABLES =                                                            *
*         DATA FROM THE DFHCNV TABLE IS USED BUT THE NECESSARY        *
*         ADDRESSES ARE OBTAINED BY DFHCCNV AND PASSED IN THE         *
*         COMMAREA                                                    *
*                                                                     *
* MACROS =                                                            *
*         NONE                                                        *
*                                                                     *
*------------------------------------------------------------------ *
*                                                                     *
* DESCRIPTION                                                         *
*    WHAT THIS SAMPLE DOES                                            *
*                                                                     *
*        DFHUCNV EXECUTES AS AN EXEC CICS PROGRAM.                    *
*        DFHUCNV IS CALLED FOR ALL EXEC CICS REQUESTS/RESPONSES THAT  *
*        HAVE RESULTED FROM A CICS OS/2 FUNCTION SHIP REQUEST AND     *
*        MAY REQUIRE CONVERSION OF USER DATA FROM ASCII TO EBCDIC OR  *
*        VICE VERSA. THE FIRST THING THAT THE SAMPLE DOES IS TO       *
*        OBTAIN ADDRESSABILITY TO THE PASSED COMMAREA, AND THEN       *
*        CHECK THAT THE REQUEST IS A TEMPORARY STORAGE (TS) REQUEST.  *
*        IF NOT WE JUST RETURN.
*        NEXT WE CHECK IF DFHCCNV MANAGED TO LOCATE A CONVERSION      *
*        TEMPLATE FOR THE RESOURCE (TS QUEUE) WITH THIS NAME.         *
*        IF ONE WAS NOT FOUND (UNVDTMP IS ZERO) THIS MEANS THAT       *
*        NO CONVERSION INFORMATION WAS PROVIDED (USING DFHCNV MACROS) *
*        FOR THIS RESOURCE. IN THIS CASE WE WILL NEVER BE ABLE TO     *
*        LOCATE ANY USERDATA FIELDS, SO WE JUST RETURN.               *
*        ASSUMING WE DID HAVE A TEMPLATE, WE NOW SCAN DOWN THE        *
*        TEMPLATE USING THE SUPPLIED TEMPLATE PTR AND LENGTH. THE     *
*        MAPPING OF THIS IS PROVIDED BY DFHCNVDS WHICH GIVES          *
*        THE STRUCTURE OF THE CONSTITUENT FIELDS.                     *
*        EACH FIELD IS EXAMINED, AND WHEN ONE OF TYPE USERDATA        *
*        IS FOUND WE DO SOME FURTHER CHECKS AS FOLLOWS.               *
*                                                                     *
*        IT IS POSSIBLE THAT THE CONVERSION TEMPLATE HAS              *
*        DEFINITIONS FOR OFFSETS (AND OFFSETS PLUS LENGTHS) THAT ARE  *
*        GREATER THAN THE ACTUAL DATA ON THE EXEC REQUEST/RESPONSE.   *
*        OBVIOUSLY IT IS VERY IMPORTANT TO DETERMINE THE LESSER OF    *
*        THE ACTUAL DATA AND THE PARTICULAR TEMPLATE FIELD DEFINITION *
*        TO ENSURE WE DO NOT PERFORM CONVERSION OFF THE END OF THE    *
*        REAL DATA. ONCE THESE CHECKS ARE DONE THE USERDATA FIELD     *
*        CAN BE TRANSLATED AS APPROPRIATE. PURELY AS AN EXAMPLE,      *
*        THE SAMPLE PROGRAM CONVERTS THE USERDATA FIELDS AS CHARACTER,*
*        BUT IN A REAL PROGRAM, YOU WOULD PERFORM YOUR OWN SPECIAL    *
*        TESTING AND CONVERSION AT THIS POINT.                        *
*        THIS LAST STEP IS REPEATED FOR EACH FIELD IN THE TEMPLATE    *
*        OF TYPE USERDATA, UNTIL THE END OF THE TEMPLATE IS FOUND,    *
*        AT WHICH TIME A RETURN IS MADE TO THE CALLER (DFHCCNV).      *
*                                                                     *
*        WHEN WRITING A VERSION OF THIS PROGRAM TO EXECUTE IN A       *
*        CICS ENVIRONMENT, YOU MUST BE PREPARED TO HANDLE             *
*        ALL ADDRESSES AS 31 BIT, AS DFHCCNV AND THE                  *
*        DFHCNV TABLE (CONTAINING THE TEMPLATES) WILL BE LOADED       *
*        ABOVE THE 16M LINE.                                          *
*                                                                     *
*    CAVEAT                                                           *
*                                                                     *
*        FULLWORD VALUES ARE NOW PASSED IN THE FOLLOWING              *
*        FIELDS:                                                      *
*                                                                     *
*          CNVDATAL                                                   *
*          CNVDATAO                                                   *
*                                                                     *
*          UNVFCLNP                                                   *
*          UNVFCKLP                                                   *
*          UNVICLNP                                                   *
*          UNVPCLNP                                                   *
*          UNVTDLNP                                                   *
*          UNVTSLNP                                                   *
*                                                                     *
*------------------------------------------------------------------ *
*                                                                     *
* CHANGE ACTIVITY :                                                   *
**                                                                    *
*        $MOD(DFHUCNV),COMP(ISC),PROD(CICS TS )                       *
*                                                                     *
*     PN= REASON REL YYMMDD HDXIII : REMARKS                          *
*     P0= REASON REL YYMMDD HDXIII : Implicit flag.                   *
*    $L0= ???    310 880722 HD1HSS : CREATE DFHUCNV                   *
*    $L1= 504    320 890307 HD6EJK : AMODE 31 CONVERSION              *
*    $L2= 775    620 010625 HDUGM   : DFHCNV/DFHCCNV                  *
*    $L3= R18535 670 100930 HD2GJST: Define as threadsafe             *
*    $P1= M83615 410 930823 HD4OGB  : Fix Change Descriptors          *
*    $P2= D03349 620 011030 HDUGM   : DFHUCNV                         *
*                                                                     *
***********************************************************************
         DFHCNV TYPE=DSECT
DFHUCNV  CSECT
         B     IDBYP
         DFHVM UCNV,ENTRY=DFHUCNV,RMODE=ANY                        @L1C
IDBYP    DS    0H
         DFHREGS ,
         OC    EIBCALEN,EIBCALEN   ANY COMMAREA ?
         BZ    RETURN              NO, JUST RETURN
         L     R2,DFHEICAP
         USING DFHUNVDS,R2         ADDRESSABILITY TO COMMAREA
         L     R10,UNVRSTP         ADDRESS THE RESOURCE TYPE
         CLI   0(R10),CNVTS        IS IT A TEMPORARY STORAGE TYPE
         BNE   RETURN              NO, JUST RETURN
         ICM   R10,B'1111',UNVDTMP IS THERE A CONVERSION TEMPLATE ?
         BZ    RETURN              NO, JUST RETURN
         USING DFHCNVDS,R10        ADDRESSABILITY TO CONVERSION RECS
         L     R4,UNVDLNP
         L     R5,0(0,R4)    GET TOTAL TEMPLATE LENGTH             @P2C
         AR    R5,R10              END OF TEMPLATE
PROCESS  DS    0H
         CR    R10,R5              HAVE WE REACHED THE END OF OUR TEMPL
         BNL   RETURN              YES
         CLI   CNVRTYPE,CNVTFLD    DOUBLE CHECK ITS A FIELD TYPE REC
         BNE   RETURN              NO, BETTER RETURN
         CLI   CNVDATTY,DTUSRMIN   IN THE USER RANGE ?
         BL    NEXTREC             NO, TOO LOW
         CLI   CNVDATTY,DTUSRMAX   IN THE USER RANGE ?
         BH    NEXTREC             NO, TOO HIGH
         L     R4,UNVDIRP          CHECK THE TYPE OF CONVERSION
         CLI   0(R4),CNVRQATE      ASCII TO EBCDIC REQUEST
         BNE   TRYEBC              NO...
         L     R6,UNVATEP          YES, ADDRESS THE RELEVANT TABLE
         B     CONT1
TRYEBC   DS    0H                  MUST BE EBCDIC TO ASCII
         L     R6,UNVETAP          ADDRESS THE RELEVANT TABLE
CONT1    DS    0H
*
*        GET LOWER VALUE OF ACTUAL LENGTH AND POTENTIAL LENGTH
*        INTO R4
         L     R4,UNVTSLNP
         L     R4,0(0,R4)          PICK UP ACTUAL TS DATA LENGTH
         LTR   R4,R4               JUST CHECK ITS POSITIVE
         BNP   RETURN              IF NOT RETURN
         L     R7,CNVDATAO         GET THE OFFSET FROM THE TEMPLATE
         CR    R7,R4               IS THE OFFSET PAST THE DATA
         BNL   NEXTREC             YES, TRY THE NEXT RECORD
         A     R7,CNVDATAL         ADD IN THE LENGTH(TEMPLATE)
         CR    R7,R4               COMPARE OFFSET+LEN WITH REAL DATA
         BH    LENOK
         LR    R4,R7
LENOK    DS    0H
*        HERE R4 SHOULD BE THE SMALLER OF THE 2 LENGTHS
*        NOW CALCULATE THE  REAL LENGTH FOR CONVERSION
         S     R4,CNVDATAO         SUBTRACT THE OFFSET
         L     R7,UNVTSDP          ADDRESS ACTUAL DATA
         A     R7,CNVDATAO         ....PLUS OFFSET
*
*  R7 POINTS AT THE START OF WHERE WE TRANSLATE AND R4
*  INDICATES THE LENGTH (ENSURING WE DONT GO FURTHER THAN THE
*  ACTUAL DATA)
*
TRANSMOR DS    0H
         CH    R4,=H'256'          AT LEAST 256 BYTES TO DO
         BL    TRREST              NO
         TR    0(256,R7),0(R6)     TRANSLATE 256 BYTES
         SH    R4,=H'256'          DECREMENT THE COUNT
         AH    R7,=H'256'          INCREMENT THE POINTER
         B     TRANSMOR            DO SOME MORE
TRREST   DS    0H
         LTR   R4,R4               ANY LEFT TO DO ?
         BNP   DONETR              NO
         SH    R4,=H'1'            DECREMENT THE COUNTER FOR THE TR
         EX    R4,TRNSLT
         B     DONETR
TRNSLT   TR    0(0,R7),0(R6)
DONETR   DS    0H                  ALL DATA TRANSLATED
NEXTREC  DS    0H
         SR    R4,R4
         IC    R4,CNVRLEN          GET LENGTH OF THIS RECORD
         AR    R10,R4              AND ADDRESS THE NEXT ONE
         B     PROCESS
RETURN   DS    0H
         EXEC  CICS RETURN
         END   DFHUCNV
