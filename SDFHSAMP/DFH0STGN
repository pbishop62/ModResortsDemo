      CBL CICS('COBOL3,SP') APOST
PROCESS MAP,XREF,TRUNC(BIN)
      *****************************************************************
      *                                                               *
      * MODULE NAME = DFH0STGN                                        *
      *                                                               *
      * DESCRIPTIVE NAME = Collect and Print Statistics Sample        *
      *                                                               *
      *                                                               *
      *                                                               *
      *     Licensed Materials - Property of IBM                      *
      *                                                               *
      *     "Restricted Materials of IBM"                             *
      *                                                               *
      *     5655-Y04                                                  *
      *                                                               *
      *     (C) Copyright IBM Corp. 2001, 2016"                       *
      *                                                               *
      *                                                               *
      *                                                               *
      *                                                               *
      * STATUS = 7.2.0                                                *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      * DESCRIPTION :                                                 *
      *                                                               *
      *     This set of programs illustrate ways of using the EXEC    *
      *     CICS INQUIRE, COLLECT and EXTRACT STATISTICS commands of  *
      *     CICS to produce information about a CICS system.          *
      *     The reports include a CICS and MVS storage analysis.      *
      *     Statistics obtained using these commands can be used to   *
      *     aid the specification of the DSA Size parameters.         *
      *     (See the CICS Performance Guide and CICS Data Areas       *
      *      manuals for more information, and the CICS System        *
      *      Programming Reference for use of commands)               *
      *                                                               *
      *     These programs can be invoked from the PLT at PLTSD or    *
      *     as a CICS transaction (conversationally).                 *
      *     The output is sent via the CICS JES SPOOL interface for   *
      *     which a number of default parameters can be changed by    *
      *     the user to specify the distribution of the report(s).    *
      *     These defaults are defined in the working-storage         *
      *     section of the DFH0STAT program under the 01 level        *
      *     "OUTPUT-DEFAULTS".                                        *
      *                                                               *
      *     Installation instructions:-                               *
      *     Require SIT parameters:-  SPOOL=YES                       *
      *     Required CICS definitions:-                               *
      *         Transactions:-  STAT -> DFH0STAT                      *
      *         Programs:-    DFH0STAT   IBM COBOL                    *
      *                       DFH0STDB       for OS/390 & VM          *
      *                       DFH0STEJ           2.1.1 or later       *
      *                       DFH0STEP       "   "   "                *
      *                       DFH0STGN       "   "   "                *
      *                       DFH0STLK       "   "   "                *
      *                       DFH0STPR       "   "   "                *
      *                       DFH0STSA       "   "   "                *
      *                       DFH0STSY       "   "   "                *
      *                       DFH0STTP       "   "   "                *
      *                       DFH0STTS       "   "   "                *
      *                       DFH0STWB       "   "   "                *
      *                       DFH$STAS   Assembler                    *
      *                       DFH$STCN   Assembler                    *
      *                       DFH$STTB   Assembler                    *
      *         Mapsets:-     DFH0STM                                 *
      *                       DFH0STS                                 *
      *                                                               *
      *     The CICS-supplied RDO group, DFH$STAT, contains all       *
      *     the necessary resource definitions for this sample.       *
      *                                                               *
      *     All programs are command level and run above the          *
      *     16Mb line. Note: that DFH0STAT, DFH0STDB, DFH0STEJ,       *
      *     DFH0STEP, DFH0STGN, DFH0STLK, DFH0STPR, DFH0STSA,         *
      *     DFH0STSY, DFH0STTP, DFH0STTS, and DFH0STWB must be        *
      *     translated with the Translator options "COBOL3 and SP".   *
      *                                                               *
      *   SPOOL errors.  If an EXEC CICS SPOOL .. command fails       *
      *   when the program is run as a transaction, an error message  *
      *   is displayed on the users screen and the transaction will   *
      *   continue.  If the program is not being run from a terminal  *
      *   then a message will be sent to the console using EXEC       *
      *   CICS WRITE OPERATOR commands and the transaction will be    *
      *   terminated normally.                                        *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      * CHANGE ACTIVITY :                                             *
      *  $SEG(DFH0STGN),COMP(SAMPLES),PROD(CICS TS ):                 *
      *                                                               *
      *   PN= REASON REL YYMMDD HDXIII : REMARKS                      *
      *  $01= A76701 630 030812 HD4PALS: PQ76701 apar migrate         *
      *  $D0= I07099 620 010206 HD1VCJB : Module Creation             *
      *  $D1= I07566 640 040903 HD2GJST: Rename BASEAPI to CICSAPI    *
      *  $D2= I07610 650 050506 HD1VCJB: Clock/Timestamp Formatting   *
      *  $D3= I07733 650 060130 HD2GJST: Threadsafe override for GLUEs*
      *  $D4= I07766 650 061209 HD2GJST: Add RA Trace component       *
      *  $D5= I07987 660 080710 HDFXAB : Add EC Trace Levels 33 and 34*
      *  $L1= 897    650 061127 HD1VCJB: Dynamic Library Statistics Su*
      *  $L2= 897    650 070129 HD1VCJB: Library Support              *
      *  $L3= 938    660 080220 HD1VCJB: Add new RL domain            *
      *  $L4= 907    660 080303 HD4PALS: Number of component ids fix  *
      *  $L5= 927    660 080409 HD4PALS: Event Processing Domain trace*
      *  $L6= 912    660 080509 HDIADD : Add WU component tracing     *
      *  $L7= 923    660 080515 HD1VCJB: Atomservice Statistics Suppor*
      *  $L8= 927    660 080604 HD1VCJB: Event Processing Support     *
      *  $L9= 936    660 080610 HDAFDRB: Complete ML domain definition*
      *  $LA= 911    660 080709 HD1MA  : Create Region Status Domain  *
      *  $LB= 923    660 080722 HD1VCJB: Trace Support for W2 Domain  *
      *  $LC= R00290 670 100414 HD4PALT: new concurrency option       *
      *  $LD= R13822 670 100719 HDCQMDB: Support for TA domain        *
      *       R33926 680 111202 HD3BADW: Support MP domain            *
      *       R298   680 120309 HD2GJST: Support REQUIRED for TRUEs   *
      *       R38042 690 130404 HDAFDRB: Use EXTRACT STATISTICS       *
      *       R38042 690 130422 HDIDNCS: Use EXTRACT STATISTICS       *
      *  $P1= D16709 650 061019 HD1VCJB: Correct DFH0STAT Reports     *
      *  $P2= D26833 670 090911 HD1VCJB: Correct Trace Table Size fiel*
      *  $P3= D19680 670 100923 HD4PALT: Remove reference to TA domain*
      *       D48697 680 120329 HD1VCJB: JVMPOOL Removal              *
      *       D49348 680 120412 HD1VCJB: Correct Component Trace Rpt. *
      *       D98593 700 150106 HD3BADW: Fix comments                 *
      *      R113627 710 160125 HDLHJJH: Add AS domain trace          *
      *      D150786 720 181023 HDFVGMB: Add TRUNC(BIN) to PROCESS    *
      *                                                               *
      *****************************************************************
       ID DIVISION.
       PROGRAM-ID. DFH0STGN.

       ENVIRONMENT DIVISION.
           EJECT
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       77  STCN-COMMAREA               PIC S9(4)  COMP.
       77  INQUIRE-RESP                PIC S9(8)  COMP VALUE +0.

       77  SUB1                        PIC S9(4)  COMP VALUE +0.
       77  SUB2                        PIC S9(4)  COMP VALUE +0.
       77  SUB3                        PIC S9(4)  COMP VALUE +0.
       77  SUB4                        PIC S9(4)  COMP VALUE +0.
       77  SUB5                        PIC S9(4)  COMP VALUE +0.

       77  RESULT                      PIC S9(8)  COMP VALUE +0.

       77  TIME-DAYS                   PIC S9(8)  COMP VALUE +0.
       77  TIME-HOURS                  PIC S9(8)  COMP VALUE +0.
       77  TIME-MINUTES                PIC S9(8)  COMP VALUE +0.

       77  TRACE-TABLE-SIZE            PIC S9(8)  COMP VALUE +0.
       77  AUX-STATUS                  PIC S9(8)  COMP VALUE +0.
       77  GTF-STATUS                  PIC S9(8)  COMP VALUE +0.
       77  INT-STATUS                  PIC S9(8)  COMP VALUE +0.
       77  SWITCH-STATUS               PIC S9(8)  COMP VALUE +0.
       77  TRACE-SYSTEM-STATUS         PIC S9(8)  COMP VALUE +0.
       77  TRACE-USER-STATUS           PIC S9(8)  COMP VALUE +0.
       77  TC-EXIT-STATUS              PIC S9(8)  COMP VALUE +0.
       77  CURRENT-AUX-DATASET         PIC X           VALUE SPACE.
           EJECT
       77  TRANSACTION-ID              PIC X(4)        VALUE SPACES.
       77  TRANSACTION-TRACING         PIC S9(8)  COMP VALUE +0.

       77  EXIT-NAME                   PIC X(8)        VALUE SPACES.
       77  ENTRY-NAME                  PIC X(8)        VALUE SPACES.
       77  PROGRAM-NAME                PIC X(8)        VALUE SPACES.
       77  GLOBAL-AREA-ENTRY-NAME      PIC X(8)        VALUE SPACES.
       77  ENTRY-POINT                            USAGE IS POINTER.
       77  GLOBAL-AREA-LENGTH          PIC S9(4)  COMP VALUE +0.
       77  GLOBAL-AREA-USE-COUNT       PIC S9(4)  COMP VALUE +0.
       77  TASK-AREA-LENGTH            PIC S9(4)  COMP VALUE +0.
       77  NUMBER-OF-EXITS             PIC S9(4)  COMP VALUE +0.
       77  CONNECT-STATUS              PIC S9(8)  COMP VALUE +0.
       77  EXIT-PROGRAM-STATUS         PIC S9(8)  COMP VALUE +0.
       77  FORMAT-EDF-STATUS           PIC S9(8)  COMP VALUE +0.
       77  TASKSTART-STATUS            PIC S9(8)  COMP VALUE +0.
       77  SHUTDOWN-STATUS             PIC S9(8)  COMP VALUE +0.
       77  PURGEABLE-STATUS            PIC S9(8)  COMP VALUE +0.
       77  ERM-CONNECT-STATUS          PIC S9(8)  COMP VALUE +0.
       77  ERM-QUALIFIER               PIC X(8)        VALUE SPACES.
       77  INDOUBT-STATUS              PIC S9(8)  COMP VALUE +0.
       77  SPI-STATUS                  PIC S9(8)  COMP VALUE +0.
       77  API-STATUS                  PIC S9(8)  COMP VALUE +0.
       77  CONCURRENCY-STATUS          PIC S9(8)  COMP VALUE +0.
       77  EXIT-PROGRAM-USE-COUNT      PIC S9(8)  COMP VALUE +0.

       77  PROGRAM-CONCURRENCY         PIC S9(8)  COMP VALUE +0.
       77  PROGRAM-LIBRARY-NAME        PIC X(8)        VALUE SPACES.
       77  PROGRAM-LIBRARY-DSNAME      PIC X(44)       VALUE SPACES.

       77  ENQMODEL-NAME               PIC X(8)        VALUE SPACES.
       77  ENQMODEL-ENQSCOPE           PIC X(4)        VALUE SPACES.
       77  ENQMODEL-ENQNAME            PIC X(255)      VALUE SPACES.
       77  ENQMODEL-STATUS             PIC S9(8)  COMP VALUE +0.

      *****************************************************************
      ***  Total fields                                             ***
      *****************************************************************
       77  ENQMODELS                   PIC S9(9)  COMP-3 VALUE +0.

       77  TRANSACTION-TOTAL           PIC S9(9)  COMP-3 VALUE +0.
       77  TRACING-SPECIAL             PIC S9(9)  COMP-3 VALUE +0.
       77  TRACING-SUPPRESSED          PIC S9(9)  COMP-3 VALUE +0.
           EJECT
      *****************************************************************
      *** Fields used by the CONVERT-HEX-TO-CHAR routine.           ***
      *****************************************************************
       01  CONVERT-HEX-TO-CHAR-FIELDS.
           03  HEX-CHAR-TABLE      PIC X(15)   VALUE '123456789ABCDEF'.
           03  FILLER REDEFINES HEX-CHAR-TABLE.
               05  HEX-CHAR        PIC X       OCCURS 15.
           03  HEX-INPUT.
               05  HEX-INPUT-PTR   USAGE IS POINTER.
           03  FILLER REDEFINES HEX-INPUT.
               05  HEX-INPUT-CHAR  PIC X       OCCURS 4.
           03  HEX-OUTPUT.
               05  HEX-OUTPUT-CHAR PIC X       OCCURS 8.
           03  BINARY-FIELD        PIC 9(4)    COMP    VALUE 0.
           03  FILLER REDEFINES BINARY-FIELD.
               05  FILLER          PIC X.
               05  BINARY-CHAR     PIC X.
           03  LEFT-OUTPUT         PIC 9(4)    COMP    VALUE 0.
           03  RIGHT-OUTPUT        PIC 9(4)    COMP    VALUE 0.
           EJECT
      *****************************************************************
      ***  Trace interpretation definitions.                        ***
      *****************************************************************
       01  TRACE-FIELDS.
           03  TRACE-LEVEL             PIC Z9.
           03  FILLER REDEFINES TRACE-LEVEL.
               05  TRACE-LEVEL-CHAR    PIC X   OCCURS 2.
           03  TRACE-BIT-TABLE.
               05  FILLER              PIC 9(4)  COMP  VALUE 128.
               05  FILLER              PIC 9(4)  COMP  VALUE 64.
               05  FILLER              PIC 9(4)  COMP  VALUE 32.
               05  FILLER              PIC 9(4)  COMP  VALUE 16.
               05  FILLER              PIC 9(4)  COMP  VALUE 8.
               05  FILLER              PIC 9(4)  COMP  VALUE 4.
               05  FILLER              PIC 9(4)  COMP  VALUE 2.
               05  FILLER              PIC 9(4)  COMP  VALUE 1.
           03  FILLER REDEFINES TRACE-BIT-TABLE.
               05  TRACE-BIT-VALUE     PIC 9(4)  COMP  OCCURS 8.
           03  STD-TRACE-BITS          PIC 9(8)  COMP  VALUE 0.
           03  FILLER REDEFINES STD-TRACE-BITS.
               05  STD-TRACE-BYTE      PIC X   OCCURS 4.
           03  SPL-TRACE-BITS          PIC 9(8)  COMP  VALUE 0.
           03  FILLER REDEFINES SPL-TRACE-BITS.
               05  SPL-TRACE-BYTE      PIC X   OCCURS 4.
           03  STD-TRACE-LEVELS.
               05  STD-TRACE-LEVEL     PIC 9   OCCURS 32.
           03  SPL-TRACE-LEVELS.
               05  SPL-TRACE-LEVEL     PIC 9   OCCURS 32.
           03  STANDARD-TRACE-OUTPUT.
               05  STD-TRACE-OUTPUT    PIC X   OCCURS 33.
           03  SPECIAL-TRACE-OUTPUT.
               05  SPL-TRACE-OUTPUT    PIC X   OCCURS 33.
      *****************************************************************
      *        Binary representation of the current trace levels      *
      *                                                               *
      *            Byte 1     Byte 2     Byte 3     Byte 4            *
      *         | 00000000 | 00000000 | 00000000 | 00000000 |         *
      *****************************************************************
           03  STANDARD-TRACE-LEVEL    PIC 9(8)  COMP  OCCURS 66.
           03  SPECIAL-TRACE-LEVEL     PIC 9(8)  COMP  OCCURS 66.
      *****************************************************************
      *  List the trace components. This trace component list is      *
      *  used in the EXEC CICS INQUIRE TRACETYPE commands.            *
      *****************************************************************
       01  TRACE-COMPONENTS.
           03  NUMBER-COMPONENT-IDS    PIC 9(4)  COMP  VALUE 66.
           03  TRACE-COMPONENT-LIST.
      * AP AP domain
             05  I-APPLICATION         PIC 9(4)  COMP  VALUE 1.
             05  FILLER PIC XX    VALUE 'AP'.
             05  FILLER PIC X(28) VALUE 'Application domain . . . . .'.
      * AS Asynchronous services domain
             05  I-AS                  PIC 9(4)  COMP  VALUE 2.
             05  FILLER PIC XX    VALUE 'AS'.
             05  FILLER PIC X(28) VALUE 'Asynchronous Services domain'.
      * BA BAM
             05  I-BAM                 PIC 9(4)  COMP  VALUE 3.
             05  FILLER PIC XX    VALUE 'BA'.
             05  FILLER PIC X(28) VALUE 'Business Application Manager'.
      * BM Basic Mapping Support
             05  I-BM                  PIC 9(4)  COMP  VALUE 4.
             05  FILLER PIC XX    VALUE 'BM'.
             05  FILLER PIC X(28) VALUE 'Basic Mapping Support. . . .'.
      * BR Bridge
             05  I-BR                  PIC 9(4)  COMP  VALUE 5.
             05  FILLER PIC XX    VALUE 'BR'.
             05  FILLER PIC X(28) VALUE 'Bridge . . . . . . . . . . .'.
      * CP CPI-C Interface
             05  I-CPI                 PIC 9(4)  COMP  VALUE 6.
             05  FILLER PIC XX    VALUE 'CP'.
             05  FILLER PIC X(28) VALUE 'CPI-C interface. . . . . . .'.
      * DC Dump Control
             05  I-DC                  PIC 9(4)  COMP  VALUE 7.
             05  FILLER PIC XX    VALUE 'DC'.
             05  FILLER PIC X(28) VALUE 'Dump compatibility layer . .'.
      * DD Directory Manager
             05  I-DIRMGR              PIC 9(4)  COMP  VALUE 8.
             05  FILLER PIC XX    VALUE 'DD'.
             05  FILLER PIC X(28) VALUE 'Directory manager. . . . . .'.
      * DH Document Handler
             05  I-DOCUMENT            PIC 9(4)  COMP  VALUE 9.
             05  FILLER PIC XX    VALUE 'DH'.
             05  FILLER PIC X(28) VALUE 'Document Handler domain. . .'.
      * DM Domain Manager
             05  I-DOMAINMGR           PIC 9(4)  COMP  VALUE 10.
             05  FILLER PIC XX    VALUE 'DM'.
             05  FILLER PIC X(28) VALUE 'Domain manager domain. . . .'.
      * DP Debug Program Manager
             05  I-DP                  PIC 9(4)  COMP  VALUE 11.
             05  FILLER PIC XX    VALUE 'DP'.
             05  FILLER PIC X(28) VALUE 'Debugging Profiles domain. .'.
      * DS Dispatch Manager
             05  I-DISPATCHER          PIC 9(4)  COMP  VALUE 12.
             05  FILLER PIC XX    VALUE 'DS'.
             05  FILLER PIC X(28) VALUE 'Dispatcher domain. . . . . .'.
      * DU Dump Manager
             05  I-DUMP                PIC 9(4)  COMP  VALUE 13.
             05  FILLER PIC XX    VALUE 'DU'.
             05  FILLER PIC X(28) VALUE 'Dump domain. . . . . . . . .'.
      * EC Event Capture
             05  I-EC                  PIC 9(4)  COMP  VALUE 14.
             05  FILLER PIC XX    VALUE 'EC'.
             05  FILLER PIC X(28) VALUE 'Event Capture. . . . . . . .'.
      * EI Exec Interface
             05  I-EI                  PIC 9(4)  COMP  VALUE 15.
             05  FILLER PIC XX    VALUE 'EI'.
             05  FILLER PIC X(28) VALUE 'Exec interface . . . . . . .'.
      * EJ Enterprise Java
             05  I-EJ                  PIC 9(4)  COMP  VALUE 16.
             05  FILLER PIC XX    VALUE 'EJ'.
             05  FILLER PIC X(28) VALUE 'Enterprise Java domain . . .'.
      * EM Event Manager
             05  I-EVENT               PIC 9(4)  COMP  VALUE 17.
             05  FILLER PIC XX    VALUE 'EM'.
             05  FILLER PIC X(28) VALUE 'Event Manager domain . . . .'.
      * EP Event Processing
             05  I-EP                  PIC 9(4)  COMP  VALUE 18.
             05  FILLER PIC XX    VALUE 'EP'.
             05  FILLER PIC X(28) VALUE 'Event Processing domain. . .'.
      * FC File Control
             05  I-FC                  PIC 9(4)  COMP  VALUE 19.
             05  FILLER PIC XX    VALUE 'FC'.
             05  FILLER PIC X(28) VALUE 'File control . . . . . . . .'.
      * GC CICS Global Catalog
             05  I-GLOBALCATLG         PIC 9(4)  COMP  VALUE 20.
             05  FILLER PIC XX    VALUE 'GC'.
             05  FILLER PIC X(28) VALUE 'Global Catalog domain. . . .'.
      * IC Interval Control
             05  I-IC                  PIC 9(4)  COMP  VALUE 21.
             05  FILLER PIC XX    VALUE 'IC'.
             05  FILLER PIC X(28) VALUE 'Interval control . . . . . .'.
      * IE ECI over TCPIP
             05  I-IPECI               PIC 9(4)  COMP  VALUE 22.
             05  FILLER PIC XX    VALUE 'IE'.
             05  FILLER PIC X(28) VALUE 'ECI over TCP/IP domain . . .'.
      * IS ISC
             05  I-IS                  PIC 9(4)  COMP  VALUE 23.
             05  FILLER PIC XX    VALUE 'IS'.
             05  FILLER PIC X(28) VALUE 'ISC. . . . . . . . . . . . .'.
      * KC Task Control
             05  I-KC                  PIC 9(4)  COMP  VALUE 24.
             05  FILLER PIC XX    VALUE 'KC'.
             05  FILLER PIC X(28) VALUE 'Task Control . . . . . . . .'.
      * KE Kernel
             05  I-KERNEL              PIC 9(4)  COMP  VALUE 25.
             05  FILLER PIC XX    VALUE 'KE'.
             05  FILLER PIC X(28) VALUE 'Kernel . . . . . . . . . . .'.
      * LC CICS Local Catalog
             05  I-LOCALCATLG          PIC 9(4)  COMP  VALUE 26.
             05  FILLER PIC XX    VALUE 'LC'.
             05  FILLER PIC X(28) VALUE 'Local Catalog domain . . . .'.
      * LD Program Loader
             05  I-LOADER              PIC 9(4)  COMP  VALUE 27.
             05  FILLER PIC XX    VALUE 'LD'.
             05  FILLER PIC X(28) VALUE 'Loader domain. . . . . . . .'.
      * LG Logger
             05  I-LOGGER              PIC 9(4)  COMP  VALUE 28.
             05  FILLER PIC XX    VALUE 'LG'.
             05  FILLER PIC X(28) VALUE 'Log Manager domain . . . . .'.
      * LM Lock Manager
             05  I-LOCKMGR             PIC 9(4)  COMP  VALUE 29.
             05  FILLER PIC XX    VALUE 'LM'.
             05  FILLER PIC X(28) VALUE 'Lock Manager domain. . . . .'.
      * ME Message Manager
             05  I-MESSAGE             PIC 9(4)  COMP  VALUE 30.
             05  FILLER PIC XX    VALUE 'ME'.
             05  FILLER PIC X(28) VALUE 'Message domain . . . . . . .'.
      * ML Markup Language
             05  I-ML                  PIC 9(4)  COMP  VALUE 31.
             05  FILLER PIC XX    VALUE 'ML'.
             05  FILLER PIC X(28) VALUE 'Markup Language. . . . . . .'.
      * MN Monitoring Manager
             05  I-MONITOR             PIC 9(4)  COMP  VALUE 32.
             05  FILLER PIC XX    VALUE 'MN'.
             05  FILLER PIC X(28) VALUE 'Monitoring domain. . . . . .'.
      * MP Managed Platform
             05  I-MP                  PIC 9(4)  COMP  VALUE 33.
             05  FILLER PIC XX    VALUE 'MP'.
             05  FILLER PIC X(28) VALUE 'Managed Platform . . . . . .'.
      * NQ Enqueue Manager
             05  I-ENQUEUE             PIC 9(4)  COMP  VALUE 34.
             05  FILLER PIC XX    VALUE 'NQ'.
             05  FILLER PIC X(28) VALUE 'Enqueue Manager. . . . . . .'.
      * OT OT Domain
             05  I-OT                  PIC 9(4)  COMP  VALUE 35.
             05  FILLER PIC XX    VALUE 'OT'.
             05  FILLER PIC X(28) VALUE 'Object Transaction domain. .'.
      * PA Parameter Manager
             05  I-PARAMGR             PIC 9(4)  COMP  VALUE 36.
             05  FILLER PIC XX    VALUE 'PA'.
             05  FILLER PIC X(28) VALUE 'Parameter Manager. . . . . .'.
      * PC Program Control
             05  I-PC                  PIC 9(4)  COMP  VALUE 37.
             05  FILLER PIC XX    VALUE 'PC'.
             05  FILLER PIC X(28) VALUE 'Program control. . . . . . .'.
      * PG Program Manager
             05  I-PROGMGR             PIC 9(4)  COMP  VALUE 38.
             05  FILLER PIC XX    VALUE 'PG'.
             05  FILLER PIC X(28) VALUE 'Program Manager domain . . .'.
      * PI Pipeline Manager domain
             05  I-PIPEMGR             PIC 9(4)  COMP  VALUE 39.
             05  FILLER PIC XX    VALUE 'PI'.
             05  FILLER PIC X(28) VALUE 'Pipeline Manager domain  . .'.
      * PT Partner Management
             05  I-PT                  PIC 9(4)  COMP  VALUE 40.
             05  FILLER PIC XX    VALUE 'PT'.
             05  FILLER PIC X(28) VALUE 'Partner Management . . . . .'.
      * RA Resource Manager Adapters
             05  I-RA                  PIC 9(4)  COMP  VALUE 41.
             05  FILLER PIC XX    VALUE 'RA'.
             05  FILLER PIC X(28) VALUE 'Resource Manager Adapters. .'.
      * RI RMI
             05  I-RI                  PIC 9(4)  COMP  VALUE 42.
             05  FILLER PIC XX    VALUE 'RI'.
             05  FILLER PIC X(28) VALUE 'RMI. . . . . . . . . . . . .'.
      * RL Resource Lifecycle Manager
             05  I-RL                  PIC 9(4)  COMP  VALUE 43.
             05  FILLER PIC XX    VALUE 'RL'.
             05  FILLER PIC X(28) VALUE 'Resource Lifecycle Manager .'.
      * RM Recovery Manager
             05  I-RM                  PIC 9(4)  COMP  VALUE 44.
             05  FILLER PIC XX    VALUE 'RM'.
             05  FILLER PIC X(28) VALUE 'Recovery Manager . . . . . .'.
      * RS Region Status
             05  I-RS                  PIC 9(4)  COMP  VALUE 45.
             05  FILLER PIC XX    VALUE 'RS'.
             05  FILLER PIC X(28) VALUE 'Region Status. . . . . . . .'.
      * RX RRS-coordinated EXCI
             05  I-RX                  PIC 9(4)  COMP  VALUE 46.
             05  FILLER PIC XX    VALUE 'RX'.
             05  FILLER PIC X(28) VALUE 'RRMS domain. . . . . . . . .'.
      * RZ Request Streams
             05  I-RZ                  PIC 9(4)  COMP  VALUE 47.
             05  FILLER PIC XX    VALUE 'RZ'.
             05  FILLER PIC X(28) VALUE 'Request Streams. . . . . . .'.
      * SC Storage Control
             05  I-SC                  PIC 9(4)  COMP  VALUE 48.
             05  FILLER PIC XX    VALUE 'SC'.
             05  FILLER PIC X(28) VALUE 'Storage control. . . . . . .'.
      * SH Scheduler Services
             05  I-SCHEDULER           PIC 9(4)  COMP  VALUE 49.
             05  FILLER PIC XX    VALUE 'SH'.
             05  FILLER PIC X(28) VALUE 'Scheduler Services domain. .'.
      * SJ SJVM Domain
             05  I-SJVM                PIC 9(4)  COMP  VALUE 50.
             05  FILLER PIC XX    VALUE 'SJ'.
             05  FILLER PIC X(28) VALUE 'JVM domain . . . . . . . . .'.
      * SM Storage Manager
             05  I-STORAGE             PIC 9(4)  COMP  VALUE 51.
             05  FILLER PIC XX    VALUE 'SM'.
             05  FILLER PIC X(28) VALUE 'Storage manager domain . . .'.
      * SO Sockets Domain
             05  I-SOCKETS             PIC 9(4)  COMP  VALUE 52.
             05  FILLER PIC XX    VALUE 'SO'.
             05  FILLER PIC X(28) VALUE 'Sockets domain . . . . . . .'.
      * ST Statistics Manager
             05  I-STATISTICS          PIC 9(4)  COMP  VALUE 53.
             05  FILLER PIC XX    VALUE 'ST'.
             05  FILLER PIC X(28) VALUE 'Statistics domain. . . . . .'.
      * SZ Front-End Prog I/F
             05  I-SZ                  PIC 9(4)  COMP  VALUE 54.
             05  FILLER PIC XX    VALUE 'SZ'.
             05  FILLER PIC X(28) VALUE 'Front End Prog Interface . .'.
      * TC Terminal Control
             05  I-TC                  PIC 9(4)  COMP  VALUE 55.
             05  FILLER PIC XX    VALUE 'TC'.
             05  FILLER PIC X(28) VALUE 'Terminal control . . . . . .'.
      * TD Transient Data
             05  I-TD                  PIC 9(4)  COMP  VALUE 56.
             05  FILLER PIC XX    VALUE 'TD'.
             05  FILLER PIC X(28) VALUE 'Transient data . . . . . . .'.
      * TI Timer Manager
             05  I-TIMER               PIC 9(4)  COMP  VALUE 57.
             05  FILLER PIC XX    VALUE 'TI'.
             05  FILLER PIC X(28) VALUE 'Timer domain . . . . . . . .'.
      * TR Trace Manager
             05  I-TRACE               PIC 9(4)  COMP  VALUE 58.
             05  FILLER PIC XX    VALUE 'TR'.
             05  FILLER PIC X(28) VALUE 'Trace domain . . . . . . . .'.
      * TS Temporary Storage
             05  I-TS                  PIC 9(4)  COMP  VALUE 59.
             05  FILLER PIC XX    VALUE 'TS'.
             05  FILLER PIC X(28) VALUE 'Temporary storage. . . . . .'.
      * UE User Exit Interface
             05  I-UE                  PIC 9(4)  COMP  VALUE 60.
             05  FILLER PIC XX    VALUE 'UE'.
             05  FILLER PIC X(28) VALUE 'User exit interface. . . . .'.
      * US User Domain
             05  I-USER                PIC 9(4)  COMP  VALUE 61.
             05  FILLER PIC XX    VALUE 'US'.
             05  FILLER PIC X(28) VALUE 'User domain. . . . . . . . .'.
      * WB Web Domain
             05  I-WB                  PIC 9(4)  COMP  VALUE 62.
             05  FILLER PIC XX    VALUE 'WB'.
             05  FILLER PIC X(28) VALUE 'Web domain . . . . . . . . .'.
      * WU RESTful Interface
             05  I-WU                  PIC 9(4)  COMP  VALUE 63.
             05  FILLER PIC XX    VALUE 'WU'.
             05  FILLER PIC X(28) VALUE 'RESTful interface. . . . . .'.
      * W2 Web 2.0 Domain
             05  I-W2                  PIC 9(4)  COMP  VALUE 64.
             05  FILLER PIC XX    VALUE 'W2'.
             05  FILLER PIC X(28) VALUE 'Web 2.0 domain . . . . . . .'.
      * XM Transaction Manager
             05  I-TRANMGR             PIC 9(4)  COMP  VALUE 65.
             05  FILLER PIC XX    VALUE 'XM'.
             05  FILLER PIC X(28) VALUE 'Transaction manager. . . . .'.
      * XS Security domain
             05  I-SECURITY            PIC 9(4)  COMP  VALUE 66.
             05  FILLER PIC XX    VALUE 'XS'.
             05  FILLER PIC X(28) VALUE 'Security domain. . . . . . .'.
           03  FILLER REDEFINES TRACE-COMPONENT-LIST.
             05  TRACE-COMPONENTS    OCCURS 66.
               07  TRACE-COMPONENT-INDEX   PIC 9(4)  COMP.
               07  TRACE-COMPONENT-ID      PIC XX.
               07  TRACE-COMPONENT-TITLE   PIC X(28).
           EJECT
      *****************************************************************
      ***  Report print line definitions                            ***
      *****************************************************************
       01  PRINT-LINE.
           03  PRINT-CONTROL           PIC X.
           03  PP1-132.
               05  PP1-18.
                   07  PP1-17.
                       09  PP1-16.
                           11  PP1-15  PIC X(15).
                           11  FILLER  PIC X.
                       09  FILLER      PIC X.
                   07  FILLER          PIC X.
               05  FILLER REDEFINES PP1-18.
                   07  PP1-14          PIC X(14).
                   07  FILLER          PIC X(4).
               05  FILLER              PIC X(114).
           03 FILLER REDEFINES PP1-132.
               05  PP1-23              PIC X(23).
               05  FILLER              PIC X(9).
               05  PP33-38             PIC ZZ,ZZ9.
               05  FILLER              PIC X(34).
               05  PP73-82             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X(50).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-82.
                   07  PP3-66          PIC X(64).
                   07  FILLER          PIC XX.
                   07  PP69-82         PIC X(14).
               05  FILLER              PIC X(50).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-10              PIC X(8).
               05  FILLER              PIC X(36).
               05  PP47-60             PIC X(14).
               05  FILLER              PIC X(72).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-6               PIC X(4).
               05  FILLER              PIC XX.
               05  PP9-16              PIC X(8).
               05  FILLER              PIC XX.
               05  PP19-26             PIC X(8).
               05  FILLER              PIC XX.
               05  PP29-38             PIC X(10).
               05  FILLER              PIC XX.
               05  PP41-50             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP53-62             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP65-74             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP77-86             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP89-98             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  FILLER              PIC X(32).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  FILLER              PIC XXX.
               05  PP6-7               PIC XX.
               05  FILLER              PIC X(4).
               05  FILLER              PIC XX.
               05  PP14-41             PIC X(28).
               05  FILLER              PIC XX.
               05  PP44-75             PIC X(32).
               05  FILLER              PIC XX.
               05  PP78-109            PIC X(32).
               05  FILLER              PIC XX.
               05  FILLER              PIC X(21).
           03 FILLER REDEFINES PP1-132.
               05  PP1-35              PIC X(35).
               05  FILLER              PIC X.
               05  PP37-121.
                   07  PP37-44.
                       09  PP37-41.
                           11  PP37-40 PIC X(4).
                           11  FILLER  PIC X.
                       09  FILLER      PIC XXX.
                   07  FILLER          PIC X(77).
               05  FILLER              PIC X(11).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC X(12).
               05  PP13-20             PIC X(8).
               05  FILLER              PIC X(26).
               05  PP47-52             PIC ZZ,ZZ9.
               05  FILLER              PIC X(80).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-44.
                   07  FILLER          PIC X(33).
                   07  PP36-44         PIC Z,ZZZ,ZZ9.
               05  PP45                PIC X.
               05  FILLER              PIC X(87).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-48              PIC X(46).
               05  FILLER              PIC XX.
               05  PP51-60             PIC ZZ,ZZZ,ZZ9.
               05  FILLER              PIC X(72).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-34.
                   07  FILLER          PIC X(31).
                   07  PP34            PIC X.
               05  FILLER              PIC X(18).
               05  PP53-60             PIC X(8).
               05  FILLER              PIC X(72).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-132.
                   07  PP3-102.
                       09  PP3-72.
                           11  PP3-37  PIC X(35).
                           11  PP38-72 PIC X(35).
                       09  PP73-102    PIC X(30).
                   07  PP103-132       PIC X(30).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XXX.
               05  PP4-17              PIC X(14).
               05  FILLER              PIC X(22).
               05  PP40-45             PIC ZZ,ZZ9.
               05  FILLER              PIC X(9).
               05  PP55-61             PIC X(7).
               05  FILLER              PIC XXX.
               05  PP65-70             PIC ZZ,ZZ9.
               05  FILLER              PIC XXX.
               05  PP74-80             PIC X(7).
               05  FILLER              PIC XX.
               05  PP83-93             PIC X(11).
               05  FILLER              PIC XX.
               05  PP96-106            PIC X(11).
               05  FILLER              PIC X(26).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC X(22).
               05  PP23-26             PIC X(4).
               05  FILLER              PIC XX.
               05  PP29-39             PIC X(11).
               05  FILLER              PIC XX.
               05  PP42-52             PIC X(11).
               05  FILLER              PIC XX.
               05  PP55-62             PIC X(8).
               05  FILLER              PIC XXX.
               05  PP66-71             PIC ZZ,ZZ9.
               05  FILLER              PIC X(6).
               05  PP78-80             PIC XXX.
               05  FILLER              PIC X(5).
               05  PP86-88             PIC XXX.
               05  FILLER              PIC X(4).
               05  PP93-95             PIC XXX.
               05  FILLER              PIC X(5).
               05  PP101-107           PIC X(7).
               05  FILLER              PIC XX.
               05  PP110-112           PIC XXX.
               05  FILLER              PIC X(5).
               05  PP118-120           PIC XXX.
               05  FILLER              PIC X(12).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC X(22).
               05  PP23-30             PIC X(8).
               05  FILLER              PIC XXX.
               05  PP34-41             PIC X(8).
               05  FILLER              PIC XX.
               05  PP44-49             PIC ZZ,ZZ9.
               05  FILLER              PIC X(5).
               05  PP55-60             PIC ZZ,ZZ9.
               05  FILLER              PIC XXX.
               05  PP64-76             PIC Z,ZZZ,ZZZ,ZZ9.
               05  FILLER              PIC XX.
               05  PP79-86             PIC X(8).
               05  FILLER              PIC XX.
               05  PP89-132            PIC X(44).
           03 FILLER REDEFINES PP1-132.
               05  FILLER              PIC XX.
               05  PP3-33.
                   07  FILLER          PIC X.
                   07  PP4-33          PIC X(30).
               05  FILLER              PIC XX.
               05  PP36-43.
                   07  PP36-41.
                       09  PP36-38.
                           11  PP36    PIC X.
                           11  FILLER  PIC XX.
                       09  FILLER      PIC XXX.
                   07  FILLER          PIC XX.
               05  FILLER              PIC X(10).
               05  PP54-56             PIC XXX.
               05  FILLER              PIC X(76).
           EJECT
       LINKAGE SECTION.
           EJECT
      *****************************************************************
      ***  Statistics Sample Programs Commarea.                     ***
      *****************************************************************
       01  DFHCOMMAREA.
           COPY DFH0STCM.
           EJECT
      *****************************************************************
      ***  Global User Exit Point Id Table.                         ***
      *****************************************************************
       01  EXIT-POINT-ID-TABLE.
           03  NUMBER-OF-EXIT-POINTS   PIC S9(8)   COMP.
           03  EXIT-POINT-ID   OCCURS 1 TO 256
                   DEPENDING ON NUMBER-OF-EXIT-POINTS  PIC X(8).
           EJECT
      *****************************************************************
      *** Data structures for Enqueue Manager global statistics     ***
      *** (See the CICS Data Areas manual)                          ***
      *****************************************************************
           COPY DFHNQGDS.
           EJECT
      *****************************************************************
      *** Data structures for Recovery Manager global statistics    ***
      *** (See the CICS Data Areas manual)                          ***
      *****************************************************************
           COPY DFHRMGDS.
           EJECT
      *****************************************************************
      *** Data structures for Transaction Resource statistics       ***
      *** (See the CICS Data Areas manual)                          ***
      *****************************************************************
           COPY DFHXMRDS.
           EJECT
      *****************************************************************
      ***                                                           ***
      ***           CICS Collect and print statistics               ***
      ***                                                           ***
      *****************************************************************
       PROCEDURE DIVISION.

      *****************************************************************
      *** MAIN-PROCESSING                                           ***
      ***     Initialise the totals fields                          ***
      ***     Print the statistics reports                          ***
      ***     Return to DFH0STLK                                    ***
      *****************************************************************

       MAIN-PROCESSING SECTION.

           PERFORM TOTALS-INITIALISE.

           PERFORM PRINT-STATISTICS.

           EXEC CICS RETURN
           END-EXEC.

       MAIN-PROCESSING-EXIT.
           GOBACK.
           EJECT
      *****************************************************************
      *****************************************************************
      ***         Collect and Print the CICS Statistics             ***
      *****************************************************************
      *****************************************************************
      ***                                                           ***
      *** 1. Print the statistics in the following order:-          ***
      ***    - User Exit Programs                                   ***
      ***    - Global User Exits                                    ***
      ***    - Trace Entries and Levels                             ***
      ***    - Enqueue Manager                                      ***
      ***    - Enqueue Models                                       ***
      ***    - Recovery Manager                                     ***
      ***                                                           ***
      *****************************************************************
      *****************************************************************

       PRINT-STATISTICS SECTION.

           IF SELECT-USER-EXIT-PGMS = 'Y' OR 'y' THEN
               PERFORM USER-EXIT-PROGRAMS
           END-IF.

           IF SELECT-USER-EXITS = 'Y' OR 'y' THEN
               PERFORM GLOBAL-USER-EXITS
           END-IF.

           IF SELECT-TRACE-SETTINGS = 'Y' OR 'y' THEN
               PERFORM TRACE-SETTINGS-LEVELS
           END-IF.

           IF SELECT-ENQUEUE = 'Y' OR 'y' THEN
               PERFORM ENQUEUE-MGR-STATISTICS
           END-IF.

           IF SELECT-ENQMODELS = 'Y' OR 'y' THEN
               PERFORM ENQMODEL-STATISTICS
           END-IF.

           IF SELECT-RECOVERY = 'Y' OR 'y' THEN
               PERFORM RECOVERY-MGR-STATISTICS
           END-IF.

       PRINT-STATISTICS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** USER-EXIT-PROGRAMS                                        ***
      *****************************************************************
       USER-EXIT-PROGRAMS SECTION.

           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO EXIT-PGM-PAGENO.

           MOVE '-'     TO PRINT-CONTROL.
           MOVE 'User Exit Programs' TO PP1-18.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-18.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      *** Print the programs that are enabled as User Exit Programs.***
      *****************************************************************
           MOVE '0'     TO PRINT-CONTROL.

           EXEC CICS INQUIRE EXITPROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE EXITPROGRAM(PROGRAM-NAME) NEXT
               ENTRYNAME(ENTRY-NAME)
               ENTRY(ENTRY-POINT)
               GAENTRYNAME(GLOBAL-AREA-ENTRY-NAME)
               GALENGTH(GLOBAL-AREA-LENGTH)
               GAUSECOUNT(GLOBAL-AREA-USE-COUNT)
               NUMEXITS(NUMBER-OF-EXITS)
               STARTSTATUS(EXIT-PROGRAM-STATUS)
               USECOUNT(EXIT-PROGRAM-USE-COUNT)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

                   IF LINE-COUNT > LINES-PER-PAGE THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   IF SUB-HEADINGS = 'Y' THEN
                       PERFORM EXITPGM-SUB-HEADINGS-1
                   END-IF

                   EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME)
                       CONCURRENCY(PROGRAM-CONCURRENCY)
                       LIBRARY(PROGRAM-LIBRARY-NAME)
                       LIBRARYDSN(PROGRAM-LIBRARY-DSNAME)
                       NOHANDLE
                   END-EXEC

                   MOVE PROGRAM-NAME             TO PP3-10
                   MOVE ENTRY-NAME               TO PP13-20
                   MOVE GLOBAL-AREA-ENTRY-NAME   TO PP23-30
                   MOVE GLOBAL-AREA-LENGTH       TO PP33-38
                   MOVE GLOBAL-AREA-USE-COUNT    TO PP40-45
                   MOVE NUMBER-OF-EXITS          TO PP47-52
                   EVALUATE EXIT-PROGRAM-STATUS
                       WHEN DFHVALUE(STARTED)
                           MOVE 'Started'        TO PP55-61
                       WHEN DFHVALUE(STOPPED)
                           MOVE 'Stopped'        TO PP55-61
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   MOVE EXIT-PROGRAM-USE-COUNT   TO PP64-76
                   MOVE PROGRAM-LIBRARY-NAME     TO PP79-86
                   MOVE PROGRAM-LIBRARY-DSNAME   TO PP89-132

                   PERFORM WRITE-OUTPUT

                   EXEC CICS INQUIRE EXITPROGRAM(PROGRAM-NAME) NEXT
                       ENTRYNAME(ENTRY-NAME)
                       ENTRY(ENTRY-POINT)
                       GAENTRYNAME(GLOBAL-AREA-ENTRY-NAME)
                       GALENGTH(GLOBAL-AREA-LENGTH)
                       GAUSECOUNT(GLOBAL-AREA-USE-COUNT)
                       NUMEXITS(NUMBER-OF-EXITS)
                       STARTSTATUS(EXIT-PROGRAM-STATUS)
                       USECOUNT(EXIT-PROGRAM-USE-COUNT)
                       RESP(INQUIRE-RESP)
                   END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE EXITPROGRAM END
           END-EXEC.

           PERFORM PAGE-HEADINGS.

      *****************************************************************
      *** Print the programs that are enabled as User Exit Programs.***
      *****************************************************************
           MOVE '0'     TO PRINT-CONTROL.

           EXEC CICS INQUIRE EXITPROGRAM START
           END-EXEC.

           EXEC CICS INQUIRE EXITPROGRAM(PROGRAM-NAME) NEXT
               APIST(API-STATUS)
               CONCURRENTST(CONCURRENCY-STATUS)
               CONNECTST(CONNECT-STATUS)
               ENTRY(ENTRY-POINT)
               ENTRYNAME(ENTRY-NAME)
               FORMATEDFST(FORMAT-EDF-STATUS)
               INDOUBTST(INDOUBT-STATUS)
               PURGEABLEST(PURGEABLE-STATUS)
               QUALIFIER(ERM-QUALIFIER)
               SHUTDOWNST(SHUTDOWN-STATUS)
               SPIST(SPI-STATUS)
               TALENGTH(TASK-AREA-LENGTH)
               TASKSTARTST(TASKSTART-STATUS)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

                   IF LINE-COUNT > LINES-PER-PAGE THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   IF SUB-HEADINGS = 'Y' THEN
                       PERFORM EXITPGM-SUB-HEADINGS-2
                   END-IF

                   EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME)
                       CONCURRENCY(PROGRAM-CONCURRENCY)
                       NOHANDLE
                   END-EXEC

                   MOVE PROGRAM-NAME             TO PP3-10
                   MOVE ENTRY-NAME               TO PP13-20
                   EVALUATE API-STATUS
                       WHEN DFHVALUE(CICSAPI)
                           MOVE 'Cics'           TO PP23-26
                       WHEN DFHVALUE(OPENAPI)
                           MOVE 'Open'           TO PP23-26
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE PROGRAM-CONCURRENCY
                       WHEN DFHVALUE(QUASIRENT)
                           MOVE 'Quasirent  '    TO PP29-39
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Threadsafe '    TO PP29-39
                       WHEN DFHVALUE(REQUIRED)
                           MOVE 'Required   '    TO PP29-39
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE CONCURRENCY-STATUS
                       WHEN DFHVALUE(QUASIRENT)
                           MOVE 'Quasirent  '    TO PP42-52
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Threadsafe '    TO PP42-52
                       WHEN DFHVALUE(REQUIRED)
                           MOVE 'Required   '    TO PP42-52
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   MOVE ERM-QUALIFIER            TO PP55-62
                   MOVE TASK-AREA-LENGTH         TO PP66-71
                   EVALUATE TASKSTART-STATUS
                       WHEN DFHVALUE(TASKSTART)
                           MOVE 'Yes'            TO PP78-80
                       WHEN DFHVALUE(NOTASKSTART)
                           MOVE ' No'            TO PP78-80
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE FORMAT-EDF-STATUS
                       WHEN DFHVALUE(FORMATEDF)
                           MOVE 'Yes'            TO PP86-88
                       WHEN DFHVALUE(NOFORMATEDF)
                           MOVE ' No'            TO PP86-88
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE SHUTDOWN-STATUS
                       WHEN DFHVALUE(SHUTDOWN)
                           MOVE 'Yes'            TO PP93-95
                       WHEN DFHVALUE(NOSHUTDOWN)
                           MOVE ' No'            TO PP93-95
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE INDOUBT-STATUS
                       WHEN DFHVALUE(WAIT)
                           MOVE '  Wait '        TO PP101-107
                       WHEN DFHVALUE(NOWAIT)
                           MOVE 'No Wait'        TO PP101-107
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE SPI-STATUS
                       WHEN DFHVALUE(SPI)
                           MOVE 'Yes'            TO PP110-112
                       WHEN DFHVALUE(NOSPI)
                           MOVE ' No'            TO PP110-112
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE PURGEABLE-STATUS
                       WHEN DFHVALUE(PURGEABLE)
                           MOVE 'Yes'            TO PP118-120
                       WHEN DFHVALUE(NOTPURGEABLE)
                           MOVE ' No'            TO PP118-120
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE

                   PERFORM WRITE-OUTPUT

                   EXEC CICS INQUIRE EXITPROGRAM(PROGRAM-NAME) NEXT
                       APIST(API-STATUS)
                       CONCURRENTST(CONCURRENCY-STATUS)
                       CONNECTST(CONNECT-STATUS)
                       ENTRY(ENTRY-POINT)
                       ENTRYNAME(ENTRY-NAME)
                       FORMATEDFST(FORMAT-EDF-STATUS)
                       INDOUBTST(INDOUBT-STATUS)
                       PURGEABLEST(PURGEABLE-STATUS)
                       QUALIFIER(ERM-QUALIFIER)
                       SHUTDOWNST(SHUTDOWN-STATUS)
                       SPIST(SPI-STATUS)
                       TALENGTH(TASK-AREA-LENGTH)
                       TASKSTARTST(TASKSTART-STATUS)
                       RESP(INQUIRE-RESP)
                   END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE EXITPROGRAM END
           END-EXEC.

       USER-EXIT-PROGRAMS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** GLOBAL-USER-EXITS                                         ***
      *****************************************************************
       GLOBAL-USER-EXITS SECTION.

           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO USER-EXITS-PAGENO.

      *****************************************************************
      *** Print the Global User Exits (GLUEs).                      ***
      *****************************************************************
           MOVE '-'     TO PRINT-CONTROL.
           MOVE 'Global User Exits' TO PP1-17.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-17.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      *** Print the Programs enabled at each Global User Exit.      ***
      *****************************************************************

           MOVE '0'     TO PRINT-CONTROL.

           MOVE 1 TO SUB1.

      *****************************************************************
      *** Load exit point table.                                    ***
      *****************************************************************
           EXEC CICS LOAD PROGRAM('DFH$STTB')
               SET(ADDRESS OF EXIT-POINT-ID-TABLE)
           END-EXEC.

      *****************************************************************
      *** If exit point table loaded ok print the exit programs.    ***
      *****************************************************************
           IF EIBRESP = DFHRESP(NORMAL) THEN
               PERFORM WITH TEST BEFORE
                   UNTIL SUB1 > NUMBER-OF-EXIT-POINTS

                       PERFORM PRINT-EXITPROGRAMS

                       ADD 1 TO SUB1

               END-PERFORM
           END-IF.

      *****************************************************************
      *** Release exit point table.                                 ***
      *****************************************************************
           EXEC CICS RELEASE PROGRAM('DFH$STTB')
           END-EXEC.

       GLOBAL-USER-EXITS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PRINT-EXITPROGRAMS                                        ***
      ***                                                           ***
      *****************************************************************
       PRINT-EXITPROGRAMS SECTION.

           MOVE EXIT-POINT-ID(SUB1) TO EXIT-NAME.

           EXEC CICS INQUIRE EXITPROGRAM EXIT(EXIT-NAME) START
           END-EXEC.

           EXEC CICS INQUIRE EXITPROGRAM(PROGRAM-NAME) NEXT
               CONCURRENTST(CONCURRENCY-STATUS)
               ENTRYNAME(ENTRY-NAME)
               ENTRY(ENTRY-POINT)
               GAENTRYNAME(GLOBAL-AREA-ENTRY-NAME)
               GALENGTH(GLOBAL-AREA-LENGTH)
               GAUSECOUNT(GLOBAL-AREA-USE-COUNT)
               NUMEXITS(NUMBER-OF-EXITS)
               STARTSTATUS(EXIT-PROGRAM-STATUS)
               RESP(INQUIRE-RESP)
           END-EXEC.

           MOVE '0' TO PRINT-CONTROL.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

                   IF LINE-COUNT > LINES-PER-PAGE THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   IF SUB-HEADINGS = 'Y' THEN
                       PERFORM USER-EXIT-SUB-HEADINGS
                   END-IF

                   EXEC CICS INQUIRE PROGRAM(PROGRAM-NAME)
                       CONCURRENCY(PROGRAM-CONCURRENCY)
                       LIBRARY(PROGRAM-LIBRARY-NAME)
                       LIBRARYDSN(PROGRAM-LIBRARY-DSNAME)
                       NOHANDLE
                   END-EXEC

                   MOVE EXIT-NAME              TO PP3-10
                   MOVE PROGRAM-NAME           TO PP13-20
                   MOVE ENTRY-NAME             TO PP23-30
                   MOVE GLOBAL-AREA-ENTRY-NAME TO PP34-41
                   MOVE GLOBAL-AREA-LENGTH     TO PP44-49
                   MOVE GLOBAL-AREA-USE-COUNT  TO PP55-60
                   MOVE NUMBER-OF-EXITS        TO PP65-70
                   EVALUATE EXIT-PROGRAM-STATUS
                       WHEN DFHVALUE(STARTED)
                           MOVE 'Started'      TO PP74-80
                       WHEN DFHVALUE(STOPPED)
                           MOVE 'Stopped'      TO PP74-80
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE PROGRAM-CONCURRENCY
                       WHEN DFHVALUE(QUASIRENT)
                           MOVE 'Quasirent  '  TO PP83-93
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Threadsafe '  TO PP83-93
                       WHEN DFHVALUE(REQUIRED)
                           MOVE 'Required   '  TO PP83-93
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   EVALUATE CONCURRENCY-STATUS
                       WHEN DFHVALUE(QUASIRENT)
                           MOVE 'Quasirent  '    TO PP96-106
                       WHEN DFHVALUE(THREADSAFE)
                           MOVE 'Threadsafe '    TO PP96-106
                       WHEN DFHVALUE(REQUIRED)
                           MOVE 'Required   '    TO PP96-106
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE

                   PERFORM WRITE-OUTPUT

                   EXEC CICS INQUIRE EXITPROGRAM(PROGRAM-NAME) NEXT
                       ENTRYNAME(ENTRY-NAME)
                       ENTRY(ENTRY-POINT)
                       GAENTRYNAME(GLOBAL-AREA-ENTRY-NAME)
                       GALENGTH(GLOBAL-AREA-LENGTH)
                       GAUSECOUNT(GLOBAL-AREA-USE-COUNT)
                       NUMEXITS(NUMBER-OF-EXITS)
                       STARTSTATUS(EXIT-PROGRAM-STATUS)
                       RESP(INQUIRE-RESP)
                   END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE EXITPROGRAM END
           END-EXEC.

       PRINT-EXITPROGRAMS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** EXITPGM-SUB-HEADINGS-1                                    ***
      ***                                                           ***
      *****************************************************************
       EXITPGM-SUB-HEADINGS-1 SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE '                    <---- Global Ar' TO PP3-37.
           MOVE 'ea ---->   No.                     ' TO PP38-72.
           MOVE '                              '      TO PP73-102.
           MOVE '                              '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE 'Program    Entry     Entry         ' TO PP3-37.
           MOVE '    Use    of    Program  Exit Prog' TO PP38-72.
           MOVE 'ram   LIBRARY                 '      TO PP73-102.
           MOVE '                              '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '  Name      Name      Name    Lengt' TO PP3-37.
           MOVE 'h  Count  Exits  Status     Use Cou' TO PP38-72.
           MOVE 'nt      Name    LIBRARY Datase'      TO PP73-102.
           MOVE 't Name                        '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-37
                           PP38-72
                           PP73-102
                           PP103-132.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'N'     TO SUB-HEADINGS.

       EXITPGM-SUB-HEADINGS-1-EXIT.
           EXIT.

      *****************************************************************
      *** EXITPGM-SUB-HEADINGS-2                                    ***
      ***                                                           ***
      *****************************************************************
       EXITPGM-SUB-HEADINGS-2 SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Program    Entry            Program' TO PP3-37.
           MOVE '    Concurrency                    ' TO PP38-72.
           MOVE '  <------- Task Related User E'      TO PP73-102.
           MOVE 'xit Options -------->         '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '  Name      Name    API   Concurren' TO PP3-37.
           MOVE 'cy     Status    Qualifier  Length ' TO PP38-72.
           MOVE '  Taskstart  EDF  Shutdown  In'      TO PP73-102.
           MOVE 'doubt  SPI  Purgeable         '      TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-37
                           PP38-72
                           PP73-102.
           MOVE '_____________________         '      TO PP103-132.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'N'     TO SUB-HEADINGS.

       EXITPGM-SUB-HEADINGS-2-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** USER-EXIT-SUB-HEADINGS                                    ***
      ***                                                           ***
      *****************************************************************
       USER-EXIT-SUB-HEADINGS SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE '  Exit    Program    Entry    <----' TO PP3-37.
           MOVE '--- Global Area ------->   Number  ' TO PP38-72.
           MOVE ' Program    Program    Concurr'      TO PP73-102.
           MOVE 'ency '                               TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '  Name      Name      Name    Entry' TO PP3-37.
           MOVE ' Name  Length  Use Count  of Exits ' TO PP38-72.
           MOVE ' Status   Concurrency     Stat'      TO PP73-102.
           MOVE 'us '                                 TO PP103-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-37
                           PP38-72.
           MOVE '______________________________'      TO PP73-102.
           MOVE '____ '                               TO PP103-132.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'N'     TO SUB-HEADINGS.

       USER-EXIT-SUB-HEADINGS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** TRACE-SETTINGS-LEVELS                                     ***
      ***                                                           ***
      ***   Print heading, Trace Settings and Trace Levels          ***
      ***                                                           ***
      *****************************************************************
       TRACE-SETTINGS-LEVELS SECTION.

           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO TRACE-SETTINGS-PAGENO.

           MOVE '-'              TO PRINT-CONTROL.
           MOVE 'Trace Settings' TO PP1-14.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-14.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      ***  Inquire on the status of the various trace destinations  ***
      *** and trace settings.                                       ***
      *****************************************************************

           EXEC CICS INQUIRE TRACEDEST
               AUXSTATUS(AUX-STATUS)
               CURAUXDS(CURRENT-AUX-DATASET)
               GTFSTATUS(GTF-STATUS)
               INTSTATUS(INT-STATUS)
               SWITCHSTATUS(SWITCH-STATUS)
               TABLESIZE(TRACE-TABLE-SIZE)
           END-EXEC.

           EXEC CICS INQUIRE TRACEFLAG
               SYSTEMSTATUS(TRACE-SYSTEM-STATUS)
               TCEXITSTATUS(TC-EXIT-STATUS)
               USERSTATUS(TRACE-USER-STATUS)
           END-EXEC.

      *****************************************************************
      ***   Get all the components STANDARD trace flags into        ***
      *** STANDARD-TRACE-LEVELS.                                    ***
      *****************************************************************
           EXEC CICS INQUIRE TRACETYPE STANDARD
               APPLICATION  (STANDARD-TRACE-LEVEL(I-APPLICATION))
               AS           (STANDARD-TRACE-LEVEL(I-AS))
               BA           (STANDARD-TRACE-LEVEL(I-BAM))
               BM           (STANDARD-TRACE-LEVEL(I-BM))
               BR           (STANDARD-TRACE-LEVEL(I-BR))
               CPI          (STANDARD-TRACE-LEVEL(I-CPI))
               DC           (STANDARD-TRACE-LEVEL(I-DC))
               DIRMGR       (STANDARD-TRACE-LEVEL(I-DIRMGR))
               DOCUMENT     (STANDARD-TRACE-LEVEL(I-DOCUMENT))
               DOMAINMGR    (STANDARD-TRACE-LEVEL(I-DOMAINMGR))
               DEBUGTOOL    (STANDARD-TRACE-LEVEL(I-DP))
               DISPATCHER   (STANDARD-TRACE-LEVEL(I-DISPATCHER))
               DUMP         (STANDARD-TRACE-LEVEL(I-DUMP))
               EC           (STANDARD-TRACE-LEVEL(I-EC))
               EI           (STANDARD-TRACE-LEVEL(I-EI))
               EJ           (STANDARD-TRACE-LEVEL(I-EJ))
               EM           (STANDARD-TRACE-LEVEL(I-EVENT))
               ENQUEUE      (STANDARD-TRACE-LEVEL(I-ENQUEUE))
               EP           (STANDARD-TRACE-LEVEL(I-EP))
               FC           (STANDARD-TRACE-LEVEL(I-FC))
               GLOBALCATLG  (STANDARD-TRACE-LEVEL(I-GLOBALCATLG))
               IC           (STANDARD-TRACE-LEVEL(I-IC))
               IE           (STANDARD-TRACE-LEVEL(I-IPECI))
               IS           (STANDARD-TRACE-LEVEL(I-IS))
               KC           (STANDARD-TRACE-LEVEL(I-KC))
               KERNEL       (STANDARD-TRACE-LEVEL(I-KERNEL))
               LOCALCATLG   (STANDARD-TRACE-LEVEL(I-LOCALCATLG))
               LOADER       (STANDARD-TRACE-LEVEL(I-LOADER))
               LOCKMGR      (STANDARD-TRACE-LEVEL(I-LOCKMGR))
               LOGGER       (STANDARD-TRACE-LEVEL(I-LOGGER))
               MESSAGE      (STANDARD-TRACE-LEVEL(I-MESSAGE))
               OT           (STANDARD-TRACE-LEVEL(I-OT))
           END-EXEC.

           EXEC CICS INQUIRE TRACETYPE STANDARD
               ML           (STANDARD-TRACE-LEVEL(I-ML))
               MONITOR      (STANDARD-TRACE-LEVEL(I-MONITOR))
               MP           (STANDARD-TRACE-LEVEL(I-MP))
               PARAMGR      (STANDARD-TRACE-LEVEL(I-PARAMGR))
               PC           (STANDARD-TRACE-LEVEL(I-PC))
               PIPEMGR      (STANDARD-TRACE-LEVEL(I-PIPEMGR))
               PROGMGR      (STANDARD-TRACE-LEVEL(I-PROGMGR))
               PT           (STANDARD-TRACE-LEVEL(I-PT))
               RMIADAPTERS  (STANDARD-TRACE-LEVEL(I-RA))
               RMI          (STANDARD-TRACE-LEVEL(I-RI))
               RECOVERY     (STANDARD-TRACE-LEVEL(I-RM))
               RESLIFEMGR   (STANDARD-TRACE-LEVEL(I-RL))
               RS           (STANDARD-TRACE-LEVEL(I-RS))
               RX           (STANDARD-TRACE-LEVEL(I-RX))
               RZ           (STANDARD-TRACE-LEVEL(I-RZ))
               SC           (STANDARD-TRACE-LEVEL(I-SC))
               SH           (STANDARD-TRACE-LEVEL(I-SCHEDULER))
               SJ           (STANDARD-TRACE-LEVEL(I-SJVM))
               SOCKETS      (STANDARD-TRACE-LEVEL(I-SOCKETS))
               STORAGE      (STANDARD-TRACE-LEVEL(I-STORAGE))
               STATISTICS   (STANDARD-TRACE-LEVEL(I-STATISTICS))
               SZ           (STANDARD-TRACE-LEVEL(I-SZ))
               TC           (STANDARD-TRACE-LEVEL(I-TC))
               TD           (STANDARD-TRACE-LEVEL(I-TD))
               TIMER        (STANDARD-TRACE-LEVEL(I-TIMER))
               TRACE        (STANDARD-TRACE-LEVEL(I-TRACE))
               TS           (STANDARD-TRACE-LEVEL(I-TS))
               UE           (STANDARD-TRACE-LEVEL(I-UE))
               USER         (STANDARD-TRACE-LEVEL(I-USER))
               WB           (STANDARD-TRACE-LEVEL(I-WB))
               WEBRESTMGR   (STANDARD-TRACE-LEVEL(I-WU))
               W2           (STANDARD-TRACE-LEVEL(I-W2))
               TRANMGR      (STANDARD-TRACE-LEVEL(I-TRANMGR))
               SECURITY     (STANDARD-TRACE-LEVEL(I-SECURITY))
           END-EXEC.

      *****************************************************************
      ***   Get all the components SPECIAL trace flags into         ***
      *** SPECIAL-TRACE-LEVELS.                                     ***
      *****************************************************************
           EXEC CICS INQUIRE TRACETYPE SPECIAL
               APPLICATION  (SPECIAL-TRACE-LEVEL(I-APPLICATION))
               AS           (SPECIAL-TRACE-LEVEL(I-AS))
               BA           (SPECIAL-TRACE-LEVEL(I-BAM))
               BM           (SPECIAL-TRACE-LEVEL(I-BM))
               BR           (SPECIAL-TRACE-LEVEL(I-BR))
               CPI          (SPECIAL-TRACE-LEVEL(I-CPI))
               DC           (SPECIAL-TRACE-LEVEL(I-DC))
               DIRMGR       (SPECIAL-TRACE-LEVEL(I-DIRMGR))
               DOCUMENT     (SPECIAL-TRACE-LEVEL(I-DOCUMENT))
               DOMAINMGR    (SPECIAL-TRACE-LEVEL(I-DOMAINMGR))
               DEBUGTOOL    (SPECIAL-TRACE-LEVEL(I-DP))
               DISPATCHER   (SPECIAL-TRACE-LEVEL(I-DISPATCHER))
               DUMP         (SPECIAL-TRACE-LEVEL(I-DUMP))
               EC           (SPECIAL-TRACE-LEVEL(I-EC))
               EI           (SPECIAL-TRACE-LEVEL(I-EI))
               EJ           (SPECIAL-TRACE-LEVEL(I-EJ))
               EM           (SPECIAL-TRACE-LEVEL(I-EVENT))
               ENQUEUE      (SPECIAL-TRACE-LEVEL(I-ENQUEUE))
               EP           (SPECIAL-TRACE-LEVEL(I-EP))
               FC           (SPECIAL-TRACE-LEVEL(I-FC))
               GLOBALCATLG  (SPECIAL-TRACE-LEVEL(I-GLOBALCATLG))
               IC           (SPECIAL-TRACE-LEVEL(I-IC))
               IE           (SPECIAL-TRACE-LEVEL(I-IPECI))
               IS           (SPECIAL-TRACE-LEVEL(I-IS))
               KC           (SPECIAL-TRACE-LEVEL(I-KC))
               KERNEL       (SPECIAL-TRACE-LEVEL(I-KERNEL))
               LOCALCATLG   (SPECIAL-TRACE-LEVEL(I-LOCALCATLG))
               LOADER       (SPECIAL-TRACE-LEVEL(I-LOADER))
               LOCKMGR      (SPECIAL-TRACE-LEVEL(I-LOCKMGR))
               LOGGER       (SPECIAL-TRACE-LEVEL(I-LOGGER))
               MESSAGE      (SPECIAL-TRACE-LEVEL(I-MESSAGE))
               OT           (SPECIAL-TRACE-LEVEL(I-OT))
           END-EXEC.

           EXEC CICS INQUIRE TRACETYPE SPECIAL
               ML           (SPECIAL-TRACE-LEVEL(I-ML))
               MONITOR      (SPECIAL-TRACE-LEVEL(I-MONITOR))
               MP           (SPECIAL-TRACE-LEVEL(I-MP))
               PARAMGR      (SPECIAL-TRACE-LEVEL(I-PARAMGR))
               PC           (SPECIAL-TRACE-LEVEL(I-PC))
               PIPEMGR      (SPECIAL-TRACE-LEVEL(I-PIPEMGR))
               PROGMGR      (SPECIAL-TRACE-LEVEL(I-PROGMGR))
               PT           (SPECIAL-TRACE-LEVEL(I-PT))
               RMIADAPTERS  (SPECIAL-TRACE-LEVEL(I-RA))
               RMI          (SPECIAL-TRACE-LEVEL(I-RI))
               RECOVERY     (SPECIAL-TRACE-LEVEL(I-RM))
               RESLIFEMGR   (SPECIAL-TRACE-LEVEL(I-RL))
               RS           (SPECIAL-TRACE-LEVEL(I-RS))
               RX           (SPECIAL-TRACE-LEVEL(I-RX))
               RZ           (SPECIAL-TRACE-LEVEL(I-RZ))
               SC           (SPECIAL-TRACE-LEVEL(I-SC))
               SH           (SPECIAL-TRACE-LEVEL(I-SCHEDULER))
               SJ           (SPECIAL-TRACE-LEVEL(I-SJVM))
               SOCKETS      (SPECIAL-TRACE-LEVEL(I-SOCKETS))
               STORAGE      (SPECIAL-TRACE-LEVEL(I-STORAGE))
               STATISTICS   (SPECIAL-TRACE-LEVEL(I-STATISTICS))
               SZ           (SPECIAL-TRACE-LEVEL(I-SZ))
               TC           (SPECIAL-TRACE-LEVEL(I-TC))
               TD           (SPECIAL-TRACE-LEVEL(I-TD))
               TIMER        (SPECIAL-TRACE-LEVEL(I-TIMER))
               TRACE        (SPECIAL-TRACE-LEVEL(I-TRACE))
               TS           (SPECIAL-TRACE-LEVEL(I-TS))
               UE           (SPECIAL-TRACE-LEVEL(I-UE))
               USER         (SPECIAL-TRACE-LEVEL(I-USER))
               WB           (SPECIAL-TRACE-LEVEL(I-WB))
               WEBRESTMGR   (SPECIAL-TRACE-LEVEL(I-WU))
               W2           (SPECIAL-TRACE-LEVEL(I-W2))
               TRANMGR      (SPECIAL-TRACE-LEVEL(I-TRANMGR))
               SECURITY     (SPECIAL-TRACE-LEVEL(I-SECURITY))
           END-EXEC.

      *****************************************************************
      *** Internal Trace Settings                                   ***
      *****************************************************************
           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'Internal Trace Status . . . . :' TO PP3-33.
           EVALUATE INT-STATUS
               WHEN DFHVALUE(INTSTART)
                   MOVE 'STARTED '                TO PP36-43
               WHEN DFHVALUE(INTSTOP)
                   MOVE 'STOPPED '                TO PP36-43
               WHEN OTHER
                   CONTINUE
           END-EVALUATE.
           PERFORM WRITE-OUTPUT.
           MOVE 'Internal Trace Table Size . . :' TO PP3-33.
           MOVE TRACE-TABLE-SIZE                  TO PP36-44.
           MOVE 'K'                               TO PP45.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      *** Auxiliary Trace Settings                                  ***
      *****************************************************************
           MOVE '0'     TO PRINT-CONTROL.

           MOVE 'Auxiliary Trace Status. . . . :' TO PP3-33.
           EVALUATE AUX-STATUS
               WHEN DFHVALUE(AUXSTART)
                   MOVE 'STARTED '                TO PP36-43
               WHEN DFHVALUE(AUXSTOP)
                   MOVE 'STOPPED '                TO PP36-43
               WHEN DFHVALUE(AUXPAUSE)
                   MOVE 'PAUSED  '                TO PP36-43
               WHEN OTHER
                   CONTINUE
           END-EVALUATE.
           PERFORM WRITE-OUTPUT.
           MOVE 'Auxiliary Trace Dataset . . . :' TO PP3-33.
           MOVE CURRENT-AUX-DATASET               TO PP36.
           PERFORM WRITE-OUTPUT.
           MOVE 'Auxiliary Switch Status . . . :' TO PP3-33.
           EVALUATE SWITCH-STATUS
               WHEN DFHVALUE(NOSWITCH)
                   MOVE 'NOSWITCH'                TO PP36-43
               WHEN DFHVALUE(SWITCHNEXT)
                   MOVE 'NEXT    '                TO PP36-43
               WHEN DFHVALUE(SWITCHALL)
                   MOVE 'ALL     '                TO PP36-43
               WHEN OTHER
                   CONTINUE
           END-EVALUATE.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      *** GTF Trace Settings                                        ***
      *****************************************************************
           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'GTF Trace Status. . . . . . . :' TO PP3-33.
           EVALUATE GTF-STATUS
               WHEN DFHVALUE(GTFSTART)
                   MOVE 'STARTED '                TO PP36-43
               WHEN DFHVALUE(GTFSTOP)
                   MOVE 'STOPPED '                TO PP36-43
               WHEN OTHER
                   CONTINUE
           END-EVALUATE.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      *** Trace Flag Settings                                       ***
      *****************************************************************
           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'Master System Trace Flag. . . :' TO PP3-33.
           EVALUATE TRACE-SYSTEM-STATUS
               WHEN DFHVALUE(SYSTEMON)
                   MOVE 'ON '                     TO PP36-38
               WHEN DFHVALUE(SYSTEMOFF)
                   MOVE 'OFF'                     TO PP36-38
               WHEN OTHER
                   CONTINUE
           END-EVALUATE.
           PERFORM WRITE-OUTPUT.
           MOVE 'Master User Trace Flag. . . . :' TO PP3-33.
           EVALUATE TRACE-USER-STATUS
               WHEN DFHVALUE(USERON)
                   MOVE 'ON '                     TO PP36-38
               WHEN DFHVALUE(USEROFF)
                   MOVE 'OFF'                     TO PP36-38
               WHEN OTHER
                   CONTINUE
           END-EVALUATE.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'VTAM Exit override. . . . . . :' TO PP3-33.
           EVALUATE TC-EXIT-STATUS
               WHEN DFHVALUE(TCEXITALL)
                   MOVE 'ALL   '                  TO PP36-41
               WHEN DFHVALUE(TCEXITSYSTEM)
                   MOVE 'SYSTEM'                  TO PP36-41
               WHEN DFHVALUE(TCEXITNONE)
                   MOVE 'NONE  '                  TO PP36-41
               WHEN OTHER
                   CONTINUE
           END-EVALUATE.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE ALL '-' TO PP1-132.
           PERFORM WRITE-OUTPUT.

      *****************************************************************
      *** Format and Print Trace Levels.                            ***
      *****************************************************************

           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO TRACE-LEVELS-PAGENO.

           MOVE '-'     TO PRINT-CONTROL.
           MOVE 'Component Trace Options' TO PP1-23.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-23.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.

           MOVE 1 TO SUB1.
           PERFORM WITH TEST BEFORE
               UNTIL SUB1 > NUMBER-COMPONENT-IDS

                   IF LINE-COUNT > LINES-PER-PAGE THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   IF SUB-HEADINGS = 'Y' THEN
                       PERFORM TRACE-LEVEL-SUB-HEADINGS
                   END-IF

               MOVE TRACE-COMPONENT-ID(SUB1)    TO PP6-7
               MOVE TRACE-COMPONENT-TITLE(SUB1) TO PP14-41

      *    Extract the Standard and Special Trace Levels.             *
               MOVE STANDARD-TRACE-LEVEL(SUB1)  TO STD-TRACE-BITS
               MOVE SPECIAL-TRACE-LEVEL(SUB1)   TO SPL-TRACE-BITS
               PERFORM EXTRACT-TRACE-LEVELS

      *    Format the Trace Levels into the form 1-4,23,29 showing    *
      *    which trace flags are on.                                  *
               PERFORM FORMAT-TRACE-LEVELS
               MOVE STANDARD-TRACE-OUTPUT(2:32) TO PP44-75
               MOVE SPECIAL-TRACE-OUTPUT(2:32)  TO PP78-109

               PERFORM WRITE-OUTPUT

               ADD 1 TO SUB1
           END-PERFORM.

      *****************************************************************
      *** Format and Print Transactions that have 'special' tracing ***
      *****************************************************************

           PERFORM PAGE-HEADINGS.
      *    MOVE PAGENO TO TRACE-LEVELS-PAGENO.

           MOVE '-'     TO PRINT-CONTROL.
           MOVE 'Transactions - Non-Standard Tracing' TO PP1-35.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-35.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.

      *****************************************************************

           EXEC CICS INQUIRE TRANSACTION START
           END-EXEC.

           EXEC CICS INQUIRE TRANSACTION(TRANSACTION-ID) NEXT
               TRACING(TRANSACTION-TRACING)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

               IF LINE-COUNT > LINES-PER-PAGE THEN
                   PERFORM PAGE-HEADINGS
               END-IF

               IF SUB-HEADINGS = 'Y' THEN
                   PERFORM TRANSACTION-SUB-HEADINGS
               END-IF

               EXEC CICS EXTRACT STATISTICS TRANSACTION
                   RESID(TRANSACTION-ID)
                   SET(ADDRESS OF DFHXMRDS)
               END-EXEC

               EVALUATE TRANSACTION-TRACING
                   WHEN DFHVALUE(SPECTRACE)
                       PERFORM FORMAT-TRANSACTION-TRACE
                   WHEN DFHVALUE(SPRSTRACE)
                       PERFORM FORMAT-TRANSACTION-TRACE
                   WHEN OTHER
                       CONTINUE
               END-EVALUATE

               EXEC CICS INQUIRE TRANSACTION(TRANSACTION-ID) NEXT
                   TRACING(TRANSACTION-TRACING)
                   RESP(INQUIRE-RESP)
               END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE TRANSACTION END
           END-EXEC.

      *****************************************************************
      *** If no transactions with non-standard tracing print a msg. ***
      *****************************************************************
           IF TRANSACTION-TOTAL = 0 THEN
               MOVE '-'              TO PRINT-CONTROL
               MOVE 'No transactions currently defined with Non-Standard
      -        ' tracing           ' TO PP3-72
               PERFORM WRITE-OUTPUT
           END-IF.

       TRACE-SETTINGS-LEVELS-EXIT.
           EXIT.
           EJECT
       FORMAT-TRANSACTION-TRACE SECTION.

           ADD 1 TO TRANSACTION-TOTAL.

           MOVE TRANSACTION-ID  TO PP3-6.
           MOVE XMRTCL          TO PP9-16.
           MOVE XMRPN           TO PP19-26.
           EVALUATE TRANSACTION-TRACING
               WHEN DFHVALUE(SPECTRACE)
                   MOVE ' Special  ' TO PP29-38
               WHEN DFHVALUE(SPRSTRACE)
                   MOVE 'Suppressed' TO PP29-38
               WHEN OTHER
                   CONTINUE
           END-EVALUATE.
           MOVE XMRAC           TO PP41-50.
           MOVE XMRRC           TO PP53-62.
           MOVE XMRDLC          TO PP65-74.
           MOVE XMRDRC          TO PP77-86.
           MOVE XMRRSC          TO PP89-98.
           PERFORM WRITE-OUTPUT.

       FORMAT-TRANSACTION-TRACE-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** TRANSACTION-SUB-HEADINGS                                  ***
      *****************************************************************
       TRANSACTION-SUB-HEADINGS SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Tran    Tran    Program            ' TO PP3-37.
           MOVE '     Attach      Restart     Dynami' TO PP38-72.
           MOVE 'c --- Counts      Remote      '      TO PP73-102.
           PERFORM WRITE-OUTPUT.
           MOVE ' id     Class     Name     Tracing ' TO PP3-37.
           MOVE '     Count        Count       Local' TO PP38-72.
           MOVE '   -  Remote      Starts      '      TO PP73-102.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-37
                           PP38-72.
           MOVE '__________________________    '      TO PP73-102.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'N'     TO SUB-HEADINGS.

       TRANSACTION-SUB-HEADINGS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** TRACE-LEVEL-SUB-HEADINGS                                  ***
      ***                                                           ***
      *****************************************************************
       TRACE-LEVEL-SUB-HEADINGS SECTION.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Component  Description             ' TO PP3-37.
           MOVE '      Standard                     ' TO PP38-72.
           MOVE '     Special                  '      TO PP73-102.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP3-37
                           PP38-72
                           PP73-102.
           MOVE '_______                       '      TO PP103-132.
           PERFORM WRITE-OUTPUT.

           MOVE '0'     TO PRINT-CONTROL.
           MOVE 'N'     TO SUB-HEADINGS.

       TRACE-LEVEL-SUB-HEADINGS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** EXTRACT-TRACE-LEVELS                                      ***
      ***      Convert the standard and special trace flags from a  ***
      *** 4-byte binary representation into a 32 byte numeric       ***
      *** representation for easy interpretation.                   ***
      *****************************************************************
      *        Binary representation of the current trace levels      *
      *                                                               *
      *            Byte 1     Byte 2     Byte 3     Byte 4            *
      *         | 00000000 | 00000000 | 00000000 | 00000000 |         *
      *****************************************************************
       EXTRACT-TRACE-LEVELS SECTION.

           MOVE ALL '0' TO STD-TRACE-LEVELS
                           SPL-TRACE-LEVELS.

      *****************************************************************
      *    Extract the Standard trace levels.                         *
      *****************************************************************
           MOVE 1 TO SUB2.
           MOVE 0 TO SUB4.

           PERFORM WITH TEST BEFORE
               UNTIL SUB2 > 4

               MOVE STD-TRACE-BYTE(SUB2) TO BINARY-CHAR
               PERFORM SET-STD-TRACE-LEVELS

               ADD 1 TO SUB2
           END-PERFORM.

      *****************************************************************
      *    Extract the Special trace levels.                          *
      *****************************************************************
           MOVE 1 TO SUB2.
           MOVE 0 TO SUB4.

           PERFORM WITH TEST BEFORE
               UNTIL SUB2 > 4

               MOVE SPL-TRACE-BYTE(SUB2) TO BINARY-CHAR
               PERFORM SET-SPL-TRACE-LEVELS

               ADD 1 TO SUB2
           END-PERFORM.

       EXTRACT-TRACE-LEVELS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      ***  For each byte of the trace flags convert it into an 8    ***
      *** byte numeric representation.                              ***
      *****************************************************************
       SET-STD-TRACE-LEVELS SECTION.

           MOVE 1 TO SUB3.

           PERFORM WITH TEST BEFORE
               UNTIL SUB3 > 8

               ADD 1 TO SUB4
               IF BINARY-FIELD > 0 THEN
                   IF BINARY-FIELD NOT < TRACE-BIT-VALUE(SUB3)
                       MOVE 1 TO STD-TRACE-LEVEL(SUB4)
                       SUBTRACT TRACE-BIT-VALUE(SUB3) FROM BINARY-FIELD
                   END-IF
               END-IF

               ADD 1 TO SUB3
           END-PERFORM.

       SET-STD-TRACE-LEVELS-EXIT.
           EXIT.

      *****************************************************************
       SET-SPL-TRACE-LEVELS SECTION.

           MOVE 1 TO SUB3.

           PERFORM WITH TEST BEFORE
               UNTIL SUB3 > 8

               ADD 1 TO SUB4
               IF BINARY-FIELD > 0 THEN
                   IF BINARY-FIELD NOT < TRACE-BIT-VALUE(SUB3)
                       MOVE 1 TO SPL-TRACE-LEVEL(SUB4)
                       SUBTRACT TRACE-BIT-VALUE(SUB3) FROM BINARY-FIELD
                   END-IF
               END-IF

               ADD 1 TO SUB3
           END-PERFORM.

       SET-SPL-TRACE-LEVELS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** FORMAT-TRACE-LEVELS                                       ***
      ***                                                           ***
      ***   Format a 32 byte numeric representation of the standard ***
      *** and special trace flags into a 32 byte character string   ***
      *** of the form 1-4,23,29 showing which trace flags are on.   ***
      ***                                                           ***
      ***  If the byte string consists only of zeros then no        ***
      *** functions are being traced so return 'OFF'.               ***
      ***  If the byte string consists only of ones then all        ***
      *** functions are being traced so return 'ALL'.               ***
      ***  Otherwise, convert into the form 1-4,23,29.              ***
      *****************************************************************
       FORMAT-TRACE-LEVELS SECTION.

           MOVE SPACES TO STANDARD-TRACE-OUTPUT
                          SPECIAL-TRACE-OUTPUT.

           EVALUATE STD-TRACE-LEVELS
               WHEN ALL '0'
                   MOVE 'OFF' TO STANDARD-TRACE-OUTPUT(2:3)
               WHEN ALL '1'
                   MOVE 'ALL' TO STANDARD-TRACE-OUTPUT(2:3)
               WHEN OTHER
                   PERFORM FORMAT-STD-TRACE-OUTPUT
           END-EVALUATE.

           EVALUATE SPL-TRACE-LEVELS
               WHEN ALL '0'
                   MOVE 'OFF' TO SPECIAL-TRACE-OUTPUT(2:3)
               WHEN ALL '1'
                   MOVE 'ALL' TO SPECIAL-TRACE-OUTPUT(2:3)
               WHEN OTHER
                   PERFORM FORMAT-SPL-TRACE-OUTPUT
           END-EVALUATE.

       FORMAT-TRACE-LEVELS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** FORMAT-STD-TRACE-OUTPUT                                   ***
      ***                                                           ***
      *** SUB3 is used as the subscript into the numerical trace    ***
      *** flag settings.                                            ***
      *** SUB4 is used as the subscript into the 32 byte character  ***
      *** string representing the trace flags.                      ***
      *** SUB5 is used as the subscript into the character output.  ***
      *****************************************************************
       FORMAT-STD-TRACE-OUTPUT SECTION.

           MOVE 1 TO SUB5.

      *---------------------------------------------------------------*
      *  Initialise the subscript and do the loop for each of the 32  *
      * bytes in the trace levels until a '1' is discovered.          *
      *---------------------------------------------------------------*
           MOVE 1 TO SUB2.

           PERFORM WITH TEST BEFORE
               UNTIL SUB2 > 32

                   PERFORM WITH TEST BEFORE
                       UNTIL STD-TRACE-LEVEL(SUB2) = 1 OR SUB2 > 32
                           ADD 1 to SUB2
                   END-PERFORM

      *---------------------------------------------------------------*
      *  If the subscript is less than 32 then a '1' has been found.  *
      * Compute SUB3 as the position of the '1'. The work through the *
      * byte string from the '1' until a '0' is found.                *
      *---------------------------------------------------------------*
               IF SUB2 NOT > 32 THEN
                   MOVE SUB2 TO SUB3

                   PERFORM TEST BEFORE
                       UNTIL STD-TRACE-LEVEL(SUB2) = 0 OR SUB2 > 32
                           ADD 1 TO SUB2
                   END-PERFORM

      *---------------------------------------------------------------*
      *  Compute SUB4 as the position of the last '1'. This is the    *
      * byte immediately preceding the '0' that has just been found.  *
      *---------------------------------------------------------------*
                   COMPUTE SUB4 = (SUB2 - 1)
                   END-COMPUTE

      *---------------------------------------------------------------*
      *  So, if SUB3 = SUB4 (both subscripts point to the same byte)  *
      * then this is of the form '010'. Therefore, this is printed as *
      * ',n'. If SUB3 is not equal to SUB4 then there are several     *
      * consecutive '1's, so this is printed as ',n1-n2'.             *
      *---------------------------------------------------------------*
                   MOVE SUB3 TO TRACE-LEVEL

                   MOVE ','  TO STD-TRACE-OUTPUT(SUB5)
                   ADD 1     TO SUB5

                   IF TRACE-LEVEL-CHAR(1) NOT = SPACE THEN
                       MOVE TRACE-LEVEL-CHAR(1) TO
                                               STD-TRACE-OUTPUT(SUB5)
                       ADD 1 TO SUB5
                   END-IF
                   MOVE TRACE-LEVEL-CHAR(2) TO STD-TRACE-OUTPUT(SUB5)
                   ADD 1 TO SUB5

      *---------------------------------------------------------------*
                   IF SUB3 NOT = SUB4 THEN
                       MOVE SUB4 TO TRACE-LEVEL
                       MOVE '-'  TO STD-TRACE-OUTPUT(SUB5)
                       ADD 1     TO SUB5

                       IF TRACE-LEVEL-CHAR(1) NOT = SPACE THEN
                           MOVE TRACE-LEVEL-CHAR(1) TO
                                               STD-TRACE-OUTPUT(SUB5)
                           ADD 1 TO SUB5
                       END-IF
                       MOVE TRACE-LEVEL-CHAR(2) TO
                                               STD-TRACE-OUTPUT(SUB5)
                       ADD 1 TO SUB5
                   END-IF
      *---------------------------------------------------------------*
               END-IF

               ADD 1 TO SUB2
           END-PERFORM.

       FORMAT-STD-TRACE-OUTPUT-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** FORMAT-SPL-TRACE-OUTPUT                                   ***
      ***                                                           ***
      *** SUB3 is used as the subscript into the numerical trace    ***
      *** flag settings.                                            ***
      *** SUB4 is used as the subscript into the 32 byte character  ***
      *** string representing the trace flags.                      ***
      *** SUB5 is used as the subscript into the character output.  ***
      *****************************************************************
       FORMAT-SPL-TRACE-OUTPUT SECTION.

           MOVE 1 TO SUB5.

      *---------------------------------------------------------------*
      *  Initialise the subscript and do the loop for each of the 32  *
      * bytes in the trace levels until a '1' is discovered.          *
      *---------------------------------------------------------------*
           MOVE 1 TO SUB2.

           PERFORM WITH TEST BEFORE
               UNTIL SUB2 > 32

                   PERFORM WITH TEST BEFORE
                       UNTIL SPL-TRACE-LEVEL(SUB2) = 1 OR SUB2 > 32
                           ADD 1 to SUB2
                   END-PERFORM

      *---------------------------------------------------------------*
      *  If the subscript is less than 32 then a '1' has been found.  *
      * Compute SUB3 as the position of the '1'. The work through the *
      * byte string from the '1' until a '0' is found.                *
      *---------------------------------------------------------------*
               IF SUB2 NOT > 32 THEN
                   MOVE SUB2 TO SUB3

                   PERFORM TEST BEFORE
                       UNTIL SPL-TRACE-LEVEL(SUB2) = 0 OR SUB2 > 32
                           ADD 1 TO SUB2
                   END-PERFORM

      *---------------------------------------------------------------*
      *  Compute SUB4 as the position of the last '1'. This is the    *
      * byte immediately preceding the '0' that has just been found.  *
      *---------------------------------------------------------------*
                   COMPUTE SUB4 = (SUB2 - 1)
                   END-COMPUTE

      *---------------------------------------------------------------*
      *  So, if SUB3 = SUB4 (both subscripts point to the same byte)  *
      * then this is of the form '010'. Therefore, this is printed as *
      * ',n'. If SUB3 is not equal to SUB4 then there are several     *
      * consecutive '1's, so this is printed as ',n1-n2'.             *
      *---------------------------------------------------------------*
                   MOVE SUB3 TO TRACE-LEVEL
                   MOVE ','  TO SPL-TRACE-OUTPUT(SUB5)
                   ADD 1     TO SUB5

                   IF TRACE-LEVEL-CHAR(1) NOT = SPACE THEN
                       MOVE TRACE-LEVEL-CHAR(1) TO
                                               SPL-TRACE-OUTPUT(SUB5)
                       ADD 1 TO SUB5
                   END-IF
                   MOVE TRACE-LEVEL-CHAR(2) TO SPL-TRACE-OUTPUT(SUB5)
                   ADD 1 TO SUB5

      *---------------------------------------------------------------*
                   IF SUB3 NOT = SUB4 THEN
                       MOVE SUB4 TO TRACE-LEVEL
                       MOVE '-'  TO SPL-TRACE-OUTPUT(SUB5)
                       ADD 1     TO SUB5

                       IF TRACE-LEVEL-CHAR(1) NOT = SPACE THEN
                           MOVE TRACE-LEVEL-CHAR(1) TO
                                               SPL-TRACE-OUTPUT(SUB5)
                           ADD 1 TO SUB5
                       END-IF
                       MOVE TRACE-LEVEL-CHAR(2) TO
                                               SPL-TRACE-OUTPUT(SUB5)
                       ADD 1 TO SUB5
                   END-IF
      *---------------------------------------------------------------*
               END-IF

               ADD 1 TO SUB2
           END-PERFORM.

       FORMAT-SPL-TRACE-OUTPUT-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** ENQUEUE-MGR-STATISTICS                                    ***
      ***                                                           ***
      ***   Collect the Enqueue Manager Global statistics           ***
      ***   Print heading and Enqueue Manager Global statistics     ***
      ***                                                           ***
      *****************************************************************
       ENQUEUE-MGR-STATISTICS SECTION.

           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO ENQUEUE-MGR-PAGENO.

      *****************************************************************
      *** Collect the Enqueue Manager Global statistics.            ***
      *****************************************************************
           EXEC CICS EXTRACT STATISTICS ENQUEUE
               SET(ADDRESS OF DFHNQGDS)
           END-EXEC.

      *****************************************************************
      *** Print heading and the Enqueue Manager global statistics.  ***
      *****************************************************************

           MOVE 1 TO SUB1.
           PERFORM WITH TEST BEFORE
               UNTIL SUB1 > NQGNPOOL

               IF SUB1 = 1 THEN
                   MOVE '-'     TO PRINT-CONTROL
                   MOVE 'Enqueue Manager' TO PP1-15
                   PERFORM WRITE-OUTPUT
                   MOVE '+'     TO PRINT-CONTROL
                   MOVE ALL '_' TO PP1-15
                   PERFORM WRITE-OUTPUT
               ELSE
                   PERFORM PAGE-HEADINGS
               END-IF

               MOVE '-' TO PRINT-CONTROL
               MOVE 'ENQueue poolname . . . . . . . . . . . . :'
                           TO PP3-44
               MOVE NQGPOOL(SUB1) TO PP53-60
               PERFORM WRITE-OUTPUT

               MOVE '0' TO PRINT-CONTROL
               MOVE 'ENQs issued. . . . . . . . . . . . . . . :'
                           TO PP3-44
               MOVE NQGTNQSI(SUB1) TO PP51-60
               PERFORM WRITE-OUTPUT
               MOVE 'ENQs waited. . . . . . . . . . . . . . . :'
                           TO PP3-44
               MOVE NQGTNQSW(SUB1) TO PP51-60
               PERFORM WRITE-OUTPUT
               MOVE 'ENQueue waiting time . . . . . . . . . . :'
                           TO PP3-44
               MOVE NQGTNQWT(SUB1) TO CLOCK-FIELD
               PERFORM STOPWATCH-CONVERT
               MOVE STOPWATCH TO PP47-60
               PERFORM WRITE-OUTPUT
               MOVE 'Average Enqueue wait time. . . . . . . . :'
                           TO PP3-44
               IF NQGTNQSW(SUB1) > 0 THEN
                   MOVE NQGTNQWT(SUB1) TO CLOCK-WORK-FIELD
                   DIVIDE CLOCK-WORK-FIELD-S BY NQGTNQSW(SUB1)
                               GIVING CLOCK-FIELD-S
               ELSE
                   MOVE 0 TO CLOCK-FIELD-S
               END-IF
               PERFORM STOPWATCH-CONVERT
               MOVE STOPWATCH TO PP47-60
               PERFORM WRITE-OUTPUT

               MOVE '0' TO PRINT-CONTROL
               MOVE 'Current ENQs waiting . . . . . . . . . . :'
                           TO PP3-44
               MOVE NQGCNQSW(SUB1) TO PP51-60
               PERFORM WRITE-OUTPUT
               MOVE 'Current ENQueue waiting time . . . . . . :'
                           TO PP3-44
               MOVE NQGCNQWT(SUB1) TO CLOCK-FIELD
               PERFORM STOPWATCH-CONVERT
               MOVE STOPWATCH TO PP47-60
               PERFORM WRITE-OUTPUT

               MOVE '0' TO PRINT-CONTROL
               MOVE 'Sysplex ENQs waited. . . . . . . . . . . :'
                           TO PP3-44
               MOVE NQGGNQSW(SUB1) TO PP51-60
               PERFORM WRITE-OUTPUT
               MOVE 'Sysplex ENQueue waiting time . . . . . . :'
                           TO PP3-44
               MOVE NQGGNQWT(SUB1) TO CLOCK-FIELD
               PERFORM STOPWATCH-CONVERT
               MOVE STOPWATCH TO PP47-60
               PERFORM WRITE-OUTPUT
               MOVE 'Average Sysplex Enqueue wait time. . . . :'
                           TO PP3-44
               IF NQGGNQSW(SUB1) > 0 THEN
                   MOVE NQGGNQWT(SUB1) TO CLOCK-WORK-FIELD
                   DIVIDE CLOCK-WORK-FIELD-S BY NQGGNQSW(SUB1)
                               GIVING CLOCK-FIELD-S
               ELSE
                   MOVE 0 TO CLOCK-FIELD-S
               END-IF
               PERFORM STOPWATCH-CONVERT
               MOVE STOPWATCH TO PP47-60
               PERFORM WRITE-OUTPUT

               MOVE '0' TO PRINT-CONTROL
               MOVE 'Current Sysplex ENQs waiting . . . . . . :'
                           TO PP3-44
               MOVE NQGSNQSW(SUB1) TO PP51-60
               PERFORM WRITE-OUTPUT
               MOVE 'Current Sysplex ENQueue waiting time . . :'
                           TO PP3-44
               MOVE NQGSNQWT(SUB1) TO CLOCK-FIELD
               PERFORM STOPWATCH-CONVERT
               MOVE STOPWATCH TO PP47-60
               PERFORM WRITE-OUTPUT

               MOVE '0' TO PRINT-CONTROL
               MOVE 'Total ENQs retained. . . . . . . . . . . :'
                           TO PP3-44
               MOVE NQGTNQSR(SUB1) TO PP51-60
               PERFORM WRITE-OUTPUT
               MOVE 'Enqueue retention time . . . . . . . . . :'
                           TO PP3-44
               MOVE NQGTNQRT(SUB1) TO CLOCK-FIELD
               PERFORM STOPWATCH-CONVERT
               MOVE STOPWATCH TO PP47-60
               PERFORM WRITE-OUTPUT
               MOVE 'Average Enqueue retention time . . . . . :'
                           TO PP3-44
               IF NQGTNQSR(SUB1) > 0 THEN
                   MOVE NQGTNQRT(SUB1) TO CLOCK-WORK-FIELD
                   DIVIDE CLOCK-WORK-FIELD-S BY NQGTNQSR(SUB1)
                               GIVING CLOCK-FIELD-S
               ELSE
                   MOVE 0 TO CLOCK-FIELD-S
               END-IF
               PERFORM STOPWATCH-CONVERT
               MOVE STOPWATCH TO PP47-60
               PERFORM WRITE-OUTPUT

               MOVE '0' TO PRINT-CONTROL
               MOVE 'Current ENQs retained. . . . . . . . . . :'
                           TO PP3-44
               MOVE NQGCNQSR(SUB1) TO PP51-60
               PERFORM WRITE-OUTPUT
               MOVE 'Current Enqueue retention time . . . . . :'
                           TO PP3-44
               MOVE NQGCNQWT(SUB1) TO CLOCK-FIELD
               PERFORM STOPWATCH-CONVERT
               MOVE STOPWATCH TO PP47-60
               PERFORM WRITE-OUTPUT
               MOVE 'Current Average Enqueue retention time . :'
                           TO PP3-44
               IF NQGCNQSR(SUB1) > 0 THEN
                   MOVE NQGCNQWT(SUB1) TO CLOCK-WORK-FIELD
                   DIVIDE CLOCK-WORK-FIELD-S BY NQGCNQSR(SUB1)
                               GIVING CLOCK-FIELD-S
               ELSE
                   MOVE 0 TO CLOCK-FIELD-S
               END-IF
               PERFORM STOPWATCH-CONVERT
               MOVE STOPWATCH TO PP47-60
               PERFORM WRITE-OUTPUT

               MOVE '0' TO PRINT-CONTROL
               MOVE 'Enqueues Rejected - Enqbusy. . . . . . . :'
                           TO PP3-44
               MOVE NQGTIRJB(SUB1) TO PP51-60
               PERFORM WRITE-OUTPUT
               MOVE 'Enqueues Rejected - Retained . . . . . . :'
                           TO PP3-44
               MOVE NQGTIRJR(SUB1) TO PP51-60
               PERFORM WRITE-OUTPUT

               MOVE '0' TO PRINT-CONTROL
               MOVE 'Waiting Enqueues - Rejected Retained . . :'
                           TO PP3-44
               MOVE NQGTWRJR(SUB1) TO PP51-60
               PERFORM WRITE-OUTPUT
               MOVE 'Waiting Enqueues Purged - Operator . . . :'
                           TO PP3-44
               MOVE NQGTWPOP(SUB1) TO PP51-60
               PERFORM WRITE-OUTPUT
               MOVE 'Waiting Enqueues Purged - Timeout. . . . :'
                           TO PP3-44
               MOVE NQGTWPTO(SUB1) TO PP51-60
               PERFORM WRITE-OUTPUT

               ADD 1 TO SUB1
           END-PERFORM.

       ENQUEUE-MGR-STATISTICS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** ENQMODEL-STATISTICS                                       ***
      ***                                                           ***
      ***                                                           ***
      *****************************************************************
       ENQMODEL-STATISTICS SECTION.

           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO ENQMODELS-PAGENO.

           MOVE '-'     TO PRINT-CONTROL.
           MOVE 'Enqueue Models' TO PP1-14.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-14.
           PERFORM WRITE-OUTPUT.

      *****************************************************************

           EXEC CICS INQUIRE ENQMODEL START
           END-EXEC.

           EXEC CICS INQUIRE ENQMODEL(ENQMODEL-NAME) NEXT
               ENQNAME(ENQMODEL-ENQNAME)
               ENQSCOPE(ENQMODEL-ENQSCOPE)
               STATUS(ENQMODEL-STATUS)
               RESP(INQUIRE-RESP)
           END-EXEC.

           PERFORM WITH TEST BEFORE
               UNTIL INQUIRE-RESP = DFHRESP(END)

                   IF LINE-COUNT > (LINES-PER-PAGE - 10) THEN
                       PERFORM PAGE-HEADINGS
                   END-IF

                   MOVE '0' TO PRINT-CONTROL
                   MOVE 'ENQModel Name. . . . . . . . . :' TO PP3-34
                   MOVE ENQMODEL-NAME                      TO PP37-44
                   PERFORM WRITE-OUTPUT

                   MOVE '0' TO PRINT-CONTROL
                   MOVE 'ENQModel Enqname . . . . . . . :' TO PP3-34
                   MOVE ENQMODEL-ENQNAME(1:85)             TO PP37-121
                   PERFORM WRITE-OUTPUT
                   IF ENQMODEL-ENQNAME(86:85) NOT = SPACES THEN
                       MOVE ':' TO PP34
                       MOVE ENQMODEL-ENQNAME(86:85)        TO PP37-121
                       PERFORM WRITE-OUTPUT
                       IF ENQMODEL-ENQNAME(171:85) NOT = SPACES THEN
                           MOVE ':' TO PP34
                           MOVE ENQMODEL-ENQNAME(171:85)   TO PP37-121
                           PERFORM WRITE-OUTPUT
                       END-IF
                   END-IF
                   MOVE 'ENQModel Enqscope. . . . . . . :' TO PP3-34
                   IF ENQMODEL-ENQSCOPE = SPACES THEN
                       MOVE 'LOCAL'           TO PP37-41
                   ELSE
                       MOVE ENQMODEL-ENQSCOPE TO PP37-40
                   END-IF
                   PERFORM WRITE-OUTPUT
                   MOVE 'ENQModel Status. . . . . . . . :' TO PP3-34
                   EVALUATE ENQMODEL-STATUS
                       WHEN DFHVALUE(ENABLED)
                           MOVE 'ENABLED'  TO PP37-44
                       WHEN DFHVALUE(DISABLED)
                           MOVE 'DISABLED' TO PP37-44
                       WHEN DFHVALUE(WAITING)
                           MOVE 'WIATING ' TO PP37-44
                       WHEN OTHER
                           CONTINUE
                   END-EVALUATE
                   PERFORM WRITE-OUTPUT

                   MOVE '0' TO PRINT-CONTROL
                   MOVE ALL '-' TO PP1-132
                   PERFORM WRITE-OUTPUT

                   EXEC CICS INQUIRE ENQMODEL(ENQMODEL-NAME) NEXT
                       ENQNAME(ENQMODEL-ENQNAME)
                       ENQSCOPE(ENQMODEL-ENQSCOPE)
                       STATUS(ENQMODEL-STATUS)
                       RESP(INQUIRE-RESP)
                   END-EXEC

           END-PERFORM.

           EXEC CICS INQUIRE ENQMODEL END
           END-EXEC.

       ENQMODEL-STATISTICS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** RECOVERY-MGR-STATISTICS                                   ***
      ***                                                           ***
      ***   Collect the Recovery Manager Global statistics          ***
      ***   Print heading and Recovery Manager Global statistics    ***
      ***                                                           ***
      *****************************************************************
       RECOVERY-MGR-STATISTICS SECTION.

           PERFORM PAGE-HEADINGS.
           MOVE PAGENO TO RECOVERY-MGR-PAGENO.

      *****************************************************************
      *** Collect the Recovery Manager Global statistics.           ***
      *****************************************************************
           EXEC CICS EXTRACT STATISTICS RECOVERY
               SET(ADDRESS OF DFHRMGDS)
           END-EXEC.

      *****************************************************************
      *** Print heading and the Recovery Manager global statistics. ***
      *****************************************************************
           MOVE '-'     TO PRINT-CONTROL.
           MOVE 'Recovery Manager' TO PP1-16.
           PERFORM WRITE-OUTPUT.
           MOVE '+'     TO PRINT-CONTROL.
           MOVE ALL '_' TO PP1-16.
           PERFORM WRITE-OUTPUT.

           MOVE '0'      TO PRINT-CONTROL.
           MOVE 'Number of Syncpoints forward . . . . . . . . :'
                   TO PP3-48.
           MOVE RMGSYFWD TO PP51-60.
           PERFORM WRITE-OUTPUT.
           MOVE 'Number of Syncpoints backward. . . . . . . . :'
                   TO PP3-48.
           MOVE RMGSYBWD TO PP51-60.
           PERFORM WRITE-OUTPUT.
           MOVE 'Number of Resynchronisations . . . . . . . . :'
                   TO PP3-48.
           MOVE RMGRESYN TO PP51-60.
           PERFORM WRITE-OUTPUT.

           MOVE '-'      TO PRINT-CONTROL.
           MOVE 'Total UOWs shunted for indoubt failure . . . . . . . .
      -         '. . . . :' TO PP3-66.
           MOVE RMGTSHIN TO PP73-82.
           PERFORM WRITE-OUTPUT.
           MOVE 'Total time UOWs shunted for indoubt failure. . . . . .
      -         '. . . . :' TO PP3-66.
           MOVE RMGTSHTI TO CLOCK-FIELD.
           PERFORM STOPWATCH-CONVERT.
           MOVE STOPWATCH TO PP69-82.
           PERFORM WRITE-OUTPUT.

           MOVE '0'      TO PRINT-CONTROL.
           MOVE 'Current UOWs shunted for indoubt failure . . . . . . .
      -         '. . . . :' TO PP3-66.
           MOVE RMGCSHIN TO PP73-82.
           PERFORM WRITE-OUTPUT.
           MOVE 'Total time current UOWs shunted for indoubt failure. .
      -         '. . . . :' TO PP3-66.
           MOVE RMGCSHTI TO CLOCK-FIELD.
           PERFORM STOPWATCH-CONVERT.
           MOVE STOPWATCH TO PP69-82.
           PERFORM WRITE-OUTPUT.

           MOVE '0'      TO PRINT-CONTROL.
           MOVE 'Total UOWs shunted for commit/backout failure. . . . .
      -         '. . . . :' TO PP3-66.
           MOVE RMGTSHRO TO PP73-82.
           PERFORM WRITE-OUTPUT.
           MOVE 'Total time UOWs shunted for commit/backout failure . .
      -         '. . . . :' TO PP3-66.
           MOVE RMGTSHTR TO CLOCK-FIELD.
           PERFORM STOPWATCH-CONVERT.
           MOVE STOPWATCH TO PP69-82.
           PERFORM WRITE-OUTPUT.

           MOVE '0'      TO PRINT-CONTROL.
           MOVE 'Current UOWs shunted for commit/backout failure. . . .
      -         '. . . . :' TO PP3-66.
           MOVE RMGCSHRO TO PP73-82.
           PERFORM WRITE-OUTPUT.
           MOVE 'Total time current UOWs shunted for commit/backout fail
      -         'ure . . :' TO PP3-66.
           MOVE RMGCSHTR TO CLOCK-FIELD.
           PERFORM STOPWATCH-CONVERT.
           MOVE STOPWATCH TO PP69-82.
           PERFORM WRITE-OUTPUT.

           MOVE '-' TO PRINT-CONTROL.
           MOVE 'Indoubt Action Forced by Trandef . . . . . . :'
                   TO PP3-48.
           MOVE RMGIAFTR TO PP51-60.
           PERFORM WRITE-OUTPUT.
           MOVE 'Indoubt Action Forced by Timeout . . . . . . :'
                   TO PP3-48.
           MOVE RMGIAFTI TO PP51-60.
           PERFORM WRITE-OUTPUT.
           MOVE 'Indoubt Action Forced by No Wait . . . . . . :'
                   TO PP3-48.
           MOVE RMGIAFNW TO PP51-60.
           PERFORM WRITE-OUTPUT.
           MOVE 'Indoubt Action Forced by Operator. . . . . . :'
                   TO PP3-48.
           MOVE RMGIAFOP TO PP51-60.
           PERFORM WRITE-OUTPUT.
           MOVE 'Indoubt Action Forced by Other . . . . . . . :'
                   TO PP3-48.
           MOVE RMGIAFOT TO PP51-60.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Indoubt Action Forced by TD Queues . . . . . :'
                   TO PP3-48.
           MOVE RMGNWTD  TO PP51-60.
           PERFORM WRITE-OUTPUT.
           MOVE 'Indoubt Action Forced by LU61 Connections. . :'
                   TO PP3-48.
           MOVE RMGNW61  TO PP51-60.
           PERFORM WRITE-OUTPUT.
           MOVE 'Indoubt Action Forced by MRO Connections . . :'
                   TO PP3-48.
           MOVE RMGNWMRO TO PP51-60.
           PERFORM WRITE-OUTPUT.
           MOVE 'Indoubt Action Forced by RMI Exits . . . . . :'
                   TO PP3-48.
           MOVE RMGNWRMI TO PP51-60.
           PERFORM WRITE-OUTPUT.
           MOVE 'Indoubt Action Forced by Other . . . . . . . :'
                   TO PP3-48.
           MOVE RMGNWOTH TO PP51-60.
           PERFORM WRITE-OUTPUT.

           MOVE '0' TO PRINT-CONTROL.
           MOVE 'Number of Indoubt Action Mismatches. . . . . :'
                   TO PP3-48.
           MOVE RMGIAMIS TO PP51-60.
           PERFORM WRITE-OUTPUT.

       RECOVERY-MGR-STATISTICS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** TOTALS-INITIALISE                                         ***
      *****************************************************************
       TOTALS-INITIALISE SECTION.

           MOVE 0 TO ENQMODELS.

           MOVE 0 TO TRANSACTION-TOTAL
                     TRACING-SPECIAL TRACING-SUPPRESSED.

       TOTALS-INITIALISE-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** PAGE-HEADINGS                                             ***
      ***   Increment page                                          ***
      ***   Write new heading line to spool                         ***
      *****************************************************************
       PAGE-HEADINGS SECTION.

           ADD 1       TO PAGENO.
           MOVE PAGENO TO PAGE-NUMBER.
           MOVE 1      TO LINE-COUNT.

           MOVE '1'          TO PRINT-CONTROL.
           MOVE HEADING-LINE TO PP1-132.
           PERFORM WRITE-OUTPUT.
           MOVE '+'          TO PRINT-CONTROL.
           MOVE ALL '_'      TO PP1-132.
           PERFORM WRITE-OUTPUT.

           MOVE 'Y' TO SUB-HEADINGS.

       PAGE-HEADINGS-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** STOPWATCH-CONVERT                                         ***
      *** Call program DFH$STCN to convert S/370 format TOD to      ***
      ***   EBCDIC date and time                                    ***
      *****************************************************************
       STOPWATCH-CONVERT SECTION.

           MOVE 'S'    TO CLOCK-TYPE.
           MOVE SPACES TO CLOCK-OUTPUT.

           MOVE LENGTH OF CLOCK-FIELDS TO STCN-COMMAREA.

           EXEC CICS LINK PROGRAM('DFH$STCN')
               COMMAREA(CLOCK-FIELDS)
               LENGTH(STCN-COMMAREA)
           END-EXEC.

           MOVE LOW-VALUES TO CLOCK-FIELD.

       STOPWATCH-CONVERT-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** WRITE-OUTPUT                                              ***
      ***   Write current print line to report output destination.  ***
      *****************************************************************
       WRITE-OUTPUT SECTION.

           PERFORM WRITE-SPOOL.

       WRITE-OUTPUT-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      *** WRITE-SPOOL                                               ***
      *** Write current print line to spool                         ***
      *** Increment line-count                                      ***
      *** IF CICS exceptional condition is raised THEN              ***
      ***    call error routine                                     ***
      *****************************************************************
       WRITE-SPOOL SECTION.

           EXEC CICS SPOOLWRITE TOKEN(OUTPUT-TOKEN)
               FROM(PRINT-LINE) FLENGTH(LINE-LENGTH)
               LINE
               NOHANDLE
           END-EXEC.

           EVALUATE PRINT-CONTROL
               WHEN ' '
                   ADD 1 TO LINE-COUNT
               WHEN '0'
                   ADD 2 TO LINE-COUNT
               WHEN '-'
                   ADD 3 TO LINE-COUNT
               WHEN '+'
                   ADD 0 TO LINE-COUNT
               WHEN '1'
                   MOVE 1 TO LINE-COUNT
           END-EVALUATE.

      *                                       Check return code
           IF EIBRESP NOT = DFHRESP(NORMAL) THEN
               MOVE 'SPOOLWRITE' TO CICS-COMMAND
               PERFORM ERROR-ROUTINE
           ELSE
               MOVE ' '    TO PRINT-CONTROL
               MOVE SPACES TO PP1-132
           END-IF.

       WRITE-SPOOL-EXIT.
           EXIT.
           EJECT
      *****************************************************************
      ***  ERROR ROUTINE                                            ***
      ***  Error routine produces appropriate responses to CICS     ***
      ***  spool commands. To ensure this the resp and resp2 values ***
      ***  are returned to the main program DFH0STAT for appropriate***
      ***  outputing of the messages.                               ***
      *****************************************************************
       ERROR-ROUTINE SECTION.

      *  If an error occurs which is not due to the users input or if
      *  the program is not being run from a terminal then a general
      *  message is sent to the screen/console and the RESP and RESP2
      *  fields are given along with the spool command which failed.
           MOVE 'Y'      TO ERROR-FOUND.
           MOVE EIBRESP  TO STCM-RESP.
           MOVE EIBRESP2 TO STCM-RESP2.

      *  Whatever happens ensure we return to DFH0STAT quickly.
           EXEC CICS RETURN
           END-EXEC.

       ERROR-ROUTINE-EXIT.
           EXIT.
