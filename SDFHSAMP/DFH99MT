* ASM CICS ( NOPROLOG NOEPILOG)
99MT     TITLE 'DFH99MT - CICS DYNAMIC ALLOCATION SAMPLE PROGRAM (MVS) *
               - MATCHES AN ABBREVIATION WITH A KEYWORD'
***********************************************************************
*                                                                     *
* MODULE NAME = DFH99MT                                               *
*                                                                     *
* DESCRIPTIVE NAME = Dynamic Allocation Sample Program                *
*                    Match Abbreviation with Keyword                  *
*                                                                     *
*                                                                     *
*                                                                     *
*     Licensed Materials - Property of IBM                            *
*                                                                     *
*     "Restricted Materials of IBM"                                   *
*                                                                     *
*     5655-Y04                                                        *
*                                                                     *
*     (C) Copyright IBM Corp. 1980, 1991"                             *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* STATUS = 7.2.0                                                      *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* CHECKS A TOKEN FOR BEING AN ABBREVIATION OF A KEYWORD.              *
* ALGORITHM:                                                          *
*        IN ORDER TO MATCH,                                           *
*              1. FIRST CHARACTER MUST BE THE SAME                    *
*              2. SUBSEQUENT CHARACTERS MUST APPEAR IN THE KEYWORD    *
*                 IN THE SAME ORDER.                                  *
* INPUT:  REG1  -> A(INPUT TOKEN)                                     *
*                  A(KEYWORD TOKEN)                                   *
* OUTPUT: REG15 = 0 FOR A MATCH                                       *
*               = 4 FOR A MISMATCH                                    *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* CHANGE ACTIVITY :                                                   *
* $MOD(DFH99MT),COMP(SAMPLES),PROD(CICS TS ):                         *
*                                                                     *
*     PN= REASON REL YYMMDD HDXIII : REMARKS                          *
*    $P0= Mnnnnn 170 800925 HDZZUNK: Created.                         *
*    $P1= M90474 330 910807 HDBWSH : Prologue fixed.                  *
*                                                                     *
***********************************************************************
DFH99MT  CSECT
         SPACE 3
DFH99MT  DFH99M PROLOG,SA=NO,PARMS=(INPUT,KEYWORD),                    *
               REGS=(KN,           KEYWORD CHAR COUNT                  *
               I,II,               INPUT DOUBLE REGISTER               *
               K,KK,               KEYWORD DOUBLE REGISTER             *
               IC,                 INPUT CHAR                          *
               KC)                 KEYWORD CHAR
***********************************************************************
* FOR PERFORMANCE, THIS ROUTINE USES REGISTERS HEAVILY, AND DOES NOT
*       PROVIDE A SAVEAREA. THEREFORE IT CANNOT ISSUE MESSAGES.
* EXTRA REGISTERS:
***********************************************************************
MASK     EQU   PARMR               X'FF000000'
IN       EQU   0                   INPUT CHAR COUNT
* DECODE PARAMETERS
         L     IC,INPUT          ADDRESS I/P TOKEN
         L     KC,KEYWORD        ADDRESS K/W TOKEN
         USING KEYSET,IC
         ICM   I,15,KSKWD        PICK UP INPUT
         ICM   II,15,KSKWD+4
         SR    IN,IN             AND INPUT LENGTH
         IC    IN,KSKWL
         DROP  IC
         USING KEYSET,KC
         ICM   K,15,KSKWD        PICK UP KEYWORD
         ICM   KK,15,KSKWD+4
         SR    KN,KN             AND KEYWORD LENGTH
         IC    KN,KSKWL
         DROP  KC
***********************************************************************
* INPUT AND KEYWORD EACH LEFT-JUSTIFIED IN DOUBLE REGISTERS I,K
* IN HAS INPUT CHAR COUNT, KN HAS KEYWORD CHAR COUNT
***********************************************************************
         SR    15,15             SET RETURN CODE FOR A MATCH
         LA    MASK,X'FF'        SET UP MASK
         SLL   MASK,24
         LR    KC,K              GET FIRST KEYWORD CHAR
         NR    KC,MASK
         LR    IC,I              GET FIRST INPUT CHAR
         NR    IC,MASK
         CR    KC,IC             IF FIRST CHARACTERS NOT EQUAL
         BNE   NOMATCH           THEN NOT A MATCH
         B     NEXTIN            ELSE BR INTO LOOP
LOOP     LR    KC,K              GET CURRENT KEYWORD CHAR
         NR    KC,MASK
         LR    IC,I              GET CURRENT INPUT CHAR
         NR    IC,MASK
         CR    KC,IC             IF CHARACTERS EQUAL
         BNE   NEXTKEY           THEN
NEXTIN   SLDL  I,8               SELECT NEXT INPUT CHAR
         BCT   IN,NEXTKEY        IF END OF INPUT
         B     MATCHES           THEN INPUT MATCHES
NEXTKEY  SLDL  K,8               SELECT NEXT KEYWORD CHAR
         BCT   KN,LOOP           IF END OF KEYWORD
NOMATCH  LA    15,4              THEN NOT A MATCH
MATCHES  DFH99M EPILOG,RC=(15)
         END
