       CBL CICS('COBOL3')
       TITLE 'CICS BTS - SAMPLE PROGRAM - COBOL'
      ******************************************************************
      *                                                                *
      * MODULE NAME = DFH0SAL0                                         *
      *                                                                *
      * DESCRIPTIVE NAME = CICS TS  SAMPLE PROGRAM FOR CICS BTS        *
      *                                                                *
      *                                                                *
      *                                                                *
      *     Licensed Materials - Property of IBM                       *
      *                                                                *
      *     "Restricted Materials of IBM"                              *
      *                                                                *
      *     5655-Y04                                                   *
      *                                                                *
      *     (C) Copyright IBM Corp. 1998, 2002"                        *
      *                                                                *
      *                                                                *
      *                                                                *
      *                                                                *
      * STATUS = 7.2.0                                                 *
      *                                                                *
      *----------------------------------------------------------------*
      *                                                                *
      * CHANGE ACTIVITY :                                              *
      *                                                                *
      * $MOD(DFH0SAL0),COMP(SAMPLES),PROD(CICS TS ):                   *
      *                                                                *
      * PN= REASON REL YYMMDD HDXXIII : REMARKS                        *
      * $D1= I07267 630 020403 HDHYJB  : Compile all samples          *
      * $P0= M30594 530 981105 HDGLTJB : Supply and ship CICS BTS      *
      *                                : Samples                       *
      * $P1= M31555 530 990202 HDGLTJB : Supply CICS BTS Repository for*
      *                                : Samples                       *
      * $P2= M14379 610 991028 HDGLTJB : Rename Transaction MENU to    *
      *$P3= D08874 %AT 031023 HDHYJB  : Change CBL XOPTS to CBL CICS   *
      *$P4= D18250 %CE 070315 HDDLCRP : Typo in DFH0SAL0               *
      *                                : SALM and add WEB front end    *
      *                                                                *
      *----------------------------------------------------------------*
      ******************************************************************
      * THIS CICS BTS SAMPLE IS A BASIC SALES APPLICATION CONSISTING OF*
      * ORDER, CREDIT CHECK, STOCK CHECK, DELIVERY NOTE, INVOICE AND   *
      * REMINDER ACTIVITIES. THE USER ENTERS AN ORDER, CREDIT AND STOCK*
      * CHECK TAKES PLACE, AND IF OK THE INVOICE AND DELIVERY NOTE ARE *
      * PRODUCED. A TIMER IS SET TO CHECK FOR THE PAYMENT OF THE       *
      * INVOICE. IF THE TIMER EXPIRES, A REMINDER IS PRODUCED AND THE  *
      * TIMER IS RESET. IF THE PAYMENT IS RECEIVED, THE TIMER IS       *
      * CANCELED AND THE PROCESS COMPLETES.                            *
      *                                                                *
      *                                                                *
      * BELOW IS A MATRIX OF THE PROGRAMS AND TRANSACTIONS USED IN THIS*
      * SAMPLE FOR BOTH THE SALE AND PAYMENT PARTS OF THE APPLICATION. *
      ******************************************************************
      * THE ORDER PART OF THE APPLICATION CONSISTS OF THE FOLLOWING    *
      * TRANSACTIONS AND PROGRAMS.                                     *
      *                                                                *
      ******************************************************************
      * TRANSACTION * PROGRAM * DESCRIPTION                            *
      ******************************************************************
      *             *         *                                        *
      * SALM        * DFH0SAL0* ORDER ENTRY PROGRAM                    *
      *             *         *                                        *
      * SAL1        * DFH0SAL1* ACCEPTS THE ORDER AND DEFINES AND RUNS *
      *             *         * THE SALE PROCESS.                      *
      *             *         *                                        *
      * SALE        * DFH0SAL2* THIS IS THE ROOT ACTIVITY OF THE SALE  *
      *             *         * PROCESS. IT IS THE MAIN LOGIC AND      *
      *             *         * CONTROL PROGRAM. IT DEFINES AND RUNS   *
      *             *         * THE FOLLOWING ACTIVITIES. THEN THE SALE*
      *             *         * PROCESS STAYS DORMANT UNTIL THE PAYMENT*
      *             *         * PART OF THE APPLICATION IS RUN OR THE  *
      *             *         * REMINDER LOOP COMPLETES.               *
      *             *         *                                        *
      * RED1        * DFH0RED1* CUSTOMER CREDIT CHECK PROGRAM - RUN    *
      *             *         * SYNCHRONOUSLY                          *
      *             *         *                                        *
      * STOC        * DFH0STOC* STOCK LEVEL CHECK PROGRAM - RUN        *
      *             *         * SYNCHRONOUSLY                          *
      *             *         *                                        *
      * INV1        * DFH0INV1* INVOICING PROGRAM - RUN ASYNCHRONOUSLY *
      *             *         *                                        *
      * DEL1        * DFH0DEL1* DELIVERY NOTE PROGRAM - RUN            *
      *             *         * ASYNCHRONOUSLY                         *
      *             *         *                                        *
      * REM1        * DFH0REM1* REMINDER PROGRAM - RUN ASYNCHRONOUSLY  *
      *             *         *                                        *
      ******************************************************************
      * THE PAYMENT PART OF THE APPLICATION CONSISTS OF THE FOLLOWING  *
      * TRANSACTIONS AND PROGRAMS.  IT ACQUIRES AND RUNS THE SALE      *
      * PROCESS CAUSING IT TO COMPLETE.                                *
      *                                                                *
      ******************************************************************
      * TRANSACTION * PROGRAM * DESCRIPTION                            *
      ******************************************************************
      *             *         *                                        *
      * PAYM        * DFH0PAY0* PAYMENT INPUT PROGRAM                  *
      *             *         *                                        *
      * PAY1        * DFH0PAY1* ACCEPTS THE PAYMENT INFORMATION AND    *
      *             *         * THEN ACQUIRES AND RUNS THE APPROPRIATE *
      *             *         * SALE PROCESS                           *
      ******************************************************************
      * NOTES                                                          *
      *                                                                *
      * CONTAINER DEFINITIONS ARE IN COPY BOOK DFH0CONT                *
      * MAPS ARE IN MODULES DFH0SALM AND DFH0PAYM                      *
      * MAP COPY BOOKS ARE DFH0SALC AND DFH0PAYC                       *
      * MAPSETS ARE DFH0SAS AND DFH0PAS                                *
      *                                                                *
      * A sample RDO group called DFH$CBTS is also supplied containing *
      * the transaction, program and mapset definitions.               *
      * It also contains a processtype of 'ORDER' predefined in the    *
      * group.                                                         *
      ******************************************************************
      *                                                                *
      * This section explains how to put a WEB front end on to the two *
      * CBTS processes used in this sample, via the 3270 bridge.       *
      * I have modified the two BMS maps so that they do not use       *
      * line 1 as the template generation process overwrites this.     *
      *                                                                *
      * The BMS map source must be re generated with the TEMPLATE      *
      * parameter. Sample jcl follows. These templates must reside in a*
      * PDS referenced by the DD name DFHHTML in the CICS job.         *
      * e.g. //DFHHTML  DD  DSN=target.htl.dataset,DISP=SHR            *
      *                                                                *
      * Set a PDS up with the following attributes                     *
      * RECFM=FB,  LRECL=80,  BLKSIZE=3200                             *
      *                                                                *
      * N.B. ensure you have the supplid macro DFHMSX in the SDFHMAC   *
      *      dataset, this will alter some of the default buttons on   *
      *      web page and also provide a CICS background and CICS ICON *
      *                                                                *
      * The following job must be run for each of the BMS maps         *
      *  i.e. DFH0SALM and DFH0PAYM.                                   *
      *                                                                *
      * //JOB1     JOB JOB CARD INFO                                   *
      * //STEP1    EXEC PGM=IEBGENER                                   *
      * //SYSPRINT DD SYSOUT=*                                         *
      * //SYSUT2   DD DSN=&&TEMPM,UNIT=SYSDA,DISP=(,PASS),             *
      * //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=400),             *
      * //            SPACE=(400,(50,50))                              *
      * //SYSIN    DD DUMMY                                            *
      * //SYSUT1   DD DISP=SHR,DSN=input.dataset(DFH0SALM)             *
      * //IF001    IF (RC = 0) THEN                                    *
      * //ASMMAP   EXEC PGM=ASMA90,REGION=2M,                          *
      * //  PARM='SYSPARM(TEMPLATE),DECK,NOOBJECT'                     *
      * //SYSPRINT DD SYSOUT=*                                         *
      * //SYSLIB   DD DSN=cics.SDFHMAC,DISP=SHR                        *
      * //         DD DSN=SYS1.MACLIB,DISP=SHR                         *
      * //SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(5,5))                     *
      * //SYSUT2   DD UNIT=SYSDA,SPACE=(CYL,(5,5))                     *
      * //SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(5,5))                     *
      * //SYSPUNCH DD DSN=&&HTML,DISP=(,PASS),UNIT=SYSDA,              *
      * //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=400),             *
      * //            SPACE=(400,(50,50))                              *
      * //SYSIN    DD DSN=&&TEMPM,DISP=(OLD,PASS)                      *
      * //COPYHTML EXEC PGM=IEBUPDTE,PARM=NEW                          *
      * //SYSPRINT DD SYSOUT=*                                         *
      * //SYSUT2   DD DSN=target.html.dataset,DISP=SHR                 *
      * //SYSIN    DD DSN=&&HTML,UNIT=SYSDA,DISP=(OLD,DELETE)          *
      * /*                                                             *
      * //IF001    ENDIF                                               *
      * //                                                             *
      *                                                                *
      *                                                                *
      * To invoke the CICS transactions from a WEB browser you enter   *
      * the following urls accordingly.                                *
      *                                                                *
      * To invoke the Sales process you enter                          *
      * http://www.cicsid:portnum/cics/cwba/dfhwbtta/salm              *
      *                                                                *
      * To invoke the Payment process you enter                        *
      * http://www.cicsid.portnum/cics/cwba/dfhwbtta/paym              *
      *                                                                *
      * Where cicsid is your CICS APPLID and portnum is your portnum   *
      * that is specified on a tcpipservice within your CICS region.   *
      *                                                                *
      ******************************************************************
       IDENTIFICATION DIVISION.
      *
       PROGRAM-ID. DFH0SAL0.
      *
       AUTHOR.     IBM.
      *
       DATE-COMPILED.
      *
      *REMARKS.
      ******************************************************************
      * THIS IS THE TOP LEVEL PROGRAM IN THE CBTS SAMPLE APPLICATION.  *
      * IT IS DRIVEN BY THE TRANSACTION CALLED 'SALM'. IT DISPLAYS A   *
      * MAP TO ALLOW THE USER TO ORDER COLORED WIDGETS.                *
      *                                                                *
      ******************************************************************
      *
       ENVIRONMENT DIVISION.
      *
       CONFIGURATION SECTION.
      *
       SPECIAL-NAMES.
      *
       DATA DIVISION.
      *
       WORKING-STORAGE SECTION.

       01  WS-START                        PIC X(44)
           VALUE '*** DFH0SAL0 WORKING STORAGE STARTS HERE ***'.
      *
       01  WS-DATE                         PIC X(10).
       01  WS-TIME                         PIC X(8).
       01  WS-ATIME                        PIC S9(15) COMP-3.
      *
       01  RESP-AREA                       PIC 9(8) COMP.
       01  RESP2-AREA                      PIC 9(8) COMP.

       COPY DFH0SALC.

       LINKAGE SECTION.

      *
       PROCEDURE DIVISION.

      ******************************************************************
      *BEGIN-PROCESS                                                   *
      *GET DATE AND TIME, SEND ORDER MAP                               *
      ******************************************************************
       BEGIN-PROCESS.

            EXEC CICS ASKTIME
                      ABSTIME(WS-ATIME)
                      RESP(RESP-AREA)
                      RESP2(RESP2-AREA)
            END-EXEC.

            EXEC CICS FORMATTIME
                      ABSTIME(WS-ATIME)
                      DDMMYYYY(WS-DATE)
                      DATESEP
                      TIME(WS-TIME)
                      TIMESEP
                      RESP(RESP-AREA)
                      RESP2(RESP2-AREA)
            END-EXEC.

            MOVE LOW-VALUES TO ORDERO.
            MOVE WS-DATE TO DATEO.
            MOVE WS-TIME TO TIMEO.

            EXEC CICS SEND
                      MAP('ORDER')
                      MAPSET('DFH0SAS')
                      FROM(ORDERO)
                      ERASE
                      RESP(RESP-AREA)
                      RESP2(RESP2-AREA)
            END-EXEC.


            EXEC CICS RETURN
                      TRANSID('SAL1')
            END-EXEC.
      *
      ******************************************************************
      *DUMMY-GOBACK                                                    *
      *BECAUSE SOME COMPILERS NEED IT                                  *
      ******************************************************************
       DUMMY-GOBACK.
            GOBACK.
      *
