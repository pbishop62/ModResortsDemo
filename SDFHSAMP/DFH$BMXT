         TITLE 'DFH$BMXT - Sample BMS Global User Exit Program'
***********************************************************************
*                                                                     *
*   MODULE NAME = DFH$BMXT                                            *
*                                                                     *
* DESCRIPTIVE NAME = CICS TS  BMS Sample Global User Exit Program     *
*                                                                     *
*                                                                     *
*                                                                     *
*        Licensed Materials - Property of IBM                         *
*                                                                     *
*        "Restricted Materials of IBM"                                *
*                                                                     *
*        5655-Y04                                                     *
*                                                                     *
*        (C) Copyright IBM Corp. 1998"                                *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* STATUS = 7.2.0                                                      *
*                                                                     *
* FUNCTION =                                                          *
*   Sample Global User Exit Program to run at the XBMIN and XBMOUT    *
*   global user exits.                                                *
*   The program examines 3270 field information passed to the exits   *
*   during BMS input and output mapping operations.                   *
*                                                                     *
* ------------------------------------------------------------------- *
*   NOTE that this program is only intended to DEMONSTRATE the use    *
*   of the BMS global user exits, and suggest how field information   *
*   can be referenced and possibly modified in the exit program.      *
* IT SHOULD BE TAILORED BEFORE BEING USED IN A PRODUCTION ENVIRONMENT *
* ------------------------------------------------------------------- *
*                                                                     *
*   This global user exit program will be invoked, if enabled, in the *
*   following circumstances -                                         *
*                                                                     *
*   1) BMS is about to complete an input or output mapping operation  *
*      for a 3270 screen or printer.                                  *
*   2) At least one of the maps used in this mapping operation        *
*      contains one or more fields defined as 'VALIDN=USEREXIT'.      *
*   3) At least one field defined 'VALIDN=USEREXIT' appears in the    *
*      datastream transmitted to or received from the 3270 device.    *
*                                                                     *
*   The purpose of the program is to demonstrate the use of the XBMIN *
*   and XBMOUT user exits to interpret and modify data fields and/or  *
*   field attributes in the mapped data.                              *
*                                                                     *
*   Attribute values can only be referenced and modified when         *
*   executing in the XBMOUT exit.                                     *
*                                                                     *
*   The trace flag passed to the exit is set ON if BMS (BM)           *
*   level 1 tracing is enabled.                                       *
*                                                                     *
* NOTES :                                                             *
*    DEPENDENCIES = S/390                                             *
*    RESTRICTIONS = none                                              *
*    REGISTER CONVENTIONS = see code                                  *
*    MODULE TYPE = Executable                                         *
*    PROCESSOR = Assembler                                            *
*    ATTRIBUTES = Read only, AMODE 31, RMODE ANY                      *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* ENTRY POINT = DFH$BMXT                                              *
*                                                                     *
*     PURPOSE =                                                       *
*         Described above                                             *
*                                                                     *
*     LINKAGE =                                                       *
*         Called by the user exit handler                             *
*                                                                     *
*     INPUT =                                                         *
*         Standard user exit parameter list DFHUEPAR,                 *
*          addressed by R1 and containing a pointer to the            *
*          BMS field information parameter list                       *
*                                                                     *
*     OUTPUT =                                                        *
*         Modified 3270 data and/or attribute sequences               *
*                                                                     *
*     EXIT-NORMAL =                                                   *
*         RETURN (14,12),RC=UERCNORM                                  *
*                                                                     *
*     EXIT-ERROR =                                                    *
*         None                                                        *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* EXTERNAL REFERENCES :                                               *
*     ROUTINES = None                                                 *
*     DATA AREAS = None                                               *
*     CONTROL BLOCKS =                                                *
*         User Exit Parameter list for XBMIN/XBMOUT : DFHUEPAR        *
*         BMS field information - DFH$XBMDS                           *
*     GLOBAL VARIABLES = None                                         *
*                                                                     *
* TABLES = None                                                       *
*                                                                     *
* MACROS =                                                            *
*         DFHUEXIT to generate the standard user exit parameter list  *
*                  with the extensions for the XBMIN and XBMOUT       *
*                  exit points                                        *
*         DFHUEXIT to declare the XPI (exit programming interface)    *
*         DFHTRPTX XPI call to issue a user trace entry               *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* CHANGE ACTIVITY :                                                   *
*                                                                     *
*        $MOD(DFH$BMXT),COMP(SAMPLES),PROD(CICS TS ):                 *
*                                                                     *
*     PN= REASON REL YYMMDD HDXIII : REMARKS                          *
*    $00= A14629 530 980520 HD4OGB  : Migrate PQ14629 from SPA R520   *
*                                                                     *
***********************************************************************
         PRINT OFF
         DFHUEXIT TYPE=EP,ID=(XBMIN,XBMOUT)
         DFHUEXIT TYPE=XPIENV
         COPY  DFHTRPTY
         COPY  DFHXBMDS
         COPY  DFHBMSCA
         PRINT ON
***********************************************************************
*  REGISTER USAGE :                                                   *
*  R0 -                                                               *
*  R1 - address of DFHUEPAR on input, and used by XPI calls           *
*  R2 -                                                               *
*  R3 - program base                                                  *
*  R4 - address of standard user exit parameter list, DFHUEPAR        *
*  R5 - trace_put parameter list                                      *
*  R6 - address of field information element                          *
*  R7 - count of field information elements                           *
*  R8 - address of field data                                         *
*  R9 - LENGTH register in EXecuted TRANSLATE instructions            *
*  R10-                                                               *
*  R11-                                                               *
*  R12-                                                               *
*  R13- address of kernel stack prior to XPI CALLS                    *
*  R14- used by XPI calls                                             *
*  R15- return code, and used by XPI calls                            *
*  (The register equates are declared by the DFHUEXIT call above)     *
***********************************************************************
DFH$BMXT CSECT
DFH$BMXT AMODE 31
DFH$BMXT RMODE ANY
         SAVE  (14,12)              save registers
         LR    R3,R15               set R3 as base
         USING DFH$BMXT,R3          tell the assembler
         LR    R4,R1                get UEP parameter list address
         USING DFHUEPAR,R4          tell the assembler
         L     R5,UEPXSTOR
         USING DFHTRPT_ARG,R5
**********************************************************************
*        Make a trace entry, if trace active, writing out field info *
*        addressed by UEPBMTAB.                                      *
**********************************************************************
         L     R6,UEPTRACE
         TM    0(R6),UEPTRON
         BZ    NOTRACE
         L     R6,UEPBMCNT     load address of count field
         LH    R6,0(R6)        load the count
         MH    R6,=H'32'       multiply by element length
         L     R7,UEPBMTAB
         L     R13,UEPSTACK
         DFHTRPTX CALL,CLEAR,IN,                                       *
               FUNCTION(TRACE_PUT),                                    *
               POINT_ID(256),                                          *
               DATA1((7),(6)),                                         *
               OUT,                                                    *
               RESPONSE(*),                                            *
               REASON(*)
         L     R13,UEPEPSA
**********************************************************************
*        Now execute separate logic for XBMIN and XBMOUT.            *
**********************************************************************
NOTRACE  DS    0H
         L     R6,UEPEXN           load address of exitid
         CLI   0(R6),XBMIN         is this XBMIN exit ?
         BNE   SENDMAP             no - assume XBMOUT
**********************************************************************
*        Processing specific to XBMIN exit                           *
**********************************************************************
         L     R6,UEPBMTAB         address of field info table
         USING DFHXBMDS,R6         address via DSECT
         L     R7,UEPBMCNT         load address of table count
         LH    R7,0(R7)            and load the count
RCVLOOP  DS    0H                  process each table entry
         L     R8,BMXDATA          load data address
         LTR   R8,R8               is there any?
         BZ    RCVNEXT             no - check next entry
         LH    R9,BMXACTLN         load field length
         LTR   R9,R9               is it zero ?
         BZ    RCVNEXT             yes - check next entry
         BCTR  R9,0                minus 1 for machine
         EX    R9,TRIN             translate input field
RCVNEXT  DS    0H
         LA    R6,BMXLEN(,R6)      address of next entry
         BCT   R7,RCVLOOP          process next entry
         B     ALLDONE             go return to CICS
*
TRIN     TR    0(1,R8),TABIN       translate input field
         EJECT ,
**********************************************************************
*        Processing specific to XBMOUT exit                          *
**********************************************************************
SENDMAP  DS    0H
         L     R6,UEPBMTAB         address of field info table
         USING DFHXBMDS,R6         address via DSECT
         L     R7,UEPBMCNT         load address of table count
         LH    R7,0(R7)            and load the count
XMTLOOP  DS    0H                  process each table entry
         L     R8,BMXDATA          load data address
         LTR   R8,R8               is there any?
         BZ    XMTNEXT             no - check next entry
         LH    R9,BMXACTLN         load field length
         LTR   R9,R9               is it zero ?
         BZ    XMTNEXT             yes - check next entry
         BCTR  R9,0                minus 1 for machine
         EX    R9,TROUT            translate output field
**********************************************************************
*        Check the attribute sequence sent with this field.          *
**********************************************************************
         L     R8,BMXATTR          load attribute address
         LTR   R8,R8               are there any ?
         BZ    XMTNEXT             no - check next entry
         CLI   0(R8),X'1D'         if Start Field
         BE    XMTNEXT             go check next entry
* assume this is SFE or MF
         SR    R9,R9               zero out register 9
         IC    R9,1(,R8)           get attribute count
         LTR   R9,R9               is it zero ?
         BZ    XMTNEXT             yes - check next entry
XMTATTRS DS    0H                  process each attr
         LA    R8,2(,R8)           addr first/next attr type/value
         CLI   0(R8),DFHCOLOR      is this COLOR attr type
         BNE   CHECKHIL            no - check next attr
         MVI   1(R8),DFHPINK       yes - make it pink
         B     NEXTATTR            go check next attr
CHECKHIL DS    0H                  check hilite attr
         CLI   0(R8),DFHHLT        is this HILIGHT attr type
         BNE   NEXTATTR            no - check next attr
         MVI   1(R8),DFHBLINK      yes - make it flash
NEXTATTR DS    0H
         BCT   R9,XMTATTRS         process next attr (if any)
**********************************************************************
*        This entry in UEPBMTAB has been processed.                  *
*        Loop round to check next.                                   *
**********************************************************************
XMTNEXT  DS    0H
         LA    R6,BMXLEN(,R6)      address of next entry
         BCT   R7,XMTLOOP          process next entry
         B     ALLDONE
*
TROUT    TR    0(1,R8),TABOUT      translate output field
*
ALLDONE  DS    0H
         L     R13,UEPEPSA         load exit program save area
         RETURN (14,12),RC=UERCNORM return to CICS with RC zero
         SPACE ,
         LTORG ,
         EJECT ,
**********************************************************************
*        The following translate table is referenced in the          *
*        XBMIN exit. The table, as supplied, does not cause          *
*        any codepoints to change. It can, of course, be             *
*        modified to serve whatever purpose is required by           *
*        a CICS installation.                                        *
**********************************************************************
TABIN    DS    0D
         DC    X'000102030405060708090A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'808182838485868788898A8B8C8D8E8F'
         DC    X'909192939495969798999A9B9C9D9E9F'
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
**********************************************************************
*        The following translate table is referenced in the          *
*        XBMOUT exit. The table, as supplied, does not cause         *
*        any codepoints to change. It can, of course, be             *
*        modified to serve whatever purpose is required by           *
*        a CICS installation.                                        *
**********************************************************************
TABOUT   DS    0D
         DC    X'000102030405060708090A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'808182838485868788898A8B8C8D8E8F'
         DC    X'909192939495969798999A9B9C9D9E9F'
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
         END   DFH$BMXT
