         TITLE 'DFH$MOLS - CICS MONITORING SAMPLE UTILITY PROGRAM'
***********************************************************************
*                                                                     *
*  MODULE NAME = DFH$MOLS                                             *
*                                                                     *
*  DESCRIPTIVE NAME = CICS TS  MONITORING FACILITY SAMPLE             *
*                     UTILITY PROGRAM                                 *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*        Licensed Materials - Property of IBM                         *
*                                                                     *
*        "Restricted Materials of IBM"                                *
*                                                                     *
*        5655-Y04                                                     *
*                                                                     *
*        (C) Copyright IBM Corp. 1984, 2017"                          *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*  STATUS = 7.2.0                                                     *
*                                                                     *
*  FUNCTION = THIS PROGRAM READS, FORMATS, AND PRINTS THE MONITORING  *
*        DATASET. IT IS INTENDED AS A SAMPLE PROGRAM THAT USERS       *
*        CAN USE AS A SKELETON IF THEY NEED TO WRITE THEIR OWN        *
*        PROGRAM TO ANALYSE THE DATA SET.                             *
*                                                                     *
*        THIS PROGRAM CAN ALSO BE READ TOGETHER WITH MONITORING       *
*        DOCUMENTATION TO ENABLE THE USER TO UNDERSTAND THE WRAPPING  *
*        THAT ENCLOSES THE RAW MONITORING DATA.                       *
*        ONCE THE WRAPPING HAS BEEN REMOVED, THE INDIVIDUAL DATA      *
*        FIELDS ARE MOVED TO THE PRINT AREA. IF THE USER WISHED TO    *
*        ANALYSE THE DATA, THIS WOULD BE THE POINT THAT THE LINK TO   *
*        USER EXIT WOULD BE MADE.                                     *
*                                                                     *
*        MONITORING MANIPULATES COUNTERS, CLOCKS, AND FIELDS.         *
*        CLOCKS ARE EITHER 8 BYTES LONG IN STCK-FORMAT FOR TOD, OR    *
*        8 OR 12 BYTES LONG FOR ELAPSED TIME. FOR CICS TS 3.1, OR     *
*        EARLIER, CLOCKS ARE 8 BYTES LONG IN 16 MICROSECOND UNITS     *
*        AND START-COUNT. FOR CICS TS 3.2 OR LATER, CLOCKS ARE 12     *
*        BYTES LONG IN STCK UNITS AND START-COUNT.                    *
*        THIS PROGRAM WILL CONVERT THE TOD CLOCK TO YYYY/MM/DD        *
*        FORMAT, SO DO NOT ASSUME IT IS MMDDYYYY OR DDDYY.            *
*                                                                     *
*        THE PROGRAM REQUIRES TO FIND A DICTIONARY TO BE ABLE TO      *
*        PROCESS PERFORMANCE CLASS MONITORING RECORDS. (EXCEPTION     *
*        AND RESOURCE RECORDS DO NOT NEED A DICTIONARY RECORD).       *
*        IF THE DATASET DOES NOT CONTAIN A DICTIONARY RECORD THEN     *
*        THE PROGRAM DOES NOT ANALYSE ANY PERFORMANCE RECORDS; THE    *
*        PROGRAM ABENDS.                                              *
*        A DICTIONARY RECORD FOR EACH APPLID CAN BE CREATED USING     *
*        THE CICS UTILITY PROGRAM - DFHMNDUP. THIS DATASET CAN THEN   *
*        BE CONCATENATED WITH THE INPUT DATASET. THE DICTIONARY       *
*        DATASET SHOULD BE THE FIRST DATASET IN THE CONCATENATION     *
*        BUT THIS PROGRAM DOES SORT THE INPUT DATA INTO DATE/TIME     *
*        WITHIN RECORD TYPE WITHIN APPLID SEQUENCE.                   *
*                                                                     *
*        THIS PROGRAM CAN PRODUCE OVER A PAGE OF OUTPUT FOR EACH      *
*        TASK IF ALL CLASSES OF MONITORING ARE ACTIVE. SO BEWARE....  *
*                                                                     *
*        THE MONITORING SMF DATASET IS EXPECTED TO BE IN THE          *
*        FOLLOWING FORMAT :-                                          *
*        <SMF HEADER>.<SMF PRODUCT SECTION>.<CICS SECTION>.<SMF H...  *
*                                                                     *
*        THE CICS SECTION WILL BE ONE OF :-                           *
*        1) A DICTIONARY RECORD                                       *
*        2) AN EXCEPTION RECORD                                       *
*        3) A PERFORMANCE RECORD, CONSISTING OF                       *
*           <CONNECTORS>.<DATA RECORD>.<DATA RECORD>...               *
*        4) A RESOURCE RECORD, CONSISTING OF                   @BA63143
*           <DATA RECORD>.<DATA RECORD>.<DATA RECORD>...       @BA63143
*        5) A IDENTITY RECORD, CONSISTING OF                          *
*           <DATA RECORD>.<DATA RECORD>.<DATA RECORD>...              *
*                                                                     *
*  ATTRIBUTES = NOT READ ONLY                                         *
*                                                                     *
*  INPUT = MONITORING DATASET (UNLOADED SMF DATASET).                 *
*                                                                     *
*  EXIT-ERROR                                                         *
*                                                                     *
*  EXTERNAL REFERENCES = DFHSMFDS; DFHMCTDR; DFHMNEXC;                *
*                        DFHMNPDA; DFHMNRDS; DFHMNIDS.                *
*                                                                     *
***********************************************************************
*                                                                     *
*  OPERATION :- THE PROGRAM READS THE MONITOR DATASET. WHEN A         *
*               DICTIONARY RECORD IS LOCATED. IT WILL BUILD A NEW     *
*               INCORE DICTIONARY AND PROCESS THE FOLLOWING DATA      *
*               RECORDS AGAINST IT. EACH TIME A NEW DICTIONARY IS     *
*               FOUND, THE CURRENT INCORE ONE IS RELEASED AND A NEW   *
*               ONE IS BUILT. A NEW ONE BUILT. IF ANY PERFORMANCE     *
*               RECORDS ARE FOUND PRIOR TO THE FIRST DICTIONARY       *
*               RECORD THEN THE PROGRAM ABENDS. NOTE HOWEVER; THAT    *
*               EXCEPTION AND RESOURCE RECORDS CAN PRECEDE THE        *
*               FIRST DICTIONARY SINCE THEY DO NOT REQUIRE IT.        *
*                                                                     *
*  FACILITIES :- None                                                 *
*                                                                     *
*  SAMPLE JCL:-                                                       *
*          MVS:-                                                      *
*        //J1       JOB                                               *
*        //S1       EXEC PGM=DFH$MOLS                                 *
*        //INPUT    DD (INPUT TAPE OR DISK)                           *
*        //SYSOUT   DD SYSOUT=A                                       *
*        //SYSPRINT DD SYSOUT=A                                       *
*        //SYSUDUMP DD SYSOUT=A                                       *
*        //SYSABEND DD SYSOUT=A                                       *
*        //SYSIN    DD *                                              *
*        /*                                                           *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* CHANGE ACTIVITY :                                                   *
* $SEG(DFH$MOLS),COMP(SAMPLES),PROD(CICS TS ):                        *
*                                                                     *
*     PN= REASON REL YYMMDD HDXIII : REMARKS                          *
*    $01= A24298 410 920723 HDCWTAH : Migrate PN24298 from SPA R330   *
*    $04= A38458 610 000802 HD5VDLA : Allow DFH$MOLS to compile in    *
*                                     user environment                *
*    $05= A63143 630 020905 HD1VCJB : Migrate PQ63143 from SPA R620   *
*    $06= A76703 630 030814 HD4PALS : Migrate PQ76703 from SPA        *
*    $07= A88756 670 090714 HDBGSLS: Migrate PK88756 from SPA R660    *
*    $08= A16738 670 100719 HDBGSLS: Migrate PM16738 from SPA R660    *
*    $09= A30842 670 110201 HDBGSLS: Migrate PM30842 from SPA R660    *
*    $D1= I06709 610 990416 HD1VCJB : Monitoring for LU Aliasing      *
*    $D5= I07698 650 050713 HD1VCJB: Monitoring Record Compression    *
*    $D6= I07610 650 050923 HD1VCJB: Clock Size Control Block Changes *
*    $D7= I07610 650 060203 HDFXAB : 3 - More clock precision changes *
*    $D9= I07799 650 070111 HD1VCJB: change use of ip connection      *
*    $DA= I07910 660 080615 HD1VCJB: Monitor DPL Program Requests     *
*    $L1= BS1    410 920122 HD2IPD  : Initial changes for   CICS/XB1  *
*    $L2= 613    410 920414 HD9TMAW : LID613: Include jobname  date   *
*    $L3= 613    410 920825 HD2IPD  : New TCLSNAME field              *
*    $L4= 613    410 921202 HD2IPD  : Remove OPID from EXC record     *
*    $L5= 613    410 921209 HD2IPD  : Add TOD clock adjustment print  *
*    $L6= 613    410 930310 HD1VCJB : Transaction Prty Interpretation *
*    $L9= 721    520 961129 HD1VCJB : New Exception Fields            *
*    $LA= 718    530 971104 HD1VCJB : Support for Long Resource Ids   *
*    $LC= 724    530 971210 HD1VCJB : Exception Record Urid - MVS/RRMS*
*    $LE= 709    530 980211 HD1VCJB : Monitoring Support for CBTS     *
*    $LG= 776    610 991214 HD1VCJB : Monitoring Support for EJB      *
*    $LI= 857    640 040330 HD1VCJB: Minor Resource Formatting Fix    *
*    $LJ= 710    650 060626 HD1VCJB: Monitoring for IP connectivity   *
*    $LK= 827    650 060706 HDFXAB : Monitoring for IP Origin Data    *
*    $LL= 830    660 080618 HD1VCJB: Monitoring Support for IPv6      *
*    $LM= 903    660 081118 HD1VCJB: Monitoring Identity Class        *
*    $LN= R00360 670 100810 HD1VCJB: Monitoring Hop Data Support      *
*    $LO= R12973 670 101209 HDIYAJL: Adapter Monitoring Changes       *
*    $P0= PTM    170 841016 HDZZUNK: Created.                         *
*    $P1= M90474 330 910807 HDBWSH : Prologue fixed.                  *
*    $P2= M90951 330 910925 HD2GJST : Ensure CICS 3.3 recs. processed *
*    $P3= M81176 410 920413 HD6OAJH : Correct incorrect MVC length.   *
*    $P4= M82033 410 930225 HD1VCJB : SMF 110 Migration Compatibility *
*    $P5= M83884 410 930916 HD1VCJB : Add MVS Release to SMF records  *
*    $P6= M84231 410 931021 HD1VCJB : Dictionary on TIME select       *
*    $P7= M85016 410 931220 HD1VCJB : Correct Local Time Calculation  *
*    $P8= M93109 510 940714 HD1VCJB : Add UNLOAD support              *
*    $P9= M93483 510 941212 HD1VCJB : Correct DFH$MOLS PRINT Selection*
*    $PA= M94305 510 950421 HD1VCJB : Correct Field Interpretation    *
*    $PB= M94664 510 950614 HD1VCJB : Correct RM Unit-of-Work Naming  *
*    $PC= M94782 510 950630 HD1VCJB : Version/Release Change          *
*    $PD= M96108 510 951214 HD4OGB  : Correct product name            *
*    $PE= M66609 520 970616 HD1VCJB : Unload for Multiple Releases    *
*    $PF= M66874 520 970714 HD1VCJB : Create DB2 Accounting Token     *
*    $PM= M28780 530 980616 HD1VCJB : RRMS/MVS URID interpretation    *
*    $PN= M29012 530 980707 HD1VCJB : Provide Select/Ignore Taskno    *
*    $PT= D14891 650 051216 HDGRPNT: 2 Fix DFH$MOLS report columns    *
*    $PU= D14963 650 060105 HD1VCJB: Correct DFH$MOLS Date formating  *
*    $PV= D15091 650 060124 HD1VCJB: Correct DCB SYSUT2 attributes    *
*    $PW= D15271 650 060220 HD1VCJB: Packed field sign change         *
*    $PX= D15270 650 060220 HD1VCJB: DFH$MOLS U107 Abend when EXPAND  *
*    $PY= D15193 650 060314 HD1VCJB: Field Title Content Formatting   *
*    $PZ= D16751 650 061027 HD1VCJB: Correct Minor Errors in Prolog   *
*    $Q1= D16797 650 061127 HD1VCJB: DFH$MOLS Addressing Mode         *
*    $Q2= D19810 660 070920 HD1VCJB: Correct Version Release Check    *
*    $Q3= D21570 660 080801 HD1VCJB: Resource Print Line Alignment    *
*    $Q4= D22733 660 081104 HD1VCJB: Correct Resource Class report    *
*    $Q5= D22753 660 081106 HD1VCJB: Hex print only for tran group id *
*    $Q6= D27000 670 090907 HD1VCJB: Correct dname realm formatting   *
*         R36300 680 120224 HDIADD : Add File contriol exclusive wait *
*         R36300 680 120301 HDIADD : Add VSAM string wait             *
*         D50231 680 120522 HDFVGMB: Release sensitive FC fields      *
*        PM78616 680 130115 HD3BADW: Support POLICY EXCEPTION records *
*         R92160 700 141008 HD3BADW: Support shared ts resource class *
*        R116385 710 160725 HD1VCJB: Tracking data update support     *
*        D138441 710 170403 HD3BADW: Change default century to 21st   *
*        R146209 720 180201 HDLHJJH: Add URIMAP/WEBSERVICE resources  *
*        R149169 720 180605 HDLHJJH: Format cipher for urimap         *
*        D151392 720 180917 HDFXAB : Correct date validation          *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*          EQUATES FOR REGISTERS, ETC                                 *
*                                                                     *
***********************************************************************
         SPACE ,                                                   @06A
R0       EQU   0         WORK REGISTERS, ALL SHORT-TERM USE
R1       EQU   1         ----------   "   ----------------
R2       EQU   2         ---------    "   ----------------
R3       EQU   3         ---------    "   ----------------
R4       EQU   4         ---------    "   ----------------
R5       EQU   5         WORK REG.
R6       EQU   6         PRTLINE PTR
R7       EQU   7         SMF HEADER AND PRODUCT SECTION PTR
TIMEREG  EQU   8         USED IN TIME CALCULATION CONTROL CARDS
R8       EQU   8         PRINT DCB ADDRESS IN PRINT ROUTINES
R9       EQU   9         PTR TO FIELD DATA IN PRINT ROUTINES
R10      EQU   10        DICT START PTR OR DICT ENTRY PTR
BASE     EQU   11        1ST BASE REGISTER
R11      EQU   11        1ST BASE REGISTER
BASE2    EQU   12                                              @BA63143
R12      EQU   12                                              @BA63143
R13      EQU   13        SAVE AREA PTR
LINK     EQU   14        LINK REGISTER
R14      EQU   14        LINK REGISTER
R15      EQU   15        WORK REG
*
FR0      EQU   0                                                   @PEA
FR2      EQU   2                                                   @PEA
FR4      EQU   4                                                   @PEA
FR6      EQU   6                                                   @PEA
         SPACE  ,                                                  @PDA
         DFHSYS ,                                                  @PDA
         EJECT ,                                                   @D6C
***********************************************************************
         COPY  IEABRC            Define relative branch OPSYNs @BA63143
         SPACE ,                                                   @D6C
         SYSSTATE ARCHLVL=1                                    @BA63143
         EJECT  ,                                                  @P8A
         CVT DSECT=YES,LIST=NO                                     @P8A
         EJECT  ,                                                  @P8A
         DCBD DSORG=PS                                             @P8A
         EJECT
***********************************************************************
*    MONITORING DATA SECTIONS                                         *
*    (1) THE SMF HEADER AND PRODUCT SECTION                           *
         SPACE
         COPY  DFHSMFDS
***********************************************************************
         SPACE
*    (2) THE DICTIONARY ENTRY
         SPACE
DICTNTRY DSECT  ,
         DFHMCTDR TYPE=(PREFIX,CMO)
***********************************************************************
         SPACE
*    (3) THE EXCEPTION RECORD
         SPACE
         DFHMNEXC PREFIX=EXC
***********************************************************************
         SPACE  ,                                                  @D6C
*    (4) THE RESOURCE RECORD                                   @BA63143
         SPACE  ,                                              @BA63143
         COPY  DFHMNRDS                                            @LMC
***********************************************************************
         SPACE  ,                                                  @LMA
*    (5) THE IDENTITY RECORD
         SPACE  ,                                                  @LMA
         COPY  DFHMNIDS                                            @LMA
***********************************************************************
         SPACE  ,                                                  @P8A
*    (6) THE UNLOADED PERFORMANCE RECORD                       @BA63143
         SPACE  ,                                                  @P8A
         COPY  DFHMNPDA                                            @P8A
***********************************************************************
         EJECT
***********************************************************************
*                  ANALYSIS CONTROL BLOCK DSECT                       *
***********************************************************************
         SPACE
ANLCB    DSECT  ,
FIRSTBLK DS    A                   POINTER TO FIRST SIBLOCK
CURRBLK  DS    A                   POINTER TO CURRENT SIBLOCK
SISW     DS    F
SIWORK   DS    CL8
         SPACE
PRTSEL   DS    X                   PRINT OPTION BYTE
PRTEXC   EQU   64                  PRINT EXCEPTION RECORDS
PRTPER   EQU   32                  PRINT PERFORMANCE RECORDS
PRTRES   EQU   16                  PRINT RESOURCE RECORDS      @BA63143
PRTIDN   EQU   8                   PRINT IDENTITY RECORDS          @LMA
PRTDIC   EQU   2                   PRINT DICTIONARY RECORDS        @LMC
HDREQ    EQU   1                   HEADER NEEDED ON REPORT
         SPACE ,                                                   @06A
PRTSEL2  DS    X                   PRINT OPTION BYTE 2             @06A
PRTRESF  EQU   128           PRINT RESOURCE RECORDS - FILE         @06A
PRTREST  EQU   64            PRINT RESOURCE RECORDS - TSQUEUE      @06A
PRTRESD  EQU   32            PRINT RESOURCE RECORDS - DPL          @DAC
PRTRESU  EQU   16            PRINT RESOURCE RECORDS - URIMAP  @R146209C
PRTRESW  EQU   8             PRINT RESOURCE RECORDS - WEBSERV @R146209C
*        EQU   4                   RESERVED - SPARE                @06A
*        EQU   2                   RESERVED - SPARE                @06A
*        EQU   1                   RESERVED - SPARE                @06A
         SPACE ,                                                   @06A
         DS    X                   RESERVED - SPARE                @06A
         DS    X                   RESERVED - SPARE                @06A
         SPACE
PROCESSW DS    X                   PROCESS OPTIONS
*        EQU   128                 RESERVED - SPARE
*        EQU   64                  RESERVED - SPARE
*        EQU   32                  RESERVED - IGNORES TO PROCESS
*        EQU   16                  RESERVED - SELECTS TO PROCESS
*        EQU   8                   RESERVED - WAS TIMEOFF      @BA63143
LOCALT   EQU   4                   PRINT TIMESTAMPS IN LOCAL FORMAT    F
                                                                   @LEC
SELSTOP  EQU   2                   STOPAFT LIMIT IS OPERATIVE
PRINTOPT EQU   1                   PRINT OPTION SPECIFIED          @P8C
         SPACE ,                                                   @06A
         DS    X                   RESERVED - SPARE                @06A
         SPACE
READFLAG DS    X                   MONITORING RECORD PROCESSING FLAG
RECSPROC EQU   X'02'               A MONITORING RECORD WAS SELECTED
RECSREAD EQU   X'01'               A VALID MONITORING RECORD WAS READ
         SPACE
SORTSW   DS    X                   SORT OPTIONS
*        EQU   128                 RESERVED - WAS SORTRUN      @BA63143
*        EQU   64                  RESERVED - SPARE
*        EQU   32                  RESERVED - SPARE
*        EQU   16                  RESERVED - SPARE
NEWDCB   EQU   8                   EXPAND OPTION NEWDCB SPECIFIED  @D5C
EXPAND   EQU   4                   EXPAND OPTION REQUESTED         @D5C
UNLOADLT EQU   2                   UNLOAD LOCAL TIME OPTION REQUESTED  F
                                                                   @P8C
UNLOAD   EQU   1                   UNLOAD OPTION REQUESTED         @P8C
         SPACE
*SELSWTCH DS    C                  SELECT/IGNORE PROCESSING SWITCH
SELAPPL  EQU   128                 INCLUDE SELECTED APPL IDS
IGNAPPL  EQU   64                  IGNORE SELECTED APPL IDS
SELTERM  EQU   32                  INCLUDE SELECTED TERMINAL IDS
IGNTERM  EQU   16                  IGNORE SELECTED TERMINAL IDS
SELTRAN  EQU   8                   INCLUDE SELECTED TRANSACTION IDS
IGNTRAN  EQU   4                   IGNORE SELECTED TRANSACTION IDS
SELUSID  EQU   2                   INCLUDE SELECTED USER IDS
IGNUSID  EQU   1                   IGNORE SELECTED USER IDS
         SPACE
SELTASK  EQU   128                 INCLUDE SELECTED TASK NUMBERS   @PNA
IGNTASK  EQU   64                  IGNORE SELECTED TASK NUMBERS    @PNA
SELPRST  EQU   32                  INCLUDE SELECTED PROCESS TYPES  @PNC
IGNPRST  EQU   16                  IGNORE SELECTED PROCESS TYPES   @PNC
*        EQU   8                   RESERVED - SPARE
*        EQU   4                   RESERVED - SPARE
*        EQU   2                   RESERVED - SPARE
SELTIME  EQU   1                   DATE/TIME SELECTION IS OPERATIVE
         SPACE
STOPFLD  DS    F                   STOPAFT RECORD PROCESSING LIMIT
         DS    F                   RESERVED - SPARE            @BA63143
         SPACE
REC_ADDR DS    F                   POINTER TO INPUT RECORD
INPUTR   DS    A                   INPUT DCB ADDRESS           @BA63143
PRINTR   DS    A                   SYSPRINT DCB ADDRESS            @P8C
SYSUT4R  DS    A                   SYSUT4 DCB ADDRESS              @P8A
UT4RADDR DS    F                   SYSUT4 OUTPUT RECORD ADDRESS    @P8A
         SPACE ,                                                   @D5A
CSRWAPTR DS    F                   COMPRESSION SERVICE WORK AREA   @D5A
CSRXAPLA DS    F                   EXPANDED RECORD AREA ADDRESS    @D5A
CSRXAPLL DS    A                   EXPANDED RECORD MAXIMUM LENGTH  @D5A
SYSUT2R  DS    A                   SYSUT2 DCB ADDRESS              @D5A
         SPACE
HDRLINES DS    H                   LINE COUNT / PAGE
HDRCNT   DS    H                   COUNT LINES PER PAGE
         SPACE
         DS    XL1                 RESERVED - SPARE                @P8A
PAGE     DS    PL3                 PAGE COUNTER
         DS    XL2                 RESERVED - SPARE                @P8A
HDRDATE  DS    CL10                REPORT DATE - DD/MM/YYYY        @P8C
HDRJDATE DS    CL8                 REPORT DATE - YYYY/DDD          @P8C
HDRTIME  DS    CL8                 REPORT TIME                     @P8C
         SPACE
LOWDT    DS    0CL8                LOWEST INPUT DATE & TIME        @P8C
LOWDATE  DS    PL4                 LOWEST INPUT DATE               @P8C
LOWTIME  DS    BL4                 LOWEST INPUT TIME
HIDT     DS    0CL8                HIGHEST INPUT DATE & TIME       @P8C
HIDATE   DS    PL4                 HIGHEST INPUT DATE              @P8C
HITIME   DS    BL4                 HIGHEST INPUT TIME
         SPACE
LASTDATE DS    PL4                 DATE FROM LAST INPUT RECORD     @P8C
LASTTIME DS    BL4                 TIME FROM LAST INPUT RECORD
LASTAPPL DS    CL8                 APPLID FROM LAST INPUT RECORD
         SPACE
JSSTART  DS    0CL8                SELECT START DATE & TIME        @P8C
JDATEL   DS    PL4                 SELECT START DATE               @P8C
JSTART   DS    BL4                 SELECT START TIME
JSEND    DS    0CL8                SELECT END DATE & TIME          @P8C
JDATEH   DS    PL4                 SELECT END DATE                 @P8C
JEND     DS    BL4                 SELECT END TIME
         SPACE  ,                                                  @P8A
SMFRECS  DS    PL8                 SMF RECORDS READ                @P8A
SMF110S  DS    PL8                 SMF 110 RECORDS READ            @P8A
SMF110MN DS    PL8                 SMF 110 MONITORING RECORDS READ @P8A
SMFDRECS DS    PL8                 SMF 110 DICTIONARY RECORDS READ @P8A
SMFPRECS DS    PL8                 SMF 110 PERFORMANCE RECORDS READ    F
                                                                   @P8A
SMFERECS DS    PL8                 SMF 110 EXCEPTION RECORDS READ  @P8A
SMFRRECS DS    PL8                 SMF 110 RESOURCE RECORDS READ   @LMC
SMFIRECS DS    PL8                 SMF 110 IDENTITY RECORDS READ   @LMA
SMF110OK DS    PL8                 SMF 110 RECORDS SELECTED        @P8A
DICSLCTD DS    PL8                 DICTIONARY RECORDS SELECTED     @P8A
PERRECS  DS    PL8                 PERFORMANCE RECORDS             @P8A
PERSLCTD DS    PL8                 PERFORMANCE RECORDS SELECTED    @P8A
EXCRECS  DS    PL8                 EXCEPTION RECORDS               @P8A
EXCSLCTD DS    PL8                 EXCEPTION RECORDS SELECTED      @P8A
RESRECS  DS    PL8                 RESOURCE RECORDS            @BA63143
RESSLCTD DS    PL8                 RESOURCE RECORDS SELECTED   @BA63143
IDNRECS  DS    PL8                 IDENTITY RECORDS                @LMA
IDNSLCTD DS    PL8                 IDENTITY RECORDS SELECTED       @LMA
UT4RECS  DS    PL8                 PERFORMANCE RECORDS UNLOADED    @P8A
UT2RECS  DS    PL8                 SMF 110 RECORDS COPIED          @D5A
SMF110NC DS    PL8                 SMF 110 RECORDS NOT COMPRESSED  @D5A
         EJECT
*        PRINT NOGEN
DFH$MOLS CSECT
DFH$MOLS AMODE 31                                                  @Q1C
DFH$MOLS RMODE 24
         ENTRY DFH$MONA
         DC    CL8'DFH$MOLS'       PROGRAM ID.
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
DFH$MONA DS    0H
         STM   R14,R12,12(R13)
         CNOP  0,4                 ALIGN TO FULLWORD           @BA63143
         BRAS  R12,*+8             SKIP OVER AND ADDRESS ADCON @BA63143
         DC    A(MOLS_STATIC)      ADDRESS OF THE STATIC DATA  @BA63143
         L     R12,0(,R12)         LOAD ADDRESS OF THE STATIC  @BA63143
         USING MOLS_STATIC,R12     ADDRESSABILITY TO STATIC    @BA63143
         SPACE ,                                               @BA63143
         ST    R13,SAVEAREA+4                                  @BA63143
         LA    R13,SAVEAREA                                    @BA63143
         LA    R9,ANLCBA           POINT TO ANALYSIS CONTROL BLOCK
         USING ANLCB,R9            ADDRESSABILITY              @BA63143
         OI    PRTSEL,HDREQ        SETUP HEADER SWITCH ON FIRST TIME
         OPEN  (INPUT,,PRINT,(OUTPUT)),MODE=31                     @Q1C
         TM    PRINT+48,X'10'      DID SYSPRINT OPEN?
         BO    SPOPEN              YES, WONDERFUL
         ABEND 112                 NO, THAT'S IT THEN
         SPACE
SPOPEN   DS    0H
         TM    INPUT+48,X'10'      DID INPUT OPEN?
         BO    IPOPEN              YES, THAT'S GOOD TOO
         PUT   PRINT,MSG113        OUTPUT ERROR MESSAGE
         ABEND 113
         SPACE
IPOPEN   DS    0H
         EJECT
DOCSETUP DS    0H                  GET THE CURRENT DATE AND TIME   @P8C
         BASR  R11,0                                           @BA63143
         USING *,R11               ADDRESSABILITY              @BA63143
         TIME  DEC,TIMEDATE,ZONE=LT,LINKAGE=SYSTEM,DATETYPE=DDMMYYYY   F
                                                                   @P8A
         DROP  R11                                             @BA63143
         MVC   DWD1(11),=X'4021206120206120202020'                 @PUC
         ED    DWD1(11),TIMEDATE+8 EDIT DATE                       @PUC
         MVC   HDRDATE(10),DWD1+1  SAVE DATE FOR HEADER            @PUC
         BASR  R11,0                                           @BA63143
         USING *,R11               ADDRESSABILITY              @BA63143
         TIME  DEC,TIMEDATE,ZONE=LT,LINKAGE=SYSTEM,DATETYPE=YYYYDDD    F
                                                                   @P8C
         DROP  R11                                             @BA63143
         MVC   DWD1(10),=X'40202020202061202020'                   @P8C
         ED    DWD1(10),TIMEDATE+8 EDIT DATE                       @P8A
         MVC   HDRJDATE(8),DWD1+2  SAVE DATE FOR HEADER            @P8C
         MVC   DWD1(9),=X'4020207A20207A2020'                      @P8C
         ED    DWD1(9),TIMEDATE    EDIT TIME                       @P8A
         MVC   HDRTIME(8),DWD1+1   SAVE TIME FOR HEADER            @P8C
         SPACE
         LA    R1,ANLCBA           POINT TO ANALYSIS CONTROL BLOCK
         L     R15,=A(DFH$MOL0)    CALL CONTROL CARD PROCESSOR
         BASSM R14,R15             READ AND PROCESS CONTROL CARDS  @Q1C
         SPACE ,                                                   @D5A
         LA    R0,0                RUN LENGTH ENCODING ALGORITHM   @D5A
         BASR  R11,0                                               @D5A
         USING *,R11               ADDRESSABILITY                  @D5A
         CSRCESRV SERVICE=QUERY    GET WORK AREA SIZE REQUIRED, IF ANY F
                                                                   @D5A
         DROP  R11                                                 @D5A
         LTR   R15,R15             QUERY SUCCESSFUL?               @D5A
         BNZ   NOCSRSRV            NO, COMPRESSION NOT AVAILABLE   @D5A
         LTR   R4,R1               ANY WORK AREA REQUIRED?         @D5A
         BNZ   WAREQD              YES, GETMAIN WORK AREA          @D5A
         MVI   CSRWAPTR,X'80'      INDICATE NO WORK AREA REQUIRED  @D5A
         B     NOWAREQD            AND CONTINUE                    @D5A
         SPACE ,                                                   @D5A
NOCSRSRV DS    0H                  UNEXPECTED CSRCESRV QUERY ERROR @D5A
         STCM  R15,15,WRK6         GET THE RETURN CODE             @D5C
         UNPK  WRK5(9),WRK6(5)     UNPACK IT                       @D5C
         TR    WRK5(8),HEXTAB-240  TRANSLATE THE RETURN CODE       @D5C
         MVC   MSG120RC(2),WRK5+6  INSERT RETURN CODE INTO MSG     @D5C
         SPACE ,                                                   @D5C
         PUT   PRINT,MSG120        OUTPUT ERROR MESSAGE            @D5C
         ABEND 120,DUMP            THEN ABEND WITH A DUMP          @D5A
         SPACE ,                                                   @D5A
WAREQD   DS    0H                                                  @D5A
         GETMAIN R,LV=(R4),SP=0,LOC=(31,64)                        @D7C
         ST    R1,CSRWAPTR         SAVE WORK AREA ADDRESS          @D5A
NOWAREQD DS    0H                                                  @D5A
         GETMAIN R,LV=32768,SP=0,LOC=(31,64)                       @Q1C
         ST    R1,CSRXAPLA         SAVE EXPANDED RECORD AREA       @D5A
         SPACE  ,                                                  @D5C
***********************************************************************
* IF THE EXPAND OPTION WAS REQUESTED, OPEN THE OUTPUT (SYSUT2)        *
* DATASET.                                                            *
***********************************************************************
         TM    SORTSW,EXPAND       EXPAND OPTION REQUESTED?        @D5A
         BZ    NOEXPAND            NO, CONTINUE                    @D5A
UT2OPEN  DS    0H                                                  @D5A
         OPEN  (SYSUT2,(OUTPUT)),MODE=31   OPEN THE EXPAND DATASET @Q1C
         TM    SYSUT2+48,X'10'     CHECK FOR SUCCESSFUL OPEN?      @D5A
         BO    UT2OPEND            YES, OK CONTINUE                @D5A
         LA    R4,SYSUT2           GET SYSUT2 DCB ADDRESS          @D5A
         MVC   MSG119+24(8),DCBDDNAM-IHADCB(R4)                    @D5A
         PUT   PRINT,MSG119        NO, OUTPUT ERROR MESSAGE        @D5A
         ABEND 119                                                 @D5A
         SPACE ,                                                   @D5A
UT2OPEND DS    0H                  SYSUT2 SUCCESSFULLY OPENED      @D5A
NOEXPAND DS    0H                                                  @D5A
***********************************************************************
* IF THE UNLOAD OPTION WAS REQUESTED, ALLOCATE THE STORAGE FOR THE    *
* OUTPUT RECORD AREA AND OPEN THE OUTPUT (SYSUT4) DATASET.            *
***********************************************************************
         SPACE  ,                                                  @P8A
         GETMAIN R,LV=MNPDRLEN,SP=0,LOC=(31,64)                    @Q1C
         ST    R1,UT4RADDR         SAVE OUTPUT RECORD STORAGE ADDRESS  F
                                                                   @P8A
         TM    SORTSW,UNLOAD       UNLOAD OPTION REQUESTED?        @PEA
         BZ    NOUNLOAD            NO, CONTINUE                    @D5C
         OPEN  (SYSUT4,(OUTPUT)),MODE=31   OPEN THE UNLOAD DATASET @Q1C
         TM    SYSUT4+48,X'10'     CHECK FOR SUCCESSFUL OPEN?      @P8A
         BO    UT4OPEND            YES, OK CONTINUE                @D5C
         LA    R4,SYSUT4           GET SYSUT4 DCB ADDRESS          @P8A
         MVC   MSG114+24(8),DCBDDNAM-IHADCB(R4)                    @P8A
         PUT   PRINT,MSG114        NO, OUTPUT ERROR MESSAGE        @P8A
         ABEND 114                                                 @P8A
         SPACE ,                                                   @PEA
UT4OPEND DS    0H                  SYSUT4 SUCCESSFULLY OPENED      @D5C
         BAL   LINK,DICTINIT       INITIALISE RECORD DICTIONARY    @PEA
NOUNLOAD DS    0H                                                  @D5A
         B     DOCSORT             AND CONTINUE                    @PEA
         EJECT ,                                                   @D5A
OPENEXIT DS    0F                  OPEN EXIT FOR SYSUT2            @D5A
         CNOP  0,4                 ALIGN TO FULLWORD               @D5A
         BRAS  R12,*+8             SKIP OVER AND ADDRESS ADCON     @D5A
         DC    A(MOLS_STATIC)      ADDRESS OF THE STATIC DATA      @D5A
         L     R12,0(,R12)         LOAD ADDRESS OF THE STATIC      @D5A
         USING MOLS_STATIC,R12     ADDRESSABILITY TO STATIC        @D5A
         SPACE ,                                                   @D5A
         BASR  R11,0                                               @D5A
         USING *,R11               ADDRESSABILITY                  @D5A
         SPACE ,                                                   @D5A
***********************************************************************
* DEFAULT DCB ATTRIBUTES                                              *
*   1. RECFM=VBS (AS SPECIFIED IN THE SYSUT2 DCB).                    *
*   2. LRECL AND BLKSIZE WILL BE COPIED FROM THE INPUT DCB AS WE'RE   *
*      EFFECTIVELY MAKING A COPY OF THE INPUT DATASET, JUST EXPANDING *
*      THE COMPRESSED RECORDS ON THE WAY.                             *
***********************************************************************
         LA    R4,SYSUT2           ADDRESS OF SYSUT2 DCB           @PVA
         LA    R15,INPUT           GET INPUT DCB ADDRESS           @PVA
         TM    SORTSW,NEWDCB       NEWDCB - USE DCB FROM JCL?      @D5A
         BO    DCBEXIT             YES - BUT ENSURE CORRECT LRECL  @PVC
*        DCB DEFAULT - Make SYSUT2=INPUT for LRECL and BLKSIZE
         MVC   DCBLRECL-IHADCB(2,R4),DCBLRECL-IHADCB(R15)          @PVA
         MVC   DCBBLKSI-IHADCB(2,R4),DCBBLKSI-IHADCB(R15)          @PVA
         BR    R14                 RETURN TO OPEN                  @PVA
         SPACE ,                                                   @PVA
***********************************************************************
* NEWDCB ATTRIBUTES                                                   *
*   1. RECFM=VBS (AS SPECIFIED IN THE SYSUT2 DCB).                    *
*   2. USE LRECL FROM JCL - BUT ENSURE THAT IF LRECL=0 (HAS OR HASN'T *
*      BEEN SPECIFIED) THAT WE THEN FORCE A DEFAULT OF 32767 (SAME    *
*      AS THAT USED BY IFASMFDP).                                     *
*   3. USE BLKSIZE FROM JCL, INCLUDING BLKSIZE=0.                     *
***********************************************************************
DCBEXIT  DS    0H                  NEWDCB - USE DCB FROM JCL       @PVA
         CLC   DCBLRECL-IHADCB(2,R4),=H'0'   LRECL SPECIFIED ?     @PVA
         BNER  R14                 YES,- RETURN TO OPEN            @PVA
         MVC   DCBLRECL-IHADCB(2,R4),DCBLRECL-IHADCB(R15)          @PVA
         BR    R14                 RETURN TO OPEN                  @PVA
         SPACE ,                                                   @D5A
         DROP  R11                                                 @D5A
         EJECT ,                                                   @D5C
***********************************************************************
*                                                                     *
*                      SORT INITIALISATION                            *
*                                                                     *
*    IF THIS IS A SORT PASS DFH$MOLS WILL LINK TO 'SORT'. SORT WILL   *
* PASS CONTROL TO E15 FOR DFH$MOLS TO PROVIDE INPUT RECORDS. SOME     *
* EDITING IS DONE IN EXIT E15 SUCH AS   SELECT ROUTINES. AT INPUT     *
* END OF FILE THE SORT WILL BE PERFORMED AND CONTROL WILL PASS TO     *
* E35 FOR DFH$MOLS TO ACCEPT THE SORTED DATA RECORDS. THE DFH$MOLS    *
* REPORTS ARE PRODUCED AT THIS TIME. WHEN SORT RETURNS TO DFH$MOLS    *
* THE RETURN CODE IS CHECKED AND CONTROL PASSES TO THE FINAL          *
* ROUTINES (EOJ).                                                     *
*                                                                     *
***********************************************************************
         SPACE
DOCSORT  DS    0H
         LA    R1,SORTPRMS         SORT PARAMETER LIST
         LINK  EP=SORT             CALL THE SORT
         LTR   R15,R15             WAS SORT SUCCESSFUL?
         BZ    SORTEND             YES, HANDLE AS END OF FILE
         SPACE
         STCM  R15,15,WRK6         GET THE RETURN CODE             @PUA
         UNPK  WRK5(9),WRK6(5)     UNPACK IT                       @PUA
         TR    WRK5(8),HEXTAB-240  TRANSLATE THE RETURN CODE       @PUA
         MVC   MSG103RC(2),WRK5+6  INSERT RETURN CODE INTO MSG     @PUA
         SPACE ,                                                   @PUA
         PUT   PRINT,MSG103        OUTPUT ERROR MESSAGE
         CLOSE (PRINT,,INPUT),MODE=31   CLOSE FILES                @Q1C
         ABEND 103,DUMP            INDICATE SORT FAILURE
         EJECT ,                                                   @PUC
***********************************************************************
*                                                                     *
*                      END OF JOB ROUTINES                            *
*                                                                     *
***********************************************************************
SORTEND  DS    0H                  END OF SUCCESSFUL SORT      @BA63143
         TM    READFLAG,RECSPROC   WAS A RECORD SELECTED?      @BA63143
         BO    LSTFIN              YES, CONTINUE               @BA63143
         TM    READFLAG,RECSREAD   WAS A RECORD READ?          @BA63143
         BO    REDNOTPR            YES, BUT                    @BA63143
         PUT   PRINT,MSG106        PRINT NO RECORDS READ       @BA63143
         CLOSE (PRINT,,INPUT),MODE=31  CLOSE FILES                 @Q1C
         ABEND 106                                             @BA63143
         SPACE  ,                                                  @PUC
REDNOTPR DS    0H                  CANCELLED DUE TO LACK OF INPUT  @PUC
         PUT   PRINT,MSG107        PRINT NO RECORDS SELECTED   @BA63143
         CLOSE (PRINT,,INPUT),MODE=31  CLOSE FILES                 @Q1C
         ABEND 107                                             @BA63143
         EJECT  ,                                                  @PUC
LSTFIN   DS    0H                                              @BA63143
ENDJOB   DS    0H                  CLEAN UP AND TERMINATE      @BA63143
         TM    SORTSW,UNLOAD       UNLOAD OPTION REQUESTED?    @BA63143
         BZ    ENDJOB1             NO, CONTINUE WITH CLEANUP   @BA63143
         TM    SYSUT4+48,X'10'     SYSUT4 OPENED OK?           @BA63143
         BNZ   ENDJOB1             NO, SKIP THE CLOSE          @BA63143
         CLOSE (SYSUT4),MODE=31    CLOSE THE UNLOAD OUTPUT DATA    @Q1C
ENDJOB1  DS    0H                                                  @D5C
         TM    SORTSW,EXPAND       EXPAND OPTION REQUESTED?        @D5A
         BZ    ENDJOB2             NO, CONTINUE WITH CLEANUP       @D5A
         TM    SYSUT2+48,X'10'     SYSUT2 OPENED OK?               @D5A
         BNZ   ENDJOB2             NO, SKIP THE CLOSE              @D5A
         CLOSE (SYSUT2),MODE=31    CLOSE THE EXPAND OUTPUT DATA    @Q1C
ENDJOB2  DS    0H                                                  @D5A
         LA    R1,ANLCBA           POINT TO ANALYSIS CNTL BLK  @BA63143
         L     R15,=A(DFH$MOL4)    CALL MONITORING RECORD TOTALS RTN   F
                                                               @BA63143
         BALR  R14,R15             PRINT FINAL TOTALS          @BA63143
         SPACE  ,                                                  @D5C
ENDJOB3  DS    0H                                                  @D5C
         CLOSE (PRINT,,INPUT),MODE=31  CLOSE FILES                 @Q1C
         SPACE  ,                                                  @D5C
         L     R13,SAVEAREA+4      RESTORE OPSYS R13           @BA63143
         LM    R14,R12,12(R13)     RESTORE REGS                    @Q1C
         SR    R15,R15             SET RETURN CODE             @BA63143
         BR    R14                                             @BA63143
         SPACE ,                                                   @D5C
         DROP  R9                                              @BA63143
 TITLE 'DFH$MOLS - INITIALISE PERFORMANCE RECORD DICTIONARY'   @BA63143
***********************************************************************
*                                                                     *
*           INITIALISE UNLOADED PERFORMANCE RECORD DICTIONARY         *
*                                                                     *
***********************************************************************
         SPACE ,                                                   @D5C
DICTINIT DS    0H                                              @BA63143
         L     R10,=A(DC3BEGIN)    ADDRESS OF THE RECORD DICTIONARY    F
                                                               @BA63143
         USING DICTNTRY,R10        ADDRESSABILITY              @BA63143
         SR    R1,R1               CLEAR FOR WORK              @BA63143
         LA    R15,DICNTRYS        NO. OF DICTIONARY ENTRIES   @BA63143
INITLOOP DS    0H                                              @BA63143
         STH   R1,CMODOFST         UPDATE PERF FIELD OFFSET    @BA63143
         AH    R1,CMODLENG         ADD LENGTH, OFFSET NEXT FLD @BA63143
         LA    R10,CMODNEXT        BUMP TO NEXT DICT ENTRY     @BA63143
         BCT   R15,INITLOOP        LOOP THRU RECORD DICTIONARY @BA63143
DICTRETN DS    0H                                              @BA63143
         BR    LINK                RETURN TO CALLER            @BA63143
         SPACE ,                                               @BA63143
         DROP  R10                                             @BA63143
         SPACE ,                                               @BA63143
DICNTRYS EQU   (DC3END-DC3BEGIN)/(CMODNEXT-DICTNTRY)           @BA63143
 TITLE 'DFH$MOLS - CICS MONITORING SAMPLE UTILITY PROGRAM'     @BA63143
***********************************************************************
*          STORAGE AREAS FOR PROGRAM                                  *
***********************************************************************
         SPACE ,                                                   @PUC
MOLS_STATIC DS 0F                  DFH$MOLS STATIC DATA        @BA63143
SAVEAREA DC    18F'0'              SAVE AREA                   @BA63143
         SPACE ,                                                   @PUC
SORTPRMS DS    0F                  ALIGN                       @BA63143
         DC    A(CTLSTMTS)         ADDRESS OF SORT CONTROL STATEMENTS  F
                                                               @BA63143
         DC    A(MOLS_E15)         ADDRESS OF E15 ROUTINE      @BA63143
         DC    A(MOLS_E35)         ADDRESS OF E35 ROUTINE      @BA63143
         DC    A(ANLCBA)           USER EXIT ADDRESS CONSTANT  @BA63143
         DC    F'-1'               INDICATE END OF PARM LIST   @BA63143
         SPACE ,                                               @BA63143
CTLSTMTS DS    0H                  SORT CONTROL STATEMENTS AREA@BA63143
         DC    AL2(CTL2-CTL1)      LENGTH OF CHARACTER STRING  @BA63143
CTL1     DC    C' SORT'                                        @BA63143
SORTFLDS DC    C' FIELDS='                                     @BA63143
         DC    C'(47,8,CH,A,23,2,BI,A,11,4,PD,A,7,4,BI,A) '    @BA63143
         DC    C' OPTION EQUALS,FILSZ=E10000,MAINSIZE=MAX '    @BA63143
         DC    C' RECORD TYPE=V,'                              @BA63143
         DC    C'LENGTH=(32756,,32756,66,24576,,) '                @07C
CTL2     EQU   *                   END OF SORT PARAMETER LIST  @BA63143
         SPACE ,                                                   @PUC
WRK5     DC    CL9' '              WORK AREA                       @PUC
WRK6     DC    CL5' '              WORK AREA                       @PUC
HEXTAB   DC    C'0123456789ABCDEF' PRINTABLE HEX VALUES            @PUC
DWD1     DC    2D'0'               DOUBLEWORD WORK AREA            @PUC
TIMEDATE DC    CL16' '             CURRENT TIME AND DATE           @PUC
OPENLIST DC    X'85'               END OF PARM, DCB OPEN EXIT      @D5A
         DC    AL3(OPENEXIT)       ADDRESS OF OPEN EXIT ROUTINE    @D5A
         SPACE ,                                                   @PUC
MSG103   DC    CL133' '                                            @PUC
         ORG   MSG103+1                                            @PUC
         DC    C' SORT ENDED WITH NON-ZERO RET CODE; RC='''        @PUA
MSG103RC DC    C'  '                                               @PUA
         DC    C'''; REPORT IS TERMINATED'                         @PUA
         ORG   ,                                                   @PUC
         SPACE ,                                                   @PUC
MSG106   DC    CL133' '                                            @PUC
         ORG   MSG106+1                                        @BA63143
         DC    CL133' NO VALID MONITORING RECORDS WERE READ; REPORT IS X
               TERMINATED'                                     @BA63143
         ORG   ,                                               @BA63143
         SPACE ,                                                   @PUA
MSG107   DC    CL133' '                                        @BA63143
         ORG   MSG107+1                                        @BA63143
         DC    CL133'NO MONITORING RECORDS WERE SELECTED FOR PROCESSINGX
               ; REPORT IS TERMINATED'                         @BA63143
         ORG   ,                                               @BA63143
         SPACE ,                                                   @PUA
MSG113   DC    CL133' '                                        @BA63143
         ORG   MSG113+1                                        @BA63143
         DC    CL133'UNABLE TO OPEN DDNAME ''INPUT''; REPORT IS TERMINAX
               TED'                                            @BA63143
         ORG   ,                                               @BA63143
         SPACE ,                                                   @PUA
MSG114   DC    CL133' '                                        @BA63143
         ORG   MSG114+1                                        @BA63143
         DC    CL133'UNABLE TO OPEN DDNAME ''SYSUT4  ''; REPORT IS TERMX
               INATED'                                         @BA63143
         ORG   ,                                               @BA63143
         SPACE ,                                                   @PUA
MSG119   DC    CL133' '                                            @D5A
         ORG   MSG119+1                                            @D5A
         DC    CL133'UNABLE TO OPEN DDNAME ''SYSUT2  ''; REPORT IS TERMX
               INATED'                                             @D5A
         ORG   ,                                                   @D5A
         SPACE ,                                                   @PUA
MSG120   DC    CL133' '                                            @D5A
         ORG   MSG120+1                                            @D5A
         DC    C'UNEXPECTED CSRCESRV FUNCTION=QUERY ERROR, '       @D5C
         DC    C'RC='''                                            @D5A
MSG120RC DC    C'  '                                               @D5A
         DC    C'''; REPORT IS TERMINATED'                         @D5A
         ORG   ,                                                   @D5A
         EJECT  ,                                                  @D5C
***************************************************************@BA63143
*         ANALYSIS CONTROL BLOCK SETUP AREA (MAPPED BY ANLCB)  @BA63143
***************************************************************@BA63143
         SPACE  ,                                                  @D5C
ANLCBA   DS    0D                  ANALYSIS CONTROL BLOCK      @BA63143
         DC    A(SIBLOCK)          FIRSTBLK                    @BA63143
         DC    A(SIBLOCK)          CURRBLK                     @BA63143
         DC    F'0'                SISW                        @BA63143
         DC    CL8' '              SIWORK                      @BA63143
         SPACE  ,                                              @BA63143
         DC    X'00'               PRINT OPTION BYTE           @BA63143
         DC    X'00'               PRINT OPTION BYTE 2             @06A
         DC    X'00'               RESERVED - SPARE                @06A
         DC    X'00'               RESERVED - SPARE                @06A
         SPACE ,                                                   @06A
         DC    X'00'               PROCESS OPTIONS                 @06A
         DC    X'00'               RESERVED - SPARE                @06A
         DC    X'00'               RECORD PROCESSING FLAG      @BA63143
         DC    X'00'               SORT OPTIONS                @BA63143
         SPACE  ,                                              @BA63143
         DC    F'0'                STOPAFT RECORD PROCESS LIMIT@BA63143
         DC    F'0'                RESERVED - SPARE            @BA63143
         SPACE  ,                                              @BA63143
         DC    F'0'                RECORD POINTER              @BA63143
         DC    A(INPUT)            INPUT DCB ADDRESS           @BA63143
         DC    A(PRINT)            OUTPUT DCB ADDRESS          @BA63143
         DC    A(SYSUT4)           SYSUT4 DCB ADDRESS          @BA63143
         DC    F'0'                SYSUT4 OUTPUT RECORD ADDRESS@BA63143
         SPACE ,                                                   @D5A
         DC    F'0'                COMPRESSION SERVICE WORK AREA   @D5A
         DC    F'0'                EXPANDED RECORD AREA ADDRESS    @D5A
         DC    A(32756-(SMFMNIDA-DFHSMFDS)) RECORD MAXIMUM LENGTH  @D5A
         DC    A(SYSUT2)           SYSUT2 DCB ADDRESS              @D5A
         SPACE  ,                                              @BA63143
         DC    H'55'               LINE COUNT / PAGE DEFAULT   @BA63143
         DC    H'0'                LINE COUNTER                @BA63143
         DC    X'00'               RESERVED - SPARE            @BA63143
         DC    PL3'0'              PAGE COUNTER                @BA63143
         DC    XL2'00'             RESERVED - SPARE            @BA63143
         DC    CL10'DD/MM/YYYY'    REPORT DATE - DD/MM/YYYY    @BA63143
         DC    CL8'YYYY/DDD'       REPORT DATE - YYYY/DDD FMT  @BA63143
         DC    CL8'HH:MM:SS'       REPORT TIME                 @BA63143
         SPACE  ,                                              @BA63143
         DC    PL4'9999999'        LOWEST INPUT RECORD DATE    @BA63143
         DC    FL4'-1'             LOWEST INPUT RECORD TIME    @BA63143
         DC    PL4'0'              HIGHEST INPUT RECORD DATE   @BA63143
         DC    FL4'0'              HIGHEST INPUT RECORD TIME   @BA63143
         SPACE  ,                                              @BA63143
         DC    PL4'0'              DATE FROM LAST INPUT RECORD @BA63143
         DC    FL4'0'              TIME FROM LAST INPUT RECORD @BA63143
         DC    CL8'0'              APPLID FROM LAST INPUT RECD @BA63143
         SPACE  ,                                              @BA63143
         DC    PL4'0'              LOWEST RECORD SELECT'N DATE @BA63143
         DC    FL4'0'              LOWEST RECORD SELECT'N TIME @BA63143
         DC    PL4'9999999'        HIGHEST RECORD SELECTN DATE @BA63143
         DC    FL4'-1'             HIGHEST RECORD SELECTN TIME @BA63143
         SPACE  ,                                              @BA63143
         DC    PL8'0'              SMF RECORDS READ            @BA63143
         DC    PL8'0'              SMF 110 RECORDS READ        @BA63143
         DC    PL8'0'              SMF 110 MONITORING RECORDS  @BA63143
         DC    PL8'0'              SMF 110 DICTIONARY RECORDS  @BA63143
         DC    PL8'0'              SMF 110 PERFORMANCE RECORDS READ    F
                                                               @BA63143
         DC    PL8'0'              SMF 110 EXCEPTION RECORDS   @BA63143
         DC    PL8'0'              SMF 110 RESOURCE RECORDS    @BA63143
         DC    PL8'0'              SMF 110 IDENTITY RECORD         @LMC
         DC    PL8'0'              SMF 110 RECORDS SELECTED        @LMA
         DC    PL8'0'              DICTIONARY RECORDS SELECTED @BA63143
         DC    PL8'0'              PERFORMANCE RECORDS         @BA63143
         DC    PL8'0'              PERFORMANCE RECDS SELECTED  @BA63143
         DC    PL8'0'              EXCEPTION RECORDS           @BA63143
         DC    PL8'0'              EXCEPTION RECORDS SELECTED  @BA63143
         DC    PL8'0'              RESOURCE RECORDS            @BA63143
         DC    PL8'0'              RESOURCE RECORDS SELECTED   @BA63143
         DC    PL8'0'              IDENTITY RECORDS                @LMA
         DC    PL8'0'              IDENTITY RECORDS SELECTED       @LMA
         DC    PL8'0'              PERFORMANCE RECDS UNLOADED  @BA63143
         DC    PL8'0'              SMF 110 RECORDS COPIED          @D5A
         DC    PL8'0'              SMF 110 RECORDS NOT COMPRESSED  @D5A
         EJECT  ,                                                  @D5C
***********************************************************************
*                  I/O FILE DECLARATIONS                              *
***********************************************************************
         SPACE  ,                                                  @D5C
INPUT    DCB   DDNAME=INPUT,DSORG=PS,MACRF=GL,BFTEK=A,                 X
               EODAD=ENDFILE                                       @Q1C
         SPACE 3                                               @BA63143
PRINT    DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=133   F
                                                               @BA63143
         SPACE 3                                               @BA63143
SYSUT4   DCB   DDNAME=SYSUT4,DSORG=PS,MACRF=PM,RECFM=FB,               X
               LRECL=MNPDRLEN                                  @BA63143
         SPACE 3                                                   @D5A
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,RECFM=VBS,LRECL=0,      X
               BLKSIZE=0,EXLST=OPENLIST                            @PVC
         SPACE  ,                                                  @PUC
         LTORG  ,                                                  @PUC
         EJECT  ,                                                  @PUC
***********************************************************************
*                                                                     *
*                      SORT INPUT EXIT                                *
*                                                                     *
*    READ INPUT RECORD, VALIDATE IT AND PASS IT TO SORT.              *
*    AT EOF, GO TO ENDFILE.                                           *
*                                                                     *
***********************************************************************
         SPACE  ,                                                  @PUC
MOLS_E15 CSECT  ,                                              @BA63143
MOLS_E15 AMODE 31                                                  @Q1C
MOLS_E15 RMODE ANY                                                 @Q1C
         ENTRY E15                                             @BA63143
         SPACE ,                                               @BA63143
E15      SAVE  (14,12)             SAVE CALLERS REGISTERS      @BA63143
         CNOP  0,4                 ALIGN TO FULLWORD           @BA63143
         BRAS  R12,*+8             SKIP OVER AND ADDRESS ADCON @BA63143
         DC    A(MOLS_E15_STATIC)  ADDRESS OF THE STATIC DATA  @BA63143
         L     R12,0(,R12)         LOAD ADDRESS OF THE STATIC  @BA63143
         USING MOLS_E15_STATIC,R12 ADDRESSABILITY TO STATIC    @BA63143
         STMH  R0,R15,E15SAVE2     SAVE TOP HALF REGISTERS         @Q1A
         SPACE ,                                               @BA63143
         ST    R13,E15SAVE+4       SAVE OLD SAVE AREA POINTER  @BA63143
         MVC   E15RC(4,R13),=F'12' SET SORT RC = ADD RECORD    @BA63143
         LA    R13,E15SAVE         POINT TO NEW SAVE AREA      @BA63143
         L     R9,4(,R1)           POINT TO ANALYSIS CNTL BLK  @BA63143
         USING ANLCB,R9            ADDRESSABILITY              @BA63143
READ     DS    0H                  **** READ ROUTINE ****      @BA63143
         L     R4,INPUTR           INPUT FILE DCB ADDRESS      @BA63143
         GET   (R4)                READ A RECORD               @BA63143
         LR    R4,R1               R4 NOW => DATA BLOCK        @BA63143
         USING DFHSMFDS,R4         MAP SMF HEADER AND PRODUCT SECTION  F
                                                               @BA63143
         AP    SMFRECS,=P'1'       COUNT SMF RECORDS READ      @BA63143
         CLI   SMFRTY,X'6E'        IS THIS A CICS SMF 110 RECOR@BA63143
         BNE   READ                NO ... READ NEXT RECORD     @BA63143
         AP    SMF110S,=P'1'       COUNT SMF 110 RECORDS READ  @BA63143
         CLC   SMFSTY(2),=X'0001'  IS THIS A MONITORING RECORD?@BA63143
         BNE   READ                NO ... THEN GET NEXT RECORD @BA63143
         CLC   SMFMNRVN,=XL2'0530' PRIOR TO CICS 5.3.0?            @D6A
         BL    READ                YES, READ NEXT RECORD           @D6A
* ************************************************************     @09A
* A macro is used here to allow the SMF version number to be       @09A
* used by this module from the GBLC &SMF.  This is needed          @09A
* because the CICS assembly process inserts a COPY DFHGDEFS at     @09A
* the start of the module, which is not present if the module      @09A
* is assembled separately from CICS.  This macro allows both       @09A
* methods of assembly.                                             @09A
* ************************************************************     @09A
         MACRO                                                     @09A
         LSMF  ,                                                   @09A
         GBLC  &SMF                                                @09A
         CLC   SMFMNRVN,=XL2'&SMF' RECORD FROM HIGHER RELEASE?     @D6A
         MEND                                                      @09A
         LSMF                                                      @09A
         BNH   READOK              NO, CONTINUE PROCESSING         @D6A
         B     READ                YES, READ NEXT RECORD           @D6A
         SPACE ,                                                   @D6C
READOK   DS    0H                                              @BA63143
         AP    SMF110MN,=P'1'      COUNT SMF 110 MONITORING REC@BA63143
         CLC   SMFMNCL,=X'0001'    DICTIONARY?                 @BA63143
         BE    READDREC            YES, COUNT DICTIONARY RECORD@BA63143
         CLC   SMFMNCL,=X'0003'    PERFORMANCE RECORD?         @BA63143
         BE    READPREC            YES, COUNT PERFORMANCE RECD @BA63143
         CLC   SMFMNCL,=X'0004'    EXCEPTION RECORD?           @BA63143
         BE    READEREC            YES, COUNT EXCEPTION RECORD @BA63143
         CLC   SMFMNCL,=X'0005'    RESOURCE RECORD?            @BA63143
         BE    READRREC            YES, COUNT RESOURCE RECORD  @BA63143
         CLC   SMFMNCL,=X'0006'    IDENTITY RECORD?                @LMA
         BE    READIREC            YES, COUNT IDENTITY RECORD      @LMA
         B     READCONT            ELSE CONTINUE               @BA63143
         SPACE ,                                                   @P8A
READDREC DS    0H                                                  @P8A
         AP    SMFDRECS,=P'1'      COUNT SMF 110 DICTIONARY RECORD @P8A
         B     READCONT            AND CONTINUE                    @P8A
         SPACE ,                                                   @P8A
READPREC DS    0H                                                  @P8A
         AP    SMFPRECS,=P'1'      COUNT SMF 110 PERFORMANCE RECORD    F
                                                                   @P8A
         B     READCONT            AND CONTINUE                    @P8A
         SPACE ,                                                   @P8A
READEREC DS    0H                                                  @P8A
         AP    SMFERECS,=P'1'      COUNT SMF 110 EXCEPTION RECORD  @P8A
         B     READCONT            AND CONTINUE                    @P8A
         SPACE ,                                               @BA63143
READRREC DS    0H                                              @BA63143
         AP    SMFRRECS,=P'1'      COUNT SMF 110 RESOURCE RECORD   @LMC
         B     READCONT            AND CONTINUE                @BA63143
         SPACE ,                                                   @LMA
READIREC DS    0H                                                  @LMA
         AP    SMFIRECS,=P'1'      COUNT SMF 110 IDENTITY RECORD   @LMA
         B     READCONT            AND CONTINUE                    @LMA
         SPACE ,                                                   @LMC
READCONT DS    0H                                                  @P8A
         ST    R4,REC_ADDR         STORE RECORD ADDRESS FOR SORT
         MVC   ESTAD(4),SMFDTE     SMF RECORD OUTPUT DATE          @P8C
         AP    ESTAD(4),=PL4'0'    ENSURE SIGN OF X'C'             @P8C
         MVC   ESTAT(4),SMFTME     SMF RECORD OUTPUT TIME
         MVC   ESTAA(8),SMFMNPRN   SMF RECORD APPLID
         MVC   ESTAC(2),SMFMNCL    SMF RECORD CLASS                @P6A
         OI    READFLAG,RECSREAD   FLAG AS VALID MONITORING RECORD
         EJECT  ,                                                  @P8C
***********************************************************************
*    THE FOLLOWING ADJUSTS THE EXECUTION TIME CODE IN RESPONSE TO THE *
* PRESENCE OR ABSENCE OF DATE SELECTION.                              *
***********************************************************************
         SPACE ,                                               @BA63143
         BASR  R11,0                                           @BA63143
         USING *,R11               ADDRESSABILITY              @BA63143
         NOP   REPDONE             ONE TIME SWITCH
         OI    *-3,X'F0'           BRANCH FOREVER AFTER
         CP    JDATEL,=PL4'0'      LOW DATE STILL AT DEFAULT?      @P8C
         BNE   NOREPSTA            NO, DON'T REPLACE START
         MVC   CLCSTART,REPSTART   YES, DO DIFFERENT COMPARE
NOREPSTA DS    0H                  LEAVE ASSEMBLED CODE
         CP    JDATEH,=P'9999999'  HIGH DATE STILL AT DEFAULT?     @P8C
         BNE   NOREPSTO            NO, DON'T REPLACE STOP
         MVC   CLCSTOP,REPSTOP     YES, DO DIFFERENT COMPARE
NOREPSTO DS    0H                  LEAVE ASSEMBLED CODE
REPDONE  DS    0H                  BYPASS ONE TIME CODE
         SPACE ,                                                   @PUC
         DROP  R11                                                 @PUC
         SPACE ,                                                   @PUC
***********************************************************************
*                                                                     *
*        CICS MONITORING SMF RECORD PRE-SORT SELECTION TESTS          *
*                                                                     *
*    SELECT RECORDS BASED ON STOPAFT LIMIT, DATE AND TIME. RECORD     *
* LOWEST AND HIGHEST INPUT RECORD DATE AND TIME. THEN SELECT/IGNORE   *
* ON GENERIC APPLID ONLY IF SELECTS AND/OR IGNORES WERE INPUT. IF     *
* IT'S A DICTIONARY RECORD, BYPASS THE TIME CHECK (WE ALWAYS PROCESS  *
* A DICTIONARY) AND ALSO DO NOT UPDATE THE LOW/HIGH DATE TIME FIELDS. *
***********************************************************************
         SPACE
PRE_SELECT DS  0H                  CICS MN RECORD PRE-SELECTION
         L     R7,FIRSTBLK         GET FIRST SIBLOCK
         USING SIBLOCK,R7          USE R7 FOR BASE REG
PRE_SELSTOP DS 0H                  CHECK FOR STOPAFT LIMIT EXCEEDED
         TM    PROCESSW,SELSTOP    IS STOPAFT ACTIVE?
         BZ    PRE_SELTEST         NO, TEST FOR DATE/TIME SELECTION
         L     R5,STOPFLD          GET STOPAFT VALUE               @P8C
         LTR   R5,R5               IS THERE A NEED TO STOP         @P8C
         BZ    ENDFILE             YES, IT'S END OF FILE THEN      @P8C
         BCTR  R5,0                DROP ONE                        @P8C
         ST    R5,STOPFLD          SAVE NEW VALUE                  @P8C
PRE_SELTEST DS 0H                  CHECK FOR DATE/TIME SELECTION
         CLC   ESTAC,=X'0001'      IS IT A DICTIONARY RECORD?      @P8A
         BE    PRE_SELECTOK        YES, BYPASS TIME, LOW/HIGH CHECK@PXC
         TM    SELSWTCH+1,SELTIME  IS DATE/TIME SELECTION ACTIVE?
         BZ    PRE_SELECTOK        NO, THEN RECORD PASSES
CLCSTART CLC   ESTADT,JSSTART      BEFORE SELECT START             @P8C
         BL    READ                YES, SKIP THIS RECORD
CLCSTOP  CLC   ESTADT,JSEND        AFTER SELECT STOP               @P8C
         BH    READ                YES, SKIP THIS RECORD
PRE_SELECTOK DS  0H                WE HAVE SELECTED THIS RECORD
         CLC   LOWDT,ESTADT        IS THIS A NEW LOW
         BL    NOTNEWLO            NO,
         MVC   LOWDT,ESTADT        YES, ESTABLISH NEW LOW
NOTNEWLO DS    0H
         CLC   HIDT,ESTADT         IS THIS A NEW HIGH
         BH    NOTNEWHI            NO,
         MVC   HIDT,ESTADT         YES, ESTABLISH NEW HIGH
NOTNEWHI DS    0H
         TM    PROCESSW,SELECTFD+IGNOREFD  ANY SELECTS OR IGNORES?
         BZ    APPLID_SELECTOK     NO, SELECT EVERYTHING BY DEFAULT
         XC    SISW,SISW           CLEAR SELECT/IGNORE FLAG
         MVC   DWD,=CL8' '         PAD SELECT COMPARE AREA
         MVC   DWD(L'ESTAA),ESTAA  AGAINST GENERIC APPLID
SINEXTBK_APPLID DS  0H
         XC    SISW2,SISW2         CLEAR HIT/MISS GROUP FLAG
         TM    SISW1,SELECTFD      ARE THERE ANY SELECTS?
         BZ    NOSELECT_APPLID     NO, THEN SELECT BY DEFAULT
CHKSAPPL_APPLID DS  0H             CHECK FOR SELECT GENERIC APPLIDS
         TM    SELSWTCH,SELAPPL    IS APPLID SELECT ACTIVE?
         BZ    ECHKSAPL_APPLID     NO,
         L     R4,SAIDCHN          POINT TO CHAIN OF SELECT APPLIDS
         BAL   LINK,APPLID_SCAN    SCAN CHAIN FOR EQUAL
         B     SIGETNXT_APPLID     WE MISSED, TRY ANOTHER GROUP
         OI    SISW2,SELHIT        REMEMBER HIT
         B     ECHKSAPL_APPLID     AND CONTINE CHECKING
         SPACE ,                                                   @PXA
ECHKSAPL_APPLID DS  0H             OK -
         OI    SISW,SELHIT         NO, THEN THIS GROUP SELECTED HIM
         B     IGNORE_APPLID       THEN PROCESS ANY IGNORES
         SPACE ,                                                   @PXC
NOSELECT_APPLID DS  0H
         TM    SISW1,IGNOREFD      ARE THERE ANY IGNORES?
         BZ    SIGETNXT_APPLID     NO, CHECK FOR MORE GROUPS
         OI    SISW2,SELHIT        SELECT BY DEFAULT
         OI    SISW,SELHIT         SELECT BY DEFAULT
IGNORE_APPLID   DS  0H
         TM    SISW1,IGNOREFD      ARE THERE ANY IGNORES?
         BZ    SIGETNXT_APPLID     NO, CHECK FOR MORE GROUPS
         TM    SISW2,SELHIT        HAVE WE BEEN SELECTED?
         BZ    SIGETNXT_APPLID     NO, CHECK FOR MORE GROUPS
CHKIAPPL_APPLID DS  0H             CHECK FOR IGNORE GENERIC APPLIDS
         TM    SELSWTCH,IGNAPPL    IS APPLID IGNORE ACTIVE?
         BZ    ECHKIAPL_APPLID     NO,
         L     R4,IAIDCHN          POINT TO CHAIN OF IGNORE APPLIDS
         BAL   LINK,APPLID_SCAN    SCAN CHAIN FOR EQUAL
         B     *+12                NO HIT RETURN
         OI    SISW2,IGNHIT        REMEMBER HIT
         B     ECHKIAPL_APPLID     AND CONTINE CHECKING
         OI    SISW2,IGNMIS        REMEMBER THAT WE MISSED
ECHKIAPL_APPLID DS  0H             OK -
         TM    SISW2,IGNHIT        WERE WE IGNORED?
         BZ    SIGETNXT_APPLID     NO, TRY ANOTHER GROUP
         OI    SISW,IGNHIT         THIS GROUP IGNORED HIM
         B     SISELECT_APPLID     GO DECIDE WHAT TO DO
         SPACE ,                                                   @PXC
SIGETNXT_APPLID DS  0H             CHECK ENTIRE BLOCK
         L     R7,NEXTBLK          POINT TO NEXT BLOCK/GROUP
         LTR   R7,R7               WAS BLOCK/GROUP THERE?
         BNZ   SINEXTBK_APPLID     YES, GO PROCESS IT
SISELECT_APPLID DS  0H
         TM    SISW,SELHIT         WERE WE SELECTED?
         BZ    READ                NO, IGNORE THIS RECORD
         TM    SISW,IGNHIT         WERE WE IGNORED?
         BNZ   READ                YES, IGNORE THIS RECORD
APPLID_SELECTOK DS  0H             WE HAVE SELECTED THIS RECORD
         OI    READFLAG,RECSPROC   FLAG AS SELECTED RECORD         @PXA
         AP    SMF110OK,=P'1'      COUNT SMF 110 RECORDS SELECTED  @P8A
         B     E15RTN              YES, INSERT RECORD FOR SORT
         SPACE ,                                                   @PXC
E15RTN   DS    0H                  E15 SORT EXIT - RETURN TO SORT
         LMH   R0,R15,E15SAVE2     RESTORE TOP HALF REGISTERS      @Q1A
         L     R13,E15SAVE+4       RESTORE SAVE AREA POINTER
         MVC   E15R1(4,R13),REC_ADDR   RECORD ADDRESS FROM SORT
         LM    R14,R12,12(R13)     RESTORE CALLERS REGISTERS
         BR    R14                 RETURN TO SORT
         SPACE ,                                                   @PXC
         DROP  R4,R7                                           @BA63143
         SPACE ,                                                   @PXC
APPLID_SCAN DS  0H                 SCAN APPLID CHAINS
APPLID_RESC DS  0H
         SR    R5,R5               CLEAR WORK
         IC    R5,0(R4)            GET ACTIVE ENTRY COUNT
         LA    R6,4(R4)            POINT TO FIRST OPERAND
APPLID_LOOP DS  0H
         CLC   DWD,0(R6)           IS IT A MATCH?
         BE    4(LINK)             YES, RETURN TO CALLER
         LA    R6,8(R6)            BUMP TO NEXT OPERAND
         BCT   R5,APPLID_LOOP      LOOK AT NEXT OPERAND
         OC    1(3,R4),1(R4)       IS CHAIN POINTER CONTINUED? @BA63143
         BCR   8,LINK              NO, THEN RETURN             @BA63143
         L     R4,0(R4)            POINT TO NEXT               @BA63143
         B     APPLID_RESC         KEEP IT UP                  @BA63143
         EJECT ,                                                   @D5C
***********************************************************************
*                                                                     *
*                      END OF JOB ROUTINES                            *
*                                                                     *
***********************************************************************
         SPACE  ,                                                  @D5C
ENDFILE  DS    0H                  INPUT DATA SET END OF FILE  @BA63143
         B     E15EODAD            RETURN TO E15 EXIT          @BA63143
         SPACE  ,                                                  @D5C
E15EODAD DS    0H                                              @BA63143
         LMH   R0,R15,E15SAVE2     RESTORE TOP HALF REGISTERS      @Q1A
         L     R13,E15SAVE+4       RESTORE SAVE AREA POINTER   @BA63143
         LM    R14,R12,12(R13)     RESTORE CALLERS REGISTERS   @BA63143
         LA    R15,8               SET DFSORT RETURN CODE = EOF@BA63143
         BR    R14                 RETURN TO SORT              @BA63143
 TITLE 'DFH$MOLS - CICS MONITORING SAMPLE UTILITY PROGRAM'     @BA63143
***********************************************************************
*          STORAGE AREAS FOR PROGRAM                                  *
***********************************************************************
         SPACE  ,                                                  @D5C
MOLS_E15_STATIC DS 0F              DFH$MOLS E15 STATIC DATA    @BA63143
E15SAVE  DC    18F'0'              SORT EXIT 15 SAVE AREA      @BA63143
E15SAVE2 DC    18F'0'              SORT EXIT 15 SAVE AREA 2        @Q1A
         SPACE ,                                               @BA63143
E15RC    EQU   16                                              @BA63143
E15R1    EQU   24                  E15 SAVE AREA REG 1         @BA63143
         SPACE ,                                               @BA63143
DWD      DC    D'0'                DOUBLWORD WORK AREA         @BA63143
REPSTART CLC   ESTAT,JSTART        FOR TIME ONLY SELECTION     @BA63143
REPSTOP  CLC   ESTAT,JEND          FOR TIME ONLY SELECTION     @BA63143
         SPACE  ,                                              @BA63143
ESTADT   DS    0CL8                EFFECTIVE RECD DATE & TIME  @BA63143
ESTAD    DC    PL4'0'              EFFECTIVE RECORD DATE       @BA63143
ESTAT    DC    FL4'0'              EFFECTIVE RECORD TIME       @BA63143
ESTAA    DC    CL8' '              EFFECTIVE RECORD APPLID     @BA63143
ESTAC    DC    XL2'00'             EFFECTIVE RECORD CLASS      @BA63143
         SPACE ,                                               @BA63143
         DROP  R9                                              @BA63143
         SPACE ,                                               @BA63143
         LTORG ,                                               @BA63143
         EJECT
***********************************************************************
*                                                                     *
*                      SORT OUTPUT EXIT                               *
*                                                                     *
*    ACCEPT SORTED RECORDS AND PRODUCE THE DFH$MOLS REPORTS. AT EOF   *
* GO TO E35EODAD. SORT WILL THEN RETURN CONTROL TO THE CALLER.        *
*                                                                     *
***********************************************************************
         SPACE
MOLS_E35 CSECT  ,                                              @BA63143
MOLS_E35 AMODE 31                                                  @Q1C
MOLS_E35 RMODE ANY                                                 @Q1C
         ENTRY E35                                             @BA63143
         SPACE ,
E35      SAVE  (14,12)             SAVE CALLERS REGISTERS      @BA63143
         CNOP  0,4                 ALIGN TO FULLWORD           @BA63143
         BRAS  R12,*+8             SKIP OVER AND ADDRESS ADCON @BA63143
         DC    A(MOLS_E35_STATIC)  ADDRESS OF THE STATIC DATA  @BA63143
         L     R12,0(,R12)         LOAD ADDRESS OF THE STATIC  @BA63143
         USING MOLS_E35_STATIC,R12 ADDRESSABILITY TO STATIC    @BA63143
         STMH  R0,R15,E35SAVE2     SAVE TOP HALF REGISTERS         @Q1A
         SPACE ,
         ST    R13,E35SAVE+4       SAVE OLD SAVE AREA POINTER  @BA63143
         MVC   E15RC(4,R13),=F'4'  SET SORT RC = DELETE RECORD @BA63143
         LA    R13,E35SAVE         POINT TO NEW SAVE AREA      @BA63143
         L     R9,8(,R1)           POINT TO ANALYSIS CONTROL BLOCK
         USING ANLCB,R9            ADDRESSABILITY
         L     R7,0(R1)            GET CURRENT RECORD ADDRESS
         LTR   R7,R7               WAS A RECORD PASSED
         BZ    E35EODAD            NO,
         ST    R7,REC_ADDR         SAVE CURRENT RECORD ADDRESS
         USING DFHSMFDS,R7         ADDRESSABILITY
         L     R6,PRINTR           GET PRINT DCB ADDRESS           @D5A
         SPACE ,                                                   @D5A
***********************************************************************
***      COMPRESSED RECORD EXPAND USING CSRCESRV                    ***
***********************************************************************
         SPACE ,                                                   @D5A
         CLC   SMFMNCRL,=XL2'0'    HAS RECORD BEEN COMPRESSED?     @D5A
         BE    NOCOMPRS            NO, BYPASS RECORD EXPAND        @D5A
EXPANDDS DS    0H                  EXPAND THE SMF DATA SECTION     @D5A
         L     R4,CSRXAPLA         ADDRESS OF EXPANDED RECORD AREA @D5A
         MVC   0(SMFMNIDA-DFHSMFDS,R4),0(R7)   COPY SMF HEADER     @D5A
         SPACE ,                                                   @D5A
         STM   R2,R5,CSRSAVE       SAVE REGS USED BY CSRCESRV SERVICE  F
                                                                   @D5A
         L     R1,CSRWAPTR         CSR WORK AREA (OR ZREO)         @D5A
         L     R2,REC_ADDR         CURRENT RECORD ADDRESS          @D5A
         A     R2,SMFASS           INPUT:  PTR TO COMPRESSED DATA  @D5A
         SR    R3,R3                                               @D5A
         LH    R3,SMFASL                   DATA SECTION LENGTH     @D5A
         L     R4,CSRXAPLA         OUTPUT: PTR TO EXPANDED DATA    @D5A
         A     R4,SMFASS                   ADD OFFSET TO DATA SECTION  F
                                                                   @D5A
         L     R5,CSRXAPLL                 EXPANDED AREA LENGTH    @D5A
         BASR  R11,0                                               @D5A
         USING *,R11               ADDRESSABILITY                  @D5A
         CSRCESRV SERVICE=EXPAND   EXPAND COMPRESSED DATA SECTION  @D5A
         DROP  R11                 FINISHED WITH ADDRESSABILITY    @D5A
         L     R14,CSRXAPLL        EXPAND AREA LENGTH              @D5A
         SR    R14,R5              CALCULATE LENGTH OF EXPANDED DATA   F
                                                                   @D5A
         LM    R2,R5,CSRSAVE       RESTORE REGS USED BY CSRCESRV   @D5A
         LTR   R15,R15             EXPAND WAS SUCCESSFUL?          @D5A
         BZ    EXPAND_Y            YES, CONTINUE UPDATE HEADER     @D5A
         B     EXPAND_N            NO, THAT'S NOT SO GOOD          @D5A
         SPACE ,                                                   @D5A
EXPAND_Y DS    0H                                                  @D5A
         L     R7,CSRXAPLA         EXPANDED DATA AREA              @D5A
         ST    R7,REC_ADDR         POINT TO EXPANDED RECORD AREA   @D5A
         STH   R14,SMFASL          UPDATE DATA SECTION LENGTH      @D5A
         L     R2,=A(SMFMNIDA-DFHSMFDS) SMF HDR AND PS LENGTH      @D5A
         AR    R2,R14              ADD EXPANDED DATA SECTION LENGTH    F
                                                                   @D5A
         STH   R2,SMFLEN           UPDATE SMF RECORD LENGTH        @D5A
         B     MAINLINE            AND CONTINUE                    @D5A
         SPACE ,                                                   @D5A
EXPAND_N DS    0H                  EXPAND WAS NOT SUCCESSFUL       @D5A
         STCM  R15,15,WRK4         GET THE RETURN CODE             @D5A
         UNPK  WRK3(9),WRK4(5)     UNPACK IT                       @D5A
         TR    WRK3(8),TRTAB2-240  TRANSLATE THE RETURN CODE       @D5A
         MVC   MSG118RC(2),WRK3+6  INSERT RETURN CODE INTO MSG     @D5A
         SPACE ,                                                   @D5A
         PUT   (R6),MSG118         OUTPUT ERROR MESSAGE            @D5A
         ABEND 118,DUMP            THEN ABEND WITH A DUMP          @D5A
         SPACE ,                                                   @D5A
NOCOMPRS DS    0H                  RECORD NOT COMPRESSED           @D5A
         AP    SMF110NC,=P'1'      COUNT RECORDS NOT COMPRESSED    @D5A
MAINLINE DS    0H                                                  @D5C
         LR    R1,R9               POINT TO ANALYSIS CONTROL BLOCK @D5A
         L     R15,=A(DFH$MOL1)    CALL MONITORING RECORD PROCESSOR    F
                                                                   @D5A
         BALR  R14,R15             PROCESS MONITORING RECORD       @D5A
         SPACE  ,                                                  @D5A
         TM    SORTSW,EXPAND       COPY EXPANDED RECORD REQUESTED? @D5A
         BZ    SKIPCOPY            NO, SKIP IT THEN                @D5A
***********************************************************************
***      EXPANDED RECORD WRITE ROUTINE                              ***
***********************************************************************
         SPACE ,                                                   @D5A
XPNDPROC DS    0H                                                  @D5A
         L     R7,REC_ADDR         GET SMF RECORD ADDRESS          @D5A
         MVC   SMFMNCRL(2),=XL2'0' RECORD IS NOT COMPRESSED        @D5A
         L     R8,SYSUT2R          GET SYSUT2 DCB ADDRESS          @D5A
         PUT   (R8),(R7)           WRITE EXPANDED RECORD           @D5A
         AP    UT2RECS,=P'1'       COUNT RECORDS COPIED            @D5A
SKIPCOPY DS    0H                                                  @D5A
         B     E35RTN              GET NEXT RECORD FROM SORT       @D5C
         EJECT
E35RTN   DS    0H                  E35 SORT EXIT - RETURN TO SORT  @Q1C
         LMH   R0,R15,E35SAVE2     RESTORE TOP HALF REGISTERS      @Q1A
         L     R13,E35SAVE+4       RESTORE SAVE AREA POINTER       @D5C
         LM    R14,R12,12(R13)     RESTORE CALLERS REGISTERS
         BR    R14                 RETURN TO SORT
         SPACE
E35EODAD DS    0H                  END OF OUTPUT RECORDS
         LMH   R0,R15,E35SAVE2     RESTORE TOP HALF REGISTERS      @Q1A
         L     R13,E35SAVE+4       RESTORE SAVE AREA POINTER   @BA63143
         LM    R14,R12,12(R13)     RESTORE CALLERS REGISTERS   @BA63143
         LA    R15,8               SET DFSORT RETURN CODE = EOF@BA63143
         BR    R14                 RETURN TO SORT              @BA63143
  TITLE 'DFH$MOLS - CICS MONITORING SAMPLE UTILITY PROGRAM'    @BA63143
***********************************************************************
*          STORAGE AREAS FOR PROGRAM                                  *
***********************************************************************
         SPACE  ,                                                  @PUC
MOLS_E35_STATIC DS 0F              DFH$MOLS E35 STATIC DATA    @BA63143
E35SAVE  DC    18F'0'              SORT EXIT 35 SAVE AREA      @BA63143
E35SAVE2 DC    18F'0'              SORT EXIT 35 SAVE AREA 2        @Q1A
CSRSAVE  DC    5F'0'               COMPRESSION SERVICE SAVE AREA   @D5A
         SPACE ,                                                   @D5A
MSG118   DC    CL133' '                                            @D5A
         ORG   MSG118+1                                            @D5A
         DC    C'UNABLE TO EXPAND A COMPRESSED RECORD, RC='''      @D5A
MSG118RC DC    CL2'  '                                             @D5A
         DC    C'''; REPORT IS TERMINATED'                         @D5A
         ORG   ,                                                   @D5A
         SPACE ,                                                   @D5A
         DS    0D                                                  @D5A
WRK3     DC    CL9' '              WORK AREA                       @D5A
WRK4     DC    CL5' '              WORK AREA                       @D5A
TRTAB2   DC    C'0123456789ABCDEF'                                 @D5A
         SPACE ,                                                   @D5C
         DROP  R7                                                  @D5C
         SPACE ,                                                   @D5C
         LTORG ,                                                   @D5C
         TITLE 'DFH$MOL1 - MONITORING RECORD PRINT ROUTINE'
***********************************************************************
*                  MONITORING RECORD PRINT ROUTINE                    *
***********************************************************************
         SPACE
DFH$MOL1 CSECT
DFH$MOL1 AMODE 31                                                  @Q1C
DFH$MOL1 RMODE ANY                                                 @Q1C
         ENTRY DFH$MOL1
         SAVE  (14,12)             SAVE CALLERS REGISTERS
         CNOP  0,4                 ALIGN TO FULLWORD           @BA63143
         BRAS  R12,*+8             SKIP OVER AND ADDRESS ADCON @BA63143
         DC    A(MOL1_STATIC)      ADDRESS OF THE STATIC DATA  @BA63143
         L     R12,0(,R12)         LOAD ADDRESS OF THE STATIC  @BA63143
         USING MOL1_STATIC,R12     ADDRESSABILITY TO STATIC    @BA63143
         SPACE ,                                               @BA63143
         ST    R13,MOL1SAVE+4      SAVE BACKWARD POINTER
         LA    R13,MOL1SAVE        MY SAVE AREA
         LR    R9,R1               LOAD PARAMETER AREA ADDRESS
         USING ANLCB,R9            ADDRESSABILITY
         L     R8,PRINTR           GET PRINT DCB ADDRESS
         L     R7,REC_ADDR         GET SMF RECORD ADDRESS
         USING DFHSMFDS,R7         ADDRESSABILITY
         CLC   SMFMNCL,=X'0001'    DICTIONARY?
         BE    DIC_DATA            YES, CHECK FOR PROCESSING       @P8C
         CLC   SMFMNCL,=X'0003'    PERFORMANCE RECORD(S)?
         BE    PER_DATA            YES, CHECK FOR PROCESSING
         CLC   SMFMNCL,=X'0004'    EXCEPTION RECORD?
         BE    EXC_DATA            YES, CHECK FOR PROCESSING
         CLC   SMFMNCL,=X'0005'    RESOURCE RECORD?            @BA63143
         BE    RES_DATA            YES, CHECK FOR PROCESSING   @BA63143
         CLC   SMFMNCL,=X'0006'    IDENTITY RECORD?                @LMA
         BE    IDN_DATA            YES, CHECK FOR PROCESSING       @LMA
         B     SMFRTN              OTHERWISE PROCESS REGARDLESS
         SPACE
DIC_DATA DS    0H                  DICTIONARY RECORD(S)            @P8C
         TM    PRTSEL,PRTDIC       PRINT DICTIONARY RECORDS?       @P8C
         BO    SMFRTN              YES, PROCESS IT/THEM            @P8C
         TM    PRTSEL,PRTPER       PRINT PERFORMANCE RECORDS?      @P9A
         BO    PSRTNEND            YES, MUST PROCESS DICTIONARY    @P9A
         TM    SORTSW,UNLOAD       NO, WAS UNLOAD OPTION REQUESTED?    F
                                                                   @P8A
         BO    PSRTNEND            YES, MUST PROCESS DICTIONARY    @P8A
         B     SSEXIT              NO, GET THE NEXT RECORD         @P8C
         SPACE ,                                                   @PXA
PER_DATA DS    0H                  PERFORMANCE RECORD(S)           @P8A
         TM    PRTSEL,PRTPER       PRINT PERFORMANCE RECORDS?      @P8A
         BO    SMFRTN              YES, PROCESS IT/THEM            @P8A
         TM    SORTSW,UNLOAD       NO, WAS UNLOAD OPTION REQUESTED?    F
                                                                   @P8A
         BO    PSRTNEND            YES, MUST PROCESS THE RECORD    @P8A
         B     SSEXIT              NO, GET THE NEXT RECORD         @P8A
         SPACE ,                                                   @PXA
EXC_DATA DS    0H                  EXCEPTION RECORD
         TM    PRTSEL,PRTEXC       PRINT EXCEPTION RECORDS?
         BO    SMFRTN              YES, PROCESS IT
         B     SSEXIT              NO, GET THE NEXT RECORD
         SPACE ,                                                   @PXA
RES_DATA DS    0H                  RESOURCE RECORD(S)              @LMC
         TM    PRTSEL,PRTRES       PRINT RESOURCE RECORDS?     @BA63143
         BO    SMFRTN              YES, PROCESS IT/THEM        @BA63143
         B     SSEXIT              NO, GET THE NEXT RECORD     @BA63143
         SPACE ,                                                   @LMA
IDN_DATA DS    0H                  IDENTITY RECORD(S)              @LMA
         TM    PRTSEL,PRTIDN       PRINT IDENTITY RECORDS?         @LMA
         BO    SMFRTN              YES, PROCESS IT/THEM            @LMA
         B     SSEXIT              NO, GET THE NEXT RECORD         @LMA
         EJECT
***********************************************************************
*        SET UP AND PRINT SMF AND PRODUCT SECTION HEADERS             *
*                  PART 1.   THE SMF HEADER                           *
***********************************************************************
         SPACE
SMFRTN   DS    0H                  *** SMF HEADER ROUTINE ***
         LA    R6,PRTLINE          ADDRESS PRINT BUILD AREA        @P8C
         USING PRTDSCT,R6          MAP THE PRINTLINE WITH PRINT LAYOUTS
         MVI   STARS,C'1'          SET PRINT CONTROL CHAR          @P8C
         PUT   (R8),STARS
         MVI   STARS,C' '          UNSET PRINT CONTROL CHAR
         MVC   PRTAREA,SPACE       CLEAR THE PRINT LINE            @P8C
         MVC   PTITLE,SMFHDR       SAY SMF HEADER
*                                  PRINT TIME STAMP ON SMF HEADER
         MVC   PTIMEH,DTIMEH       MOVE TIME HEADER
         SR    R0,R0               CLEAR WORK REGISTER
         ICM   R1,15,SMFTME        GET TIME VALUE FROM RECORD
         D     R0,F6THOU           DIVIDE BY 60 THOUSAND
         LR    R3,R0               STORE REMAINDER
         SR    R0,R0               CLEAR WORK REGISTER
         D     R0,F6TY             DIVIDE BY 60 MINS->HRS
         LR    R2,R1               STORE HOURS
         LR    R1,R0
         M     R0,F10THOU          SHIFT MINS 4 PLACES LEFT
         ALR   R3,R1               SET MINS TO LEFT OF SECS
         LR    R1,R2
         M     R0,F1MIL            MOVE HRS 6 PLACES LEFT
         ALR   R3,R1               SET HOURS TO LEFT OF MINS
         CVD   R3,WRK1             CONVERT TO DECIMAL
         LM    R0,R1,WRK1
         IC    R2,WRK1+7
         SLDL  R0,4
         STM   R0,R1,WRK1
         STC   R2,WRK1+7
         MVC   PTIMED,=X'4021207A20207A20204B2020'   EDIT MASK
         ED    PTIMED,WRK1+3       EDIT IN TIME FIELD
*                                  PRINT DATE STAMP ON SMF HEADER
         MVC   PDATEH,DDATEH       MOVE DATE STAMP
         MVC   PDATED,=X'402120202061202020'   EDIT MASK           @P8C
         MVC   DTEWK,SMFDTE        COPY SMF DATE FIELD             @P8A
         AP    DTEWK,=PL4'1900000' ADD IN CENTURY                  @P8A
         ED    PDATED,DTEWK        EDIT IN DATE FIELD              @P8C
         MVC   PSYSIDH,DSYSIDH     PUT IN SYSTEM ID
         MVC   PSYSIDD(L'SMFSID),SMFSID
         MVC   PSSYSIDH,DSSYSIDH   MOVE IN SUB-SYSTEM ID
         MVC   PSSYSIDD(L'SMFSSI),SMFSSI
         MVC   POSYSIDH,DOSYSIDH   MOVE IN OP-SYSTEM ID
         UNPK  POSYSIDD(3),SMFFLG(2)
         TR    POSYSIDD(3),TRTABLE TRANSLATE OUTPUT                @P8C
         MVI   POSYSIDD+2,C''''
         MVC   POSYSIDD+3(9),=C'(MVS/ESA)'  INDICATE MVS/ESA
SMRXXOP1 DS    0H
         MVI   PEND0,C'*'
         PUT   (R8),PRTLINE                                        @P8C
         SPACE 1
* LINE 2
         MVC   PRTAREA,SPACE       CLEAR PRINT LINE                @P8C
         MVC   PTITLE,SECASTRX
*                                  PUT RECORD TYPE INTO OUTPUT
         MVC   PRTYPH,DRTYPH       HEADING FOR SUBTYPE
         LA    R1,PRTYPD           POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         SR    R1,R1
         IC    R1,SMFRTY
         STH   R1,HLFWD
         LA    R1,HLFWD            POINT TO INPUT FIELD
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HWORD FORMAT RTN
         SPACE 1
*                                  PUT RECORD SUBTYPE INTO OUTPUT
         MVC   PRSTYPH,DRSTYPH     HEADING FOR SUBTYPE
         LA    R1,PRSTYPD          POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFSTY           POINT TO INPUT FIELD
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HWORD FORMAT RTN
         SPACE 1
*                                  PRINT NUMBER OF FIELD IDS IN LIST
         MVC   PTRPNH,DTRPNH       NUM OF TRIPLETS HEADING
         LA    R1,PTRPND           POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFTRN           POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HALFWORD FORMAT RTN
         SPACE 1
         MVC   PRSYSLVH,DOPSYSLH   Operating system heading        @P7A
         MVC   PRSYSLVD,SMFMNPDN   Print operating system level    @P7A
         SPACE  ,                                                  @P7A
SMFRTN1  DS    0H                                                  @P7A
         MVI   PEND1,C'*'
         PUT   (R8),PRTLINE                                        @P8C
         SPACE
* LINE 3
         MVC   PRTAREA,SPACE       CLEAR PRINT LINE                @P8C
         MVC   PTITLE,SECASTRX
*                                  PRINT OFFSET TO PRODUCT SECTION
         MVC   POFFSETH,DPSECOFH   PROD SECT OFFSET HEADING
         LA    R1,POFFSETD         POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFAPS+2         POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HWORD FORMAT RTN
         SPACE 1
*                                  PRINT LENGTH OF EACH FIELD ID.
         MVC   PLENGTHH,DPSECLNH   PROD SECT LENGTH HEADING
         LA    R1,PLENGTHD         POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFLPS           POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HWORD FORMAT RTN
         SPACE 1
*                                  PRINT NUMBER OF FIELD IDS IN LIST
         MVC   PNUMBERH,DPSECNOH   NUM OF PROD SECTS HEADING
         LA    R1,PNUMBERD         POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFNPS           POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HALFWORD FORMAT RTN
         SPACE 1
         MVI   PEND2,C'*'
         PUT   (R8),PRTLINE                                        @P8C
         SPACE
* LINE 4
         MVC   PRTAREA,SPACE       CLEAR PRINT LINE                @P8C
         MVC   PTITLE,SECASTRX
*                                  PRINT OFFSET TO START OF DATA ROWS
         MVC   POFFSETH,DDSECOFH   DATA ROW ADDRESS HEAD
         LA    R1,POFFSETD         POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFASS+2         POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HFWORD FORMAT RTN
         SPACE 1
*                                  PRINT LENGTH OF DATA RECORDS/ROWS
         MVC   PLENGTHH,DDSECLNH   PUT IN HEADING
         LA    R1,PLENGTHD         POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFASL           POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HWORD FORMAT RTN
         SPACE 1
*                                  PRINT NUMBER OF DATA RECORDS
         MVC   PNUMBERH,DDSECNOH   PUT IN HEADING
         LA    R1,PNUMBERD         POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFASN           POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HWORD FORMAT RTN
         SPACE 1
         MVI   PEND2,C'*'
         PUT   (R8),PRTLINE        PRINT DATA LINE                 @P8C
         PUT   (R8),STARS
         EJECT
***********************************************************************
*        SET UP AND PRINT SMF AND PRODUCT SECTION HEADERS             *
*                  PART 2.   THE PRODUCT SECTION                      *
***********************************************************************
         SPACE
PSRTN    DS    0H                  *** SMF PRODUCT SECTION ROUTINE ***
         MVC   PRTAREA,SPACE       CLEAR PRINT LINE                @P8C
         MVC   PTITLE,PRODSECT     TITLE THIS PROD-SECTION
         MVC   PRECVRH,DRECVRH     PUT IN RECORD
         UNPK  WRK1(5),SMFMNRVN(3) UNPACK HEX : 3RD BYTE IGNORED   @P8A
         TR    WRK1(4),TRTABLE     TRANSLATE INTO CHARACTER FORMAT @P8A
         MVC   PRECVRD(4),WRK1     MOVE INTO CHARACTER FIELD       @P8C
PSRTN0   DS    0H
*                                  SET UP CLASS NUMBER FOR THIS RECORD
         MVC   PRMINDH,DRMINDH     GET CLASS HEADING
         LA    R1,PRMINDD          POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFMNMFL         POINT TO CLASS NUMBER
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HALFWORD FORMAT RTN
         SPACE 1
         MVC   PGAPPLH,DGAPPLH     GET GENERIC APPLID HEADING
         MVC   PGAPPLD,SMFMNPRN    GET GENERIC APPLID
         MVC   PSAPPLH,DSAPPLH     GET SPECIFIC APPLID HEADING
         MVC   PSAPPLD,SMFMNSPN    GET SPECIFIC APPLID
*                                  SET UP CLASS NUMBER FOR THIS RECORD
         MVC   PRCLASH,DRCLASH     GET CLASS HEADING
         LA    R1,PRCLASD          POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFMNCL          POINT TO CLASS NUMBER
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HALFWORD FORMAT RTN
         SPACE 1
         MVI   PEND3,C'*'
         PUT   (R8),PRTLINE                                        @P8C
PSRTN1   DS    0H                                                  @P4A
* LINE 2
         MVC   PRTAREA,SPACE             CLEAR PRINT LINE          @P8C
         MVC   PTITLE,SECASTRX                                     @L2A
         MVC   PJMRJOBH,DJMRJOBH         PRINT JOB NAME            @L2A
         MVC   PJMRJOB,SMFMNJBN                                    @L2A
*                                        PRINT JOB ENTRY DATE
         MVC   PJMRDATH,DJMRDATH   MOVE DATE HEADER                @P8C
         MVC   PJMRDATE,=X'402120202061202020' EDIT MASK           @P8C
         MVC   DTEWK,SMFMNRSD      COPY JOB START DATE FIELD       @P8C
         AP    DTEWK,=PL4'1900000' ADD IN CENTURY                  @P8A
         ED    PJMRDATE,DTEWK      EDIT IN DATE FIELD              @P8C
*                                        PRINT JOB ENTRY TIME
         MVC   PJMRTIMH,DJMRTIMH   MOVE TIME HEADER                @P8C
         SR    R0,R0               CLEAR WORK REGISTER             @L2A
         ICM   R1,15,SMFMNRST      GET TIME VALUE FROM RECORD      @L2A
         D     R0,F6THOU           DIVIDE BY 60 THOUSAND           @L2A
         LR    R3,R0               STORE REMAINDER                 @L2A
         SR    R0,R0               CLEAR WORK REGISTER             @L2A
         D     R0,F6TY             DIVIDE BY 60 MINS->HRS          @L2A
         LR    R2,R1               STORE HOURS                     @L2A
         LR    R1,R0                                               @L2A
         M     R0,F10THOU          SHIFT MINS 4 PLACES LEFT        @L2A
         ALR   R3,R1               SET MINS TO LEFT OF SECS        @L2A
         LR    R1,R2                                               @L2A
         M     R0,F1MIL            MOVE HRS 6 PLACES LEFT          @L2A
         ALR   R3,R1               SET HOURS TO LEFT OF MINS       @L2A
         CVD   R3,WRK1             CONVERT TO DECIMAL              @L2A
         LM    R0,R1,WRK1                                          @L2A
         IC    R2,WRK1+7                                           @L2A
         SLDL  R0,4                                                @L2A
         STM   R0,R1,WRK1                                          @L2A
         STC   R2,WRK1+7                                           @L2A
         MVC   PJMRTIME,=X'4021207A20207A20204B2020' EDIT MASK     @L2A
         ED    PJMRTIME,WRK1+3       EDIT IN TIME FIELD            @L2A
         MVC   PJMRUIFH,DJMRUIFH         PRINT JOB USERID          @L2A
         MVC   PJMRUIF,SMFMNUIF                                    @L2A
         SPACE 1                                                   @L2A
         MVI   PEND4,C'*'                                          @L2A
         PUT   (R8),PRTLINE                                        @P8C
PSRTN2   DS    0H                                                  @P4A
         SPACE
* LINE 3
         MVC   PRTAREA,SPACE      CLEAR PRINT LINE                 @P8C
         MVC   PTITLE,SECASTRX
*                                  PRINT OFFSET TO CONNECTOR START
         MVC   POFFSETH,DCONNOFH   CONN OFF HEADING
         LA    R1,POFFSETD         POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFMNDCA+2       POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HWORD FORMAT RTN
*                                  PRINT LENGTH OF EACH FIELD ID.
         MVC   PLENGTHH,DCONNLNH   COL DES LEN HEADING
         LA    R1,PLENGTHD         POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFMNDCL         POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HWORD FORMAT RTN
*                                  PRINT NUMBER OF FIELD IDS IN LIST
         MVC   PNUMBERH,DCONNNOH   NUM OF COL DES HEADING
         LA    R1,PNUMBERD         POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFMNDCN         POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HALFWORD FORMAT RTN
         SPACE 1
         MVI   PEND2,C'*'
         PUT   (R8),PRTLINE                                        @P8C
PSRTN3   DS    0H                                                  @P4A
         SPACE
* LINE 4
         MVC   PRTAREA,SPACE       CLEAR PRINT LINE                @P8C
         MVC   PTITLE,SECASTRX
*                                  PRINT OFFSET TO START OF DATA ROWS
         MVC   POFFSETH,DDROWOFH   DATA ROW ADDRESS HEAD
         LA    R1,POFFSETD         POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFMNDRA+2       POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HFWORD FORMAT RTN
*                                  PRINT LENGTH OF DATA RECORDS/ROWS
         MVC   PLENGTHH,DDROWLNH   PUT IN HEADING
         LA    R1,PLENGTHD         POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFMNDRL         POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HWORD FORMAT RTN
*                                  PRINT NUMBER OF DATA RECORDS
         MVC   PNUMBERH,DDROWNOH     PUT IN HEADING
         LA    R1,PNUMBERD         POINT TO RECEIVING FIELD
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS
         LA    R1,SMFMNDRN         POINT TO INPUT
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0
         BAL   R1,HLFWDPRT         -> TO BINARY HWORD FORMAT RTN
         SPACE 1
         MVI   PEND2,C'*'
         PUT   (R8),PRTLINE        PRINT DATA LINE                 @P8C
PSRTN4   DS    0H                                                  @P4A
         SPACE  ,                                                  @D5A
* LINE 5
         MVC   PRTAREA,SPACE       CLEAR PRINT LINE                @D5A
         MVC   PTITLE,SECASTRX                                     @D5A
*                                  PRINT COMPRESSED RECORD LENGTH
         MVC   PDSECRLH,DDSECRLH   COMPRESSED RECORD LENGTH HEADING    F
                                                                   @D5A
         LA    R1,PDSECRLD         POINT TO RECEIVING FIELD        @D5A
         ST    R1,HLFADDRO         STORE AS OUTPUT ADDRESS         @D5A
         LA    R1,SMFMNCRL         POINT TO INPUT                  @D5A
         ST    R1,HLFADDRI         STORE AS INPUT ADDRESS          @D5A
         LA    R0,HLFADDRI         PUT ADDRESS LIST PTR INTO R0    @D5A
         BAL   R1,HLFWDPRT         -> TO BINARY HALFWORD FORMAT RTN    F
                                                                   @D5A
         SPACE 1                                                   @D5A
         MVC   PMCTOPNH,DMCTOPNH     PUT IN HEADING                @D5A
         UNPK  PMCTOPND(3),SMFMNOPN(2)                             @D5A
         TR    PMCTOPND(3),TRTABLE TRANSLATE OUTPUT                @D5A
         MVI   PMCTOPND+2,C''''                                    @D5A
         SPACE  ,                                                  @D5A
         MVI   PEND5,C'*'                                          @D5A
         PUT   (R8),PRTLINE        PRINT DATA LINE                 @D5A
PSRTN5   DS    0H                                                  @D5A
         SPACE  ,                                                  @D5A
* LINE 6
         MVC   PRTAREA,SPACE       Clear print line                @P8C
         MVC   PTITLE,SECASTRX     Put in the '*'s                 @L5A
         MVC   PSTODAH,DTODAD      TOD adjustment header           @L5A
*
         UNPK  WRK1(9),SMFMNTAD(5) UNPACK HEX : 5TH BYTE IGNORED       F
                                                                   @P8C
         TR    WRK1(8),TRTABLE     TRANSLATE INTO CHAR FORMAT      @P8C
         MVC   PSTODAD(8),WRK1     MOVE INTO CHARACTER FIELD       @P8C
         SPACE  ,                                                  @P7A
         MVC   PSLSOH,DTLSOH       Leap Second Offset header       @P7A
         UNPK  WRK1(9),SMFMNLSO(5)                                 @P8C
         TR    WRK1(8),TRTABLE     TRANSLATE INTO CHAR FORMAT      @P8C
         MVC   PSLSOL(8),WRK1      MOVE INTO CHARACTER FIELD       @P8C
         UNPK  WRK1(9),SMFMNLSO+4(5)                               @P8C
         TR    WRK1(8),TRTABLE     TRANSLATE INTO CHAR FORMAT      @P8C
         MVC   PSLSOR(8),WRK1      MOVE INTO CHARACTER FIELD       @P8C
         SPACE  ,                                                  @P7A
         MVC   PSLDTOH,DTLDTOH     Local Date/Time Offset header   @P7A
         UNPK  WRK1(9),SMFMNDTO(5)                                 @P8C
         TR    WRK1(8),TRTABLE     TRANSLATE INTO CHAR FORMAT      @P8C
         MVC   PSLDTOL(8),WRK1     MOVE INTO CHARACTER FIELD       @P8C
         UNPK  WRK1(9),SMFMNDTO+4(5)                               @P8C
         TR    WRK1(8),TRTABLE     TRANSLATE INTO CHAR FORMAT      @P8C
         MVC   PSLDTOR(8),WRK1     MOVE INTO CHARACTER FIELD       @P8C
         SPACE  ,                                                  @P5A
         MVI   PEND6,C'*'                                          @D5C
         PUT   (R8),PRTLINE        PRINT DATA LINE                 @P8C
PSRTN6   DS    0H                                                  @D5C
         SPACE ,                                                   @D5A
         PUT   (R8),STARS          PRINT LINE OF STARS
         PUT   (R8),SPACE          PRINT EMPTY LINE                @P8C
         MVC   HDRCNT,=H'16'       SET NUMBER OF LINES PRINTED     @D5C
         SPACE  ,                                                  @P8A
         DROP  R6,R7,R9                                            @P8A
         EJECT
***********************************************************************
*   AT THIS POINT OF THE PROGRAM WE HAVE STEPPED THROUGH THE HEADERS  *
*  AND DESCRIPTORS THAT DESCRIBE THE RECORD FORMAT AND NOW WE START   *
*  TO FORMAT THE DATA RECORDS.                                        *
***********************************************************************
         SPACE
PSRTNEND DS    0H                                                  @P8A
         LR    R1,R9               POINT TO ANALYSIS CONTROL BLOCK @P8A
         L     R15,=A(DFH$MOL3)    CALL MONITORING RECORD PROCESSOR    F
                                                                   @P8A
         BALR  R14,R15             PROCESS MONITORING RECORD       @P8A
         SPACE
***********************************************************************
*                  END OF MAIN PROCESSING LOOP                        *
***********************************************************************
         SPACE
SSEXIT   DS    0H                  CICS SECTION COMMON EXIT POINT
         L     R13,MOL1SAVE+4      RESTORE CALLERS SAVEAREA ADDRESS
         LM    R14,R12,12(R13)     RESTORE CALLERS REGISTERS
         SR    R15,R15             SET RC
         BR    R14                 RETURN
         EJECT  ,                                                  @P8A
***********************************************************************
*                                                                     *
*    THIS ROUTINE FORMATS THE BINARY NUMERIC CONTENTS OF A GIVEN      *
*  HALFWORD INTO A GIVEN OUTPUT AREA AS A DECIMAL NUMBER, LEFT        *
*  JUSTIFYING THE SIGNIFICANT DIGITS.                                 *
*      INPUT:  R0 -> 2 WORD ADDR LIST;  WORD 1 -> INPUT FIELD         *
*                                       WORD 2 -> OUTPUT FIELD        *
*              R1 -> RETURN ADDRESS                                   *
*                                                                     *
*      OUTPUT: R0 =  LENGTH OF FORMATTED NUMBER                       *
*                                                                     *
***********************************************************************
         SPACE 1                                                   @P8A
HLFWDPRT DS    0H                                                  @P8A
         STM   R1,R4,REGSAVE       KEEP ENTRY REGISTERS SAFE       @P8C
         LR    R1,R0               MAKE PARAMETER POINTER USABLE   @P8A
         LM    R3,R4,0(R1)         GET FIELD POINTERS              @P8A
         SR    R1,R1               CLEAR REG                       @P8A
         LH    R1,0(R3)            GET INPUT FIELD                 @P8A
         CVD   R1,WRK1             CHANGE TO DECIMAL               @P8A
         MVC   0(6,R4),=X'402020202120'      INSERT EDIT MASK      @P8A
         LA    R1,5(R4)            DEFAULT PTR IS TO LAST BYTE     @P8A
         EDMK  0(6,R4),WRK1+5      EDIT INPUT TO OUTPUT            @P8A
         LA    R2,6(R4)            POINT PAST OUTPUT FIELD         @P8A
         SR    R2,R1               GET LENGTH OF SIGNIFICANT DATA  @P8A
         BCTR  R2,0                REDUCE LENGTH BY ONE            @P8A
         EX    R2,HLFSHIFT         MOVE THIS SIGNIF DATA TO FRONT  @P8A
         LA    R2,1(R2)            RESTORE SIG DATA LENGTH         @P8A
         LA    R3,0(R2,R4)         POINT TO BYTE AFTER SIG DATA    @P8A
         LA    R4,6                GET LENGTH OF OUTPUT AREA       @P8A
         SR    R4,R2               GET LENGTH OF REMAINING BYTES   @P8A
         LR    R0,R4               SET LENGTH OF OUTPUT.           @P8A
         BCTR  R4,0                REDUCE FOR EXECUTE              @P8A
         EX    R4,HLFPAD           PAD OUT THE END OF OUTPUT AREA  @P8A
         LM    R1,R4,REGSAVE       RELOAD REGISTERS                @P8C
         BR    R1                  RETURN TO CALLER                @P8A
         SPACE 3                                                   @P8A
         TITLE 'DFH$MOL1 - DATA AREAS'                             @P8A
***********************************************************************
*              STORAGE AREAS FOR PROGRAM                              *
***********************************************************************
         SPACE 1                                                   @P8A
MOL1_STATIC DS 0F                  DFH$MOL1 STATIC DATA        @BA63143
         SPACE ,                                               @BA63143
HLFSHIFT MVC   0(0,R4),0(R1)       SHIFT DATA TO FRONT OF FIELD@BA63143
HLFPAD   MVC   0(0,R3),SPACE       CLEAR SPARE BYTES AT END OF @BA63143
         SPACE ,                                               @BA63143
MOL1SAVE DC    18F'0'              SAVE AREA                   @BA63143
REGSAVE  DS    4F                  REGISTER SAVE AREA              @D5C
WRK1     DS    D                   WORK SPACE FOR CVD AND UNPACK   @P8A
         DS    D                   WORK SPACE FOR CVD AND UNPACK   @P8A
         SPACE  ,                                                  @P8A
HLFADDRI DS    A                   HALF WORD RTN INPUT POINTER     @P8A
HLFADDRO DS    A                   HALF WORD RTN OUTPUT POINTER    @P8A
HLFWD    DC    H'0'                                                @P8A
DTEWK    DC    PL4'0'              PACKED DATE WORK                @P8A
         SPACE  ,                                                  @P8A
F6TY     DC    F'60'                                               @P8A
F6THOU   DC    F'6000'                                             @P8A
F10THOU  DC    F'10000'                                            @P8A
F1MIL    DC    F'1000000'                                          @P8A
         SPACE  ,                                                  @P8A
STARS    DS    0CL133              LINE OF STARS                   @P8A
STARCC   DC    CL1' '              PRINT CONTROL FOR STARS         @P8A
STARLNE  DC    132C'*'             STAR-TEXT, THE DATA             @P8A
SPACE    DC    CL133' '            SPACES FOR PRINTLINE            @P8A
PRTLINE  DC    CL133' '            COMMON PRINT LINE               @P8C
         EJECT  ,                                                  @P8A
*   SMF HEADER LINE TITLES
         SPACE 1                                                   @P8A
SMFHDR   DC    CL24'*  SMF HEADER          *'                      @P8A
PRODSECT DC    CL24'*  SMF PRODUCT SECTION *'                      @P8A
SECASTRX DC    CL24'*                      *'                      @P8A
         SPACE 1                                                   @P8A
*   SMF HEADER LINE DATA ITEM DESCRIPTIONS
         SPACE 1                                                   @P8A
DTIMEH   DC    CL6'TIME ='                                         @P8A
DDATEH   DC    CL6'DATE ='                                         @P8A
DSYSIDH  DC    CL11'SYSTEM-ID ='                                   @P8A
DSSYSIDH DC    CL11'SUBSYS-ID ='                                   @P8A
DOSYSIDH DC    CL10'OPSYS = X'''                                   @P8A
DRTYPH   DC    CL11'REC TYPE = '                                   @P8A
DRSTYPH  DC    CL14'REC SUBTYPE = '                                @P8A
DTRPNH   DC    CL17'NO OF TRIPLETS = '                             @P8A
DOPSYSLH DC    CL13'OPSYS LEVEL ='                                 @P8A
         SPACE 1                                                   @P8A
*   SMF PRODUCT SECTION DATA ITEM DESCRIPTIONS
         SPACE 1                                                   @P8A
DRECVRH  DC    CL13'REC VERSION ='                                 @P8A
DRMINDH  DC    CL15'REC MAINT IND ='                               @P8A
DGAPPLH  DC    CL10'G-APPLID ='                                    @P8A
DSAPPLH  DC    CL10'S-APPLID ='                                    @P8A
DJMRJOBH DC    CL10'JOB NAME ='                                    @P8A
DJMRDATH DC    CL12'ENTRY DATE ='                                  @P8A
DJMRTIMH DC    CL12'ENTRY TIME ='                                  @P8A
DJMRUIFH DC    CL21'USER IDENTIFICATION ='                         @P8A
DRCLASH  DC    CL12'DATA CLASS ='                                  @P8A
         SPACE 1                                                   @P8A
DPSECOFH DC    CL18'PROD SECT OFFSET ='                            @P8A
DPSECLNH DC    CL18'PROD SECT LENGTH ='                            @P8A
DPSECNOH DC    CL19'NUM OF PROD SECTS ='                           @P8A
         SPACE 1                                                   @P8A
DDSECOFH DC    CL18'DATA SECT OFFSET ='                            @P8A
DDSECLNH DC    CL18'DATA SECT LENGTH ='                            @P8A
DDSECNOH DC    CL19'NUM OF DATA SECTS ='                           @P8A
         SPACE 1                                                   @P8A
DCONNOFH DC    CL18'1ST CONN. OFFSET ='                            @P8A
DCONNLNH DC    CL18'CONNECTOR LENGTH ='                            @P8A
DCONNNOH DC    CL19'NUM OF CONNECTORS ='                           @P8A
         SPACE 1                                                   @P8A
DDROWOFH DC    CL18'1ST DATA OFFSET  ='                            @P8A
DDROWLNH DC    CL18'DATA ROW LENGTH  ='                            @P8A
DDROWNOH DC    CL19'NUM OF DATA ROWS  ='                           @P8A
         SPACE 1                                                   @P8A
DDSECRLH DC    CL24'COMPRESSED DATA LENGTH ='                      @D5A
DMCTOPNH DC    CL16'MCT OPTIONS = X'''                             @06A
         SPACE 1                                                   @06A
DTODAD   DC    CL17'LOCAL TIME ZONE ='                             @P8A
DTLSOH   DC    CL20'LEAP SECOND OFFSET ='                          @P8A
DTLDTOH  DC    CL18'DATE/TIME OFFSET ='                            @P8A
         EJECT  ,                                                  @P8A
TRTABLE  DC    CL256' '                                            @P8A
         ORG   TRTABLE+C'.'                                        @P8A
         DC    CL1'.'                                              @P8A
         ORG   TRTABLE+C':'                                        @P8A
         DC    CL1':'                                              @P8A
         ORG   TRTABLE+C'A'                                        @P8A
         DC    CL9'ABCDEFGHI'                                      @P8A
         ORG   TRTABLE+C'J'                                        @P8A
         DC    CL9'JKLMNOPQR'                                      @P8A
         ORG   TRTABLE+C'S'                                        @P8A
         DC    CL8'STUVWXYZ'                                       @P8A
         ORG   TRTABLE+C'0'                                        @P8A
         DC    CL16'0123456789ABCDEF'                              @P8A
         ORG   ,                                                   @P8A
         SPACE  ,                                                  @P8A
         LTORG  ,                                                  @P8A
         TITLE 'DFH$MOL3 - MONITORING RECORD PRINT ROUTINE'        @P8A
***********************************************************************
*                  MONITORING RECORD PRINT ROUTINE                    *
***********************************************************************
         SPACE  ,                                                  @P8A
DFH$MOL3 CSECT  ,                                                  @P8A
DFH$MOL3 AMODE 31                                                  @Q1C
DFH$MOL3 RMODE ANY                                                 @Q1C
         ENTRY DFH$MOL3                                            @P8A
         SAVE  (14,12)             SAVE CALLERS REGISTERS          @P8A
         CNOP  0,4                 ALIGN TO FULLWORD           @BA63143
         BRAS  R12,*+8             SKIP OVER AND ADDRESS ADCON @BA63143
         DC    A(MOL3_STATIC)      ADDRESS OF THE STATIC DATA  @BA63143
         L     R12,0(,R12)         LOAD ADDRESS OF THE STATIC  @BA63143
         USING MOL3_STATIC,R12     ADDRESSABILITY TO STATIC    @BA63143
         SPACE ,                                               @BA63143
         ST    R13,MOL3SAVE+4      SAVE BACKWARD POINTER           @P8A
         LA    R13,MOL3SAVE        MY SAVE AREA                    @P8A
         LR    R9,R1               LOAD PARAMETER AREA ADDRESS     @P8A
         USING ANLCB,R9            ADDRESSABILITY                  @P8A
         ST    R9,ANLCBSV          SAVE ANLCB ADDRESS              @P8A
         L     R8,PRINTR           GET PRINT DCB ADDRESS           @P8A
         ST    R8,PRINTRSV         SAVE PRINT DCB ADDRESS          @P8A
         L     R7,REC_ADDR         GET SMF RECORD ADDRESS          @P8A
         USING DFHSMFDS,R7         ADDRESSABILITY                  @P8A
         MVC   GAPPLID,SMFMNPRN    SAVE CURRENT GENERIC APPLID     @P8A
         MVC   SAPPLID,SMFMNSPN    SAVE CURRENT SPECIFIC APPLID    @P8A
         SPACE  ,                                                  @P8A
***********************************************************************
*               SECTION DATA OR DICTIONARY                            *
*                                                                     *
*  TO REALLY 'UNWRAP' THE DATA RECORDS. HOWEVER THERE ARE THREE TYPES *
*  AND WE MUST FIND IF IT IS A DICTIONARY RECORD, AN EXCEPTION RECORD *
*  OR, ONE OR MORE PERFORMANCE RECORDS.                               *
*   ALL THE ROUTINES SUBORDINATE TO THIS SECTION WILL HAND CONTROL    *
*  BACK TO THIS SECTION'S EXIT POINT. ERROR SITUATIONS THAT ALLOW     *
*  PROCESSING TO CONTINUE WILL ALSO PASS THROUGH IT. THUS THIS SMALL  *
*  SECTION IS AT THE HEART OF THE FILE UNWRAPPING; HERE WE CAN START  *
*  TO PROCESS THE DIFFERENT DATA TYPES HELD WITHIN A PARTICULAR CICS  *
*  DATA SECTION.                                                      *
***********************************************************************
         SPACE  ,                                                  @P8A
SSDATYPE DS    0H                  WHAT DATA TYPE DO WE HAVE ?     @P8A
         CLC   SMFMNCL,=X'0001'    DICTIONARY?                     @P8A
         BE    DICAREA             YES ... PROCESS IT              @P8A
         CLC   SMFMNCL,=X'0003'    PERFORMANCE RECORD(S)?          @P8A
         BE    DATAREA             YES ... PROCESS IT/THEM         @P8A
         CLC   SMFMNCL,=X'0004'    EXCEPTION RECORD?               @P8A
         BE    EXCAREA             YES ... PROCESS IT              @P8A
         CLC   SMFMNCL,=X'0005'    RESOURCE RECORD?            @BA63143
         BE    RESAREA             YES ... PROCESS IT          @BA63143
         CLC   SMFMNCL,=X'0006'    IDENTITY RECORD?                @LMA
         BE    IDNAREA             YES ... PROCESS IT              @LMA
         SPACE 1                                                   @P8A
         PUT   (R8),MSG105         OUTPUT ERROR MESSAGE            @P8A
         ABEND 105,DUMP            THEN ABEND                      @P8A
         SPACE  ,                                                  @P8A
MOL3EXIT DS    0H                                                  @P8A
         L     R13,MOL3SAVE+4      RESTORE CALLERS SAVEAREA ADDRESS    F
                                                                   @P8A
         LM    R14,R12,12(R13)     RESTORE CALLERS REGISTERS       @P8A
         SR    R15,R15             SET RC                          @P8A
         BR    R14                 RETURN                          @P8A
         EJECT
***********************************************************************
*               SECTION DICTIONARY FOUND                              *
*                                                                     *
*  THE DICTIONARY IS HELD IN STORAGE, BUT WE MUST ALWAYS UPDATE IT    *
*  WITH ANY NEW ONE FOUND IN THE INPUT IN CASE OF CHANGES. THUS A     *
*  CHECK MUST BE MADE TO SEE IF WE ALREADY HAVE ONE. IF SO, FREE      *
*  IT'S STORAGE GET ENOUGH STORAGE TO HOLD THE NEW DICTIONARY THEN    *
*  BUILD IT.                                                          *
***********************************************************************
         SPACE
DICAREA  DS    0H
         AP    DICSLCTD,=P'1'      COUNT DICTIONARY RECORDS PROCESSED  F
                                                                   @P8A
         L     R10,DICTADDR        PICK UP CURRENT DICT ADDR
         USING DICTNTRY,R10        MAP DICTIONARY ENTRY
         LTR   R10,R10             DO WE HAVE ONE?
         BZ    DICBUILD            IF NOT, BUILD NEW DICTIONARY
DICFREE  DS    0H                  WE HAVE A DICTIONARY ALREADY
         L     R3,DICTLEN          SIZE OF CURRENT DICTIONARY      @P8C
         FREEMAIN R,LV=(R3),A=(R10),SP=0                           @P8C
         SPACE ,                                                   @LEA
         L     R10,DICTADR2        PICK UP FIXED DICTIONARY ADDR   @LEA
         L     R3,DICTLEN2         SIZE OF THE FIXED DICTIONARY    @LEA
         FREEMAIN R,LV=(R3),A=(R10),SP=0                           @LEA
         SPACE ,                                                   @LEA
         SR    R0,R0               CLEAR WORK REGISTER
         ST    R0,DICTENDS         CLEAR DICTIONARY END ADDRESS
         ST    R0,DICTADDR         CLEAR DICTIONARY START ADDRESS
         ST    R0,DICTLEN          CLEAR DICTIONARY LENGTH
         ST    R0,DICTADR2         CLEAR FIXED DICTIONARY ADDRESS  @LEA
DICBUILD DS    0H                  BUILD INCORE DICTIONARIES       @LEC
         L     R10,DICTLEN2        SIZE OF THE FIXED DICTIONARY    @LEA
         GETMAIN R,LV=(R10),SP=0,LOC=(31,64)                       @Q1C
         ST    R1,DICTADR2         STORE ADDRESS OF STORAGE        @LEA
         SPACE ,                                                   @LEA
         SR    R10,R10             CLEAR WORK REGISTER
         LH    R10,SMFASL          GET SIZE OF DATA INPUT
         LA    R10,7(R10)          FORCE TO NEXT
         SRL   R10,3                  MULTIPLE OF 8
         SLL   R10,3                     FOR STORAGE GETMAIN
         ST    R10,DICTLEN         STORE SIZE OF REQUIRED AREA
         GETMAIN R,LV=(R10),SP=0,LOC=(31,64)                       @Q1C
         ST    R1,DICTADDR         STORE ADDRESS OF STORAGE
         LH    R14,SMFMNDRN        LOAD NUMBER OF DATA LINES
         LR    R3,R1               LOAD ADDRESS OF DICTIONARY STORAGE  F
                                                                   @P8C
         SR    R10,R10             CLEAR DATA POINTER
         LH    R10,SMFMNDRA+2      OFFSET TO FIRST DICTIONARY ENTRY
         AR    R10,R7              FIND WHERE DICTIONARY ENTRIES START
DICLOOP  DS    0H                  BUILD EACH ENTRY OF DICTIONARY
         MVC   0(CMODNEXT-DICTNTRY,R3),DICTNTRY    COPY DICT-ENTRY @P8C
         LA    R3,CMODNEXT-DICTNTRY(,R3)   NEXT SINK               @P8C
         LA    R10,CMODNEXT                NEXT SOURCE             @P8C
         BCT   R14,DICLOOP         BRANCH FOR NEXT ENTRY.
         ST    R3,DICTENDS         STORE END ADDRESS OF DICTIONARY @P8C
         L     R10,DICTADDR        START ADDRESS OF DICTIONARY
         MVC   DICTAPPL,SMFMNPRN   SAVE APPLID OF DICTIONARY
DICADDR  DS    0H                  PRINT THE INCORE DICTIONARY
         TM    PRTSEL,PRTDIC       PRINT DICTIONARY RECORDS?       @P8C
         BZ    DICUPDTE            NO, BUT UPDATE FIELD OFFSETS    @PEC
         SPACE  ,                                                  @P8C
***********************************************************************
* PRINT ONE DICTIONARY ELEMENT (FIELD ATTRIBUTES AND TITLE) PER LINE. *
***********************************************************************
         SPACE
DICPRINT DS    0H
         LA    R6,PRTCC            ADDRESS PRINT BUILD AREA        @P8A
         USING PRTDSCT,R6          MAP THE PRINTLINE WITH PRINT LAYOUTSF
                                                                   @P8A
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @P8C
         MVC   PLTITLD,DLTITLD     SAY WHAT DATA WE ARE PRINTING
         PUT   (R8),PRTCC          PRINT DATA BUFFER
         PUT   (R8),SPACES         PRINT LINE OF SPACES
         SR    R5,R5
         LH    R5,SMFMNDRN         SET LOOP COUNTER
DICNEXT  DS    0H                  *** DICTIONARY PRINT LOOP ***
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         MVC   PLDICDET,CMODNAME   NAME-OF-OWNER
         MVC   PLDICOBJ,CMODTYPE   TYPE-OF-OBJECT
         MVC   PLDICNUM,CMODIDNT   ID-WITHIN-TYPE
         LH    R14,CMODLENG        SIZE-OF-OBJECT
         CVD   R14,WRK2                                            @P8C
         UNPK  WRK2(5),WRK2+5(3)                                   @P8C
         OI    WRK2+4,X'F0'                                        @P8C
         MVC   PLDICLEN,WRK2+1                                     @P8C
         CLI   PLDICLEN,C'0'       REMOVE
         BNE   DICLENBY              LEADING
         MVI   PLDICLEN,C' '           ZEROES
         CLI   PLDICLEN+1,C'0'           ..
         BNE   DICLENBY                  ..
         MVI   PLDICLEN+1,C' '           ..
         CLI   PLDICLEN+2,C'0'           ..
         BNE   DICLENBY                  ..
         MVI   PLDICLEN+2,C' '           ..
DICLENBY DS    0H                  .
         MVC   PLDICCON,=C'X''    '''
         UNPK  WRK2(5),CMODCONN(3)                                 @P8C
         TR    WRK2(4),TRTAB                                       @P8C
         MVC   PLDICCON+2(4),WRK2  ASSIGNED-CONNECTOR              @P8C
         MVC   PLDICOFF,=C'X''    '''
         UNPK  WRK2(5),CMODOFST(3)                                 @P8C
         TR    WRK2(4),TRTAB                                       @P8C
         MVC   PLDICOFF+2(4),WRK2  ASSIGNED-CONNECTOR              @P8C
         MVC   PLDICTXT(L'CMODHEAD),CMODHEAD INFORMAL HEAD
         PUT   (R8),PRTCC          PRINT THIS DICTIONARY ENTRY
         LA    R10,CMODNEXT        A( NEXT ENTRY )             .
         BCT   R5,DICNEXT
         PUT   (R8),SPACES         PRINT EMPTY LINE
         SPACE  ,                                                  @PEA
         DROP  R6                                                  @PEA
         SPACE ,                                                   @PEA
DICUPDTE DS    0H                                                  @PEA
         L     R0,DICTADR2         PICK UP FIXED DICTIONARY ADDR   @LEA
         L     R1,DICTLEN2         LENGTH OF THE STD DICTIONARY    @LEA
         L     R14,=A(DC3BEGIN)    ADDR OF DEFINED STD DICTIONARY  @LEA
         LR    R15,R1              SOURCE LENGTH OF STD DICTIONARY @LEA
         MVCL  R0,R14              COPY STANDARD FIXED DICTIONARY  @LEA
         SPACE ,                                                   @LEA
         L     R10,DICTADR2        ADDRESS OF FIXED DICTIONARY     @LEA
         LA    R15,DICNTRYS        NO. ENTRIES FOR STD DICTIONARY  @LEA
DICLOOP1 DS    0H                  DICTIONARY INITIALISE LOOP      @LEA
         MVC   CMODOFST(2),=X'FFFF' INIT FIELD OFFSET AS EXCLUDED  @LEA
         LA    R10,CMODNEXT        BUMP TO NEXT ENTRY              @LEA
         BCT   R15,DICLOOP1        LOOP THRU FIXED DICTIONARY      @LEA
         SPACE ,                                                   @LEA
         L     R10,DICTADDR        ADDRESS OF THE INPUT DICTIONARY @PEA
         SR    R14,R14             CLEAR FOR WORK                  @PEA
         LH    R14,SMFMNDRN        NUMBER OF DICTIONARY ENTRIES    @PEA
DICLOOP2 DS    0H                  OUTER DICTIONARY LOOP           @LEC
         MVC   SAVEOFST(2),CMODOFST SAVE FIELD OFFSET              @LEA
         MVC   CMODOFST(2),=X'FFFF' INIT FIELD OFFSET AS EXCLUDED  @PEA
         L     R5,=A(DC3BEGIN)     ADDRESS OF RECORD DICTIONARY    @LEC
         LA    R15,DICNTRYS        NO. ENTRIES FOR UNLOADED RECORD @PEA
DICLOOP3 DS    0H                  INNER DICTIONARY LOOP           @LEC
         CLC   CMODNAME(12),CMODNAME-DICTNTRY(R5)  FOUND ENTRY?    @PEA
         BE    DICMATCH            YES, UPDATE FIELD OFFSET        @PEA
         LA    R5,CMODNEXT-DICTNTRY(R5) NO, BUMP TO NEXT ENTRY     @PEA
         BCT   R15,DICLOOP3        LOOP THRU RECORD DICTIONARY     @LEC
         B     NXTENTRY            GO BUMP TO NEXT INPUT ENTRY     @PEA
         SPACE ,                                                   @PEA
DICMATCH DS    0H                  DICTIONARY ENTRIES MATCH        @PEA
         MVC   CMODOFST,CMODOFST-DICTNTRY(R5)  UPDATE FIELD OFFSET @PEA
         LR    R3,R5                                               @LEA
         S     R3,=A(DC3BEGIN)     CALCULATE OFFSET OF THIS ENTRY  @LEA
         A     R3,DICTADR2         INTO THE FIXED STD DICTIONARY   @LEA
         MVC   CMODOFST-DICTNTRY(2,R3),SAVEOFST FIELD OFFSET       @LEA
NXTENTRY DS    0H                                                  @PEA
         LA    R10,CMODNEXT        BUMP TO NEXT INPUT DICT ENTRY   @PEA
         BCT   R14,DICLOOP2        LOOP THRU INPUT DICTIONARY      @LEC
         SPACE ,                                                   @PEA
         B     MOL3EXIT            -> TO SECTION DATA PROC EXIT PT @P8A
         EJECT ,                                                   @D6A
***********************************************************************
FINDDICT DS    0H                  LOCATE DICTIONARY FOR THIS APPLID   F
                                                                   @D6A
         CLC   DICTAPPL,SMFMNPRN   IS DICTIONARY FOR THIS APPLID   @D6A
         BER   R14                 YES, DICTIONARY FOUND           @D6A
         B     4(R14)              NO - NO DICTIONARY RETURN PATH  @D6A
         EJECT ,                                                   @D6C
***********************************************************************
*   ROUTINES TO BUILD AND PRINT THE MONITORING DATA RECORDS/ROWS      *
*                                                                     *
*   THE DATA IS PRINTED ONE FIELD TO A LINE WITH A HEX IMAGE ON THE   *
* LEFT AND AN INTERPRETED (CHAR. OR IN THE CASE OF CLOCK FIELDS IN    *
* NORMAL TIME UNITS) FORM ON THE RIGHT. AT THIS POINT WE ARE LOOKING  *
* AT THE SMF HEADER/PRODUCT SECTION SO WE FIRST HAVE TO ADDRESS THE   *
* BEGINING OF THE DATA RECORD AREA. SECONDLY WE CHECK FOR AN EXISTING *
* DICTIONARY FOR THE PERFORMANCE RECORD CLASS. IF ONE DOES NOT EXIST, *
* AND ERROR MESSAGE IS OUTPUT TO THE PRINT FILE AND PROCESSING IS     *
* TERMINATED. IF A DICTIONARY EXISTS WE PROCESS EACH OF THE ROWS OF   *
* DATA (PERFORMANCE RECORDS) WITHIN THE DATA-SECTION, AND THEN GO TO  *
* GET THE NEXT. AS THESE ROUTINES ARE ALL SUBORDINATE TO, OR          *
* LOGICALLY PART OF, THE DATA-SECTION ROUTINE, WE ALWAYS RETURN TO    *
* THE COMMON EXIT ROUTINE TO FIND WHICH DATA IS TO BE PROCESSED NEXT. *
***********************************************************************
         SPACE 1
DATAREA  DS    0H
         L     R8,PRINTRSV         GET SAVED PRINT DCB ADDRESS     @P8A
         SR    R3,R3               CLEAR WORK REGISTER
         LH    R3,SMFMNDRN         GET NUMBER OF ROWS IN SECTION
         CH    R3,=H'0'            ARE THERE ANY DATA ROWS?
         BNE   DATCHKDI            YES - THEN CONTINUE
         PUT   (R8),MSG104         PRINT ERROR MESSAGE
         ABEND 104,DUMP            AND ABEND
         SPACE ,                                                   @D6C
DATCHKDI DS    0H                  CHECK IF OUR DICT EXISTS
         L     R10,DICTADDR        R10 -> PERFORMANCE RECORD DICTIONARY
         LTR   R10,R10             DOES DICTIONARY EXIST ?
         BNZ   DATCHKAP            YES, NOW COMPARE APPLID'S
         MVC   MSG109+38(8),SMFMNPRN   PUT APPLID IN ERROR MESSAGE @DAA
         PUT   (R8),MSG109         NO, OUTPUT ERROR MESSAGE
         ABEND 109                 THEN ABEND
         SPACE ,                                                   @D5A
DATCHKAP DS    0H                  CHECK IF OUR DICTIONARY EXISTS  @D6C
         BAL   R14,FINDDICT        LOCATE DICTIONARY FOR APPLID    @D6A
         B     DATADDR             +0 DICTIONARY FOUND             @D6A
*                                  +4 NO DICTIONARY FOUND
         MVC   MSG110+42(8),SMFMNPRN   PUT APPLID IN ERROR MESSAGE
         PUT   (R8),MSG110         NO, OUTPUT ERROR MESSAGE
         ABEND 110                 THEN ABEND
         SPACE ,                                                   @D6C
         DROP  R9                                                  @P8A
         EJECT ,                                                   @D5A
***********************************************************************
*            START OF CMF DATA RECORD/ROW PROCESSING                  *
*                                                                     *
*   THIS LOOP IS PERFORMED ONCE FOR EACH DATA RECORD WITHIN THE SMF   *
* DATA SECTION. IT IN TURN ACTIVATES ANOTHER LOOP WHICH PROCESSES     *
* THE FIELDS WITHIN THE RECORD. WHEN THE PROCESSING OF ALL THE DATA   *
* IN THE SECTION IS COMPLETED WE PASS TO THE SECTION EXIT WHICH       *
* WILL DETERMINE WHAT DATA IS TO BE PROCESSED NEXT.                   *
***********************************************************************
         SPACE 1                                                   @P8C
DATADDR  DS    0H                                                  @P8C
         SR    R9,R9               CLEAR DATA POINTER              @P8A
         LH    R9,SMFMNDRA+2       OFFSET TO THE FIRST DATA ROW    @P8A
         AR    R9,R7               FIND WHERE DATA STARTS          @P8A
ROWLOOP  DS    0H                  START OF PROCESSING FOR EACH ROW
         L     R2,ANLCBSV          RESTORE ANLCB ADDRESS           @P8A
         USING ANLCB,R2            ADDRESSABILITY                  @P8A
         AP    PERRECS,=P'1'       COUNT THE PERFORMANCE RECORDS   @P8A
         STH   R3,ROWSAVE
         BAL   R14,PICKFLDS        PICK FIELDS FOR SELECTION PROCESS   F
                                                                   @LEC
         BAL   R14,SELECT          CHECK FOR SELECTED RECORD
         B     SELON30             +0 NOT SELECTED
SELON10  DS    0H                  +4 SELECTED
         AP    PERSLCTD,=P'1'      COUNT THE RECORDS SELECTED      @P8A
         L     R5,SMFMNDCA         OFFSET TO THE 1ST CONNECTOR
         AR    R5,R7               INTO THE SMF RECORD
         TM    SORTSW,UNLOAD       UNLOAD OPTION REQUESTED?        @P8A
         BZ    SELON20             NO, SKIP UNLOAD                 @P8A
         CLC   SMFMNRVN,=XL2'0650' RECORD FROM THIS RELEASE?       @D6A
         BL    SELON20             NO, CONTINUE WITH PROCESSING    @D6A
         BAL   R14,UNLDPROC        PROCESS ALL IDS IN ROW          @P8A
         SPACE  ,                                                  @P8A
         DROP  R2                                                  @P8A
         SPACE  ,                                                  @P8A
SELON20  DS    0H                                                  @P8A
         L     R5,SMFMNDCA         OFFSET TO THE 1ST CONNECTOR     @P8A
         AR    R5,R7               INTO THE SMF RECORD             @P8A
         L     R2,ANLCBSV          RESTORE ANLCB ADDRESS           @P8A
         USING ANLCB,R2            ADDRESSABILITY                  @P8A
         TM    PRTSEL,PRTPER       PRINT PERFORMANCE RECORDS?      @P8A
         BZ    SELON30             NO, SKIP PRINT ROUTINE          @P8A
         L     R8,PRINTRSV         YES, GET SAVED PRINT DCB ADDRESS    F
                                                                   @P8A
         BAL   R14,IDPROC          PROCESS ALL IDS IN ROW
         PUT   (R8),SPACES         PRINT EMPTY LINE
         B     SELON40             AND CONTINUE THRU DATA SECTION
         SPACE  ,                                                  @P8A
         DROP  R2                                                  @P8C
         SPACE  ,                                                  @P8A
SELON30  DS    0H
         AH    R9,SMFMNDRL         NO, A( NEXT ROW )
SELON40  DS    0H
         SR    R3,R3               CLEAR WORK REGISTER
         LH    R3,ROWSAVE          RESTORE OUR COUNTER
         BCT   R3,ROWLOOP          LOOP THRU DATA SECTION
         B     MOL3EXIT          -> WHEN DONE TO SECTION PROCESSOR END F
                                                                   @P8A
         EJECT ,                                                   @LEA
***********************************************************************
*   HERE WE WANT TO EXTRACT FROM THE DATA RECORD THE FIELDS THAT ARE  *
* PART OF THE RECORD SELECTION PROCESS.                               *
***********************************************************************
         SPACE ,                                                   @LEA
PICKFLDS DS    0H                                                  @LEA
         ST    R14,IDLUPR14        SAVE OUR RETURN REGISTER        @LEA
         SPACE ,                                                   @LEA
         MVC   TRANID,0(R9)            COPY TRANID                 @LEC
         MVC   TERMID,4(R9)            COPY TERMID                 @LEC
         MVC   USERID,8(R9)            COPY USERID                 @LEC
         MVC   TASKNO(4),=PL4'0'       INITIAL TASK NUMBER         @PNA
         XC    PRCSTYPE(8),PRCSTYPE    INITIAL PROCESS TYPE        @LEA
         SPACE ,                                                   @LEA
***********************************************************************
PICKTSKN DS    0H                                                  @PNA
         L     R5,DICTADR2         GET ADDRESS OF FIXED DICTIONARY @PNA
         A     R5,=AL4(DC3TRSN-DC3BEGIN)   TASKNO ENTRY            @PNA
         CLC   CMODOFST-DICTNTRY(2,R5),=X'FFFF'    EXCLUDED?       @PNA
         BE    PICKPRST            YES, SKIP IT                    @PNA
         SR    R3,R3               CLEAR WORK REGISTER             @PNA
         LH    R3,CMODOFST-DICTNTRY(R5)    GET OFFSET INTO RECORD  @PNA
         AR    R3,R9               ADD TO ACTUAL RECORD ADDRESS    @PNA
         MVC   TASKNO(4),0(R3)     COPY TASK NUMBER FROM RECORD    @PNA
PICKPRST DS    0H                                                  @PNA
         L     R5,DICTADR2         GET ADDRESS OF FIXED DICTIONARY @LEA
         A     R5,=AL4(DC3PTYPE-DC3BEGIN)  PROCESS TYPE ENTRY      @LEA
         CLC   CMODOFST-DICTNTRY(2,R5),=X'FFFF'    EXCLUDED?       @LEA
         BE    PICKNEXT            YES, SKIP IT                    @LEC
         SR    R3,R3               CLEAR WORK REGISTER             @LEA
         LH    R3,CMODOFST-DICTNTRY(R5)    GET OFFSET INTO RECORD  @LEC
         AR    R3,R9               ADD TO ACTUAL RECORD ADDRESS    @LEC
         MVC   PRCSTYPE(8),0(R3)   COPY PROCESS TYPE FROM RECORD   @LEC
PICKNEXT DS    0H                                                  @LEA
PICKEND  DS    0H                                                  @LEA
         L     R14,IDLUPR14        RESTORE OUR RETURN REGISTER     @LEA
         BR    R14                 RETURN TO CALLER                @LEA
         EJECT  ,                                                  @P8A
***********************************************************************
*   HERE WE WANT TO PROCESS ALL THE FIELDS WITHIN THE CURRENTLY       *
* ADDRESSED ROW/RECORD. WE LOOP THROUGH ALL THE IDS/FIELDS IN THE ROW *
* COPYING EACH CICS DATA FIELD FROM THE INPUT RECORD TO THE FIXED     *
* FORMAT OUTPUT RECORD.                                               *
*   THE COUNT OF THE IDS THAT IS HELD IN THE SECTION HEADER IS USED   *
* TO DETERMINE THE NUMBER OF EXECUTIONS OF THIS LOOP.                 *
***********************************************************************
         SPACE ,                                                   @P8A
UNLDPROC DS    0H                                                  @P8A
         ST    R14,IDLUPR14        SAVE OUR RETURN REGISTER        @P8A
         ST    R9,UNLDPR09         SAVE INPUT RECORD ADDRESS       @P8A
         L     R9,ANLCBSV          RESTORE ANLCB ADDRESS           @P8A
         USING ANLCB,R9            ADDRESSABILITY                  @P8A
         L     R0,UT4RADDR         UNLOAD RECORD ADDRESS           @P8A
         LA    R1,MNPDRLEN         LENGTH TO CLEAR                 @P8A
         LR    R14,R0              DUMMY A(SOURCE)                 @LEC
         SR    R15,R15             SOURCE LENGTH = 0               @P8A
         MVCL  R0,R14              CLEAR THE UNLOAD RECORD AREA    @P8A
         SPACE ,                                                   @P8A
         SR    R3,R3               CLEAR WORK REGISTER             @P8A
         LH    R3,SMFMNDCN         GET NUMBER OF CONNECTORS        @P8A
         L     R6,UT4RADDR         UNLOAD RECORD ADDRESS           @P8A
         USING DFHMNPDA,R6         ADDRESSABILITY                  @P8C
         SPACE  ,                                                  @P8A
         DROP  R9                                                  @P8A
         SPACE  ,                                                  @P8A
         L     R9,UNLDPR09         RESTORE INPUT RECORD ADDRESS    @P8A
UNLDLOOP DS    0H                                                  @P8A
         STH   R3,IDSAVE           SAVE NEW NUMBER OF IDS TO DO    @P8A
         BAL   R3,SEARDIC          GET THE DICT ENTRY              @P8A
         CLC   CMODNAME(3),=C'DFH' CICS FIELD?                     @P8A
         BNE   UNLDNEXT            NO, BYPASS NON CICS FIELDS      @P8A
         CLC   CMODOFST(2),=X'FFFF'  FIELD EXISTS IN OUTPUT REC?   @PEA
         BE    UNLDNEXT            NO, BYPASS THE MISSING FIELD    @PEA
         LA    R2,PDRBEGIN         ADDRESS OF THE OUTPUT DATA AREA @PEA
         AH    R2,CMODOFST         ADD OFFSET INTO UNLOADED RECORD @PEA
         SR    R3,R3               CLEAR WORK REGISTER             @P8A
         LH    R3,CMODLENG         GET FIELD LENGTH                @P8A
         BCTR  R3,0                DROP 1 FOR EXECUTE              @P8A
         EX    R3,MOVEDATA         MOVE THE DATA                   @P8A
UNLDNEXT DS    0H                                                  @P8A
         AH    R9,CMODLENG         ADDRESS NEXT DATA IN INPUT RECORD   F
                                                                   @P8A
         AH    R5,SMFMNDCL         A( NEXT CONNECTOR )             @P8A
         SR    R3,R3               CLEAR WORK REGISTER             @P8A
         LH    R3,IDSAVE           GET NUMBER OF COL DESCRIPTORS   @P8A
         BCT   R3,UNLDLOOP         SUBTRACT ONE AND TEST FOR ZERO  @P8A
         EJECT ,                                                   @P8A
***********************************************************************
* COPY INTO THE PERFORMANCE RECORD THE JOBNAME, GENERIC AND SPECIFIC  *
* APPLID'S, THE MVS SYSTEM IDENTIFICATION, THE PERFORMANCE RECORD     *
* VERSION AND THE RECORD MAINTENANCE INDICATOR. IF THE LOCAL TIME     *
* OPTION WAS REQUESTED WE CONVERT THE TRANSACTION START AND STOP      *
* TIMES INTO LOCAL TIME.                                              *
***********************************************************************
         SPACE  ,                                                  @P8A
UNLDEXIT DS    0H                                                  @P8A
         L     R9,ANLCBSV          RESTORE ANLCB ADDRESS           @P8A
         USING ANLCB,R9            ADDRESSABILITY                  @P8A
         MVC   PDRJOBNM,SMFMNJBN   SETUP JOBNAME                   @P8A
         MVC   PDRGAPPL,SMFMNPRN   SETUP GENERIC APPLID            @P8A
         MVC   PDRSAPPL,SMFMNSPN   SETUP SPECIFIC APPLID           @P8A
         MVC   PDRSID,SMFSID       SETUP SYSTEM IDENTIFICATION     @P8A
         MVC   PDRRVN,SMFMNRVN     SETUP RECORD VERSION            @P8A
         MVC   PDRMFL,SMFMNMFL     SETUP MAINTENANCE INDICATOR     @P8A
         MVC   PDRCLASS,SMFMNCL    SETUP PERFORMANCE RECORD CLASS  @P8A
         TM    SORTSW,UNLOADLT     LOCAL TIME OPTION REQUESTED?    @P8A
         BZ    UNLDBYP1            NO, SKIP LOCAL TIME CONVERSION  @P8A
         SPACE ,                                                   @P8A
***********************************************************************
* Convert transaction start time from GMT to Local time.              *
***********************************************************************
         LM    R14,R15,PDRATTT     TRANSACTION START TIME          @P8A
         LM    R0,R1,SMFMNLSO      LEAP SECOND OFFSET              @P8A
         SLR   R14,R0                                              @P8A
         SLR   R15,R1                                              @P8A
         BC    11,NOC_ATT1                                         @P8A
         LA    R0,1                                                @P8A
         SLR   R14,R0                                              @P8A
NOC_ATT1 DS    0H                                                  @P8A
         STM   R14,R15,PDRATTT     TRANSACTION START TIME          @P8A
         SPACE  ,                                                  @P8A
         LM    R14,R15,PDRATTT     TRANSACTION START TIME          @P8A
         LM    R0,R1,SMFMNDTO      LOCAL DATE/TIME OFFSET          @P8A
         ALR   R14,R0                                              @P8A
         ALR   R15,R1                                              @P8A
         BC    12,NOC_ATT2                                         @P8A
         LA    R0,1                                                @P8A
         ALR   R14,R0                                              @P8A
NOC_ATT2 DS    0H                                                  @P8A
         STM   R14,R15,PDRATTT     TRANSACTION START TIME          @P8A
         SPACE  ,                                                  @P8A
***********************************************************************
* Convert transaction stop time from GMT to Local time.               *
***********************************************************************
         LM    R14,R15,PDRDETT     TRANSACTION STOP TIME           @P8A
         LM    R0,R1,SMFMNLSO      LEAP SECOND OFFSET              @P8A
         SLR   R14,R0                                              @P8A
         SLR   R15,R1                                              @P8A
         BC    11,NOC_DET1                                         @P8A
         LA    R0,1                                                @P8A
         SLR   R14,R0                                              @P8A
NOC_DET1 DS    0H                                                  @P8A
         STM   R14,R15,PDRDETT     TRANSACTION STOP TIME           @P8A
         SPACE  ,                                                  @P8A
         LM    R14,R15,PDRDETT     TRANSACTION STOP TIME           @P8A
         LM    R0,R1,SMFMNDTO      LOCAL DATE/TIME OFFSET          @P8A
         ALR   R14,R0                                              @P8A
         ALR   R15,R1                                              @P8A
         BC    12,NOC_DET2                                         @P8A
         LA    R0,1                                                @P8A
         ALR   R14,R0                                              @P8A
NOC_DET2 DS    0H                                                  @P8A
         STM   R14,R15,PDRDETT     TRANSACTION STOP TIME           @P8A
         SPACE ,                                                   @P8A
***********************************************************************
* CALCULATE THE RESPONSE TIME AND INTERNAL RESPONSE TIME, CONVERT     *
* THE TRANSACTION STOP TIMESTAMP INTO SEPARATE DATE AND TIME FIELDS.  *
* FINALLY SETUP THE CROSS SYSTEM WORK REPORT KEY 3; UOW SEQUENCE      *
* SEQUENCE NUMBER CONCATENATED WITH THE STOP TIME.                    *
***********************************************************************
UNLDBYP1 DS    0H                                                  @P8A
         ICM   R1,B'1111',PDRATTT+2    TRANSACTION START TIME      @P8A
         ICM   R2,B'1111',PDRDETT+2    TRANSACTION STOP TIME       @P8A
         SR    R2,R1               CALCULATE RESPONSE TIME         @P8A
         ST    R2,PDRRESP          AND STORE IN THE OUTPUT RECORD  @P8A
         ICM   R1,B'1111',PDRTCWT+2  GET TC I/O WAIT TIME     @PI83312C
         SR    R2,R1               CALCULATE INTERNAL RESPONSE TIME    F
                                                                   @P8A
         ST    R2,PDRIRESP         AND STORE IN THE OUTPUT RECORD  @P8A
         BASR  R11,0                                           @BA63143
         USING *,R11               ADDRESSABILITY              @BA63143
         STCKCONV STCKVAL=PDRDETT,CONVVAL=WRK2,TIMETYPE=BIN,           X
               DATETYPE=YYYYDDD                                    @P8A
         DROP  R11                                             @BA63143
         MVC   PDRTIME(4),WRK2     TRANSACTION STOP TIME           @P8A
         MVC   PDRDATE(4),WRK2+8   TRANSACTION STOP DATE           @P8A
         MVC   PDRSEQNO,PDRNETSX+6 SYNCPOINT SEQUENCE NUMBER       @PBC
         MVC   PDRDETT2,PDRDETT    TRANSACTION STOP DATE/TIME      @P8A
         SPACE ,                                                   @PFA
DB2TOKEN DS    0H                  DB2 ACC'TING CORRELATION TOKEN  @PFA
         MVI   PDRDB2TK,C' '       CLEAR DB2 ACCOUNTING TOKEN      @PFA
         MVC   PDRDB2TK+1(L'PDRDB2TK-1),PDRDB2TK                   @PFA
         LA    R8,PDRDB2TK         R8 -> DB2 ACCOUNTING TOKEN      @PFA
         LA    R2,PDRNETPX         R2 -> NETWORK PREFIX            @PFA
         LA    R14,16              MAX 16 BYTES FOR NETWORK PREFIX @PFA
MOVENWID DS    0H                                                  @PFA
         CLI   0(R2),C'.'          IS THERE A DOT IN THE PREFIX?   @PFA
         BE    FOUNDDOT            YES, SKIP OVER IT (EXTRA LOOP)  @PFA
         CLI   0(R2),X'00'         END OF / OR NO NETWORK PREFIX?  @PFA
         BE    MOVESTCK            YES, GO COPY THE NETWORK SUFFIX @PFA
         MVC   0(1,R8),0(R2)       COPY A BYTE FROM THE PREFIX     @PFA
         LA    R8,1(,R8)           BUMP TO NEXT BYTE IN DB2 TOKEN  @PFA
         LA    R2,1(,R2)           BUMP TO THE NEXT BYTE IN PREFIX @PFA
         BCT   R14,MOVENWID        LOOP THRU NETWORK PREFIX        @PFA
         B     MOVESTCK            GO MOVE IN THE NETWORK SUFFIX   @PFA
         SPACE ,                                                   @PFA
FOUNDDOT DS    0H                  WE FOUND A DOT IN THE PREFIX    @PFA
         LA    R2,1(,R2)           BUMP TO THE NEXT BYTE IN PREFIX @PFA
         B     MOVENWID            EXTRA LOOP (17) BECAUSE OF DOT  @PFA
         SPACE ,                                                   @PFA
MOVESTCK DS    0H                  NOW MOVE THE STCK PART          @PFA
         MVC   0(6,R8),PDRNETSX    MOVE IN THE STCK PART (SUFFIX)  @PFA
         CLC   PDRDB2TK,BLANKS     HAVE WE MOVED ANYTHING?         @PFA
         BNE   ENDTOKEN            YES, THAT'S IT - WE'RE FINISHED @PFA
         XC    PDRDB2TK,PDRDB2TK   NO, SET THE TOKEN TO NULLS      @PFA
ENDTOKEN DS    0H                  END ACCOUNTING TOKEN ROUTINE    @PFA
         SPACE  ,                                                  @P8A
***********************************************************************
* NOW WRITE THE PERFORMANCE RECORD TO THE OUTPUT DATASET.             *
***********************************************************************
         SPACE  ,                                                  @P8A
         L     R8,SYSUT4R          GET SYSUT4 DCB ADDRESS          @P8A
         PUT   (R8),DFHMNPDA       WRITE UNLOADED PERFORMANCE RECORD   F
                                                                   @P8C
         AP    UT4RECS,=P'1'       COUNT PERFORMANCE RECORDS UNLOADED  F
                                                                   @P8A
         SPACE 1                                                   @P8A
         DROP  R6,R9                                               @D5C
         SPACE 1                                                   @P8A
         L     R9,UNLDPR09         RESTORE INPUT RECORD ADDRESS    @P8A
         L     R14,IDLUPR14        RESTORE OUR RETURN REGISTER     @P8A
         BR    R14                 RETURN TO CALLER                @P8A
         EJECT  ,
***********************************************************************
*   HERE WE WANT TO PROCESS ALL THE FIELDS WITHIN THE CURRENTLY       *
* ADDRESSED ROW/RECORD. WE LOOP THROUGH ALL THE IDS/FIELDS IN THE ROW *
* PRINTING EACH FIELD ON A NEW LINE AS IT IS ADDRESSED, AFTER FIRST   *
* PRINTING A MESSAGE DENOTING THE START OF A NEW ROW/RECORD.          *
*   THE COUNT OF THE IDS THAT IS HELD IN THE SECTION HEADER IS USED   *
* TO DETERMINE THE NUMBER OF EXECUTIONS OF THIS LOOP.                 *
*   AS THIS CODE IS DRIVEN ONCE PER RECORD IN THE DATA SECTION, IT    *
* WOULD SEEM TO BE THE PLACE FOR THE USER TO CALL A RECORD PROCESSOR. *
***********************************************************************
         SPACE 1
IDPROC   DS    0H
         ST    R14,IDLUPR14        SAVE OUR RETURN REGISTER
         LA    R6,PRTLNE           ADDRESS PRINT BUILD AREA        @P8A
         USING PRTDSCT,R6          MAP THE PRINTLINE WITH PRINT LAYOUTSF
                                                                   @P8A
         L     R2,ANLCBSV          RESTORE ANLCB ADDRESS           @P8A
         USING ANLCB,R2            ADDRESSABILITY                  @P8A
         SR    R3,R3               CLEAR WORK REGISTER
         LH    R3,SMFMNDCN         GET NUMBER OF CONNECTORS
         MVC   PRTLNE,=C' -'       CLEAR PRINT LINE
         MVC   PRTLNE+2(L'PRTLNE-2),PRTLNE+1
         MVC   PLTITLR,DLTITLR     SAY THIS IS A NEW RECORD
         MVC   PLDESCU,DLDESCU         AND PUT HEADINGS FOR THE
         MVC   PLDESCI,DLDESCI             PRINT LAYOUT
         MVC   PLDESCR,=X'40202020202020202120'    EDIT MASK       @P8A
         ED    PLDESCR,PERRECS+3   EDIT IN RECORD NUMBER           @P8A
         PUT   (R8),PRTLNE         PRINT DATA LINE                 @P8C
         PUT   (R8),SPACES         PRINT EMPTY LINE
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         NI    EMPTIES,X'7F'       CLEAR EMPTY-FIELD FLAG
         EJECT
***********************************************************************
*   AS THIS CODE IS DRIVEN ONCE PER FIELD IN THE DATA RECORDS, IT     *
* WOULD SEEM TO BE THE PLACE FOR THE USER TO CALL A FIELD PROCESSOR.  *
***********************************************************************
         SPACE 1
IDLOOP   DS    0H                  PRINT DETAILS OF EACH ID IN THE ROW
         STH   R3,IDSAVE           SAVE NEW NUMBER OF IDS TO DO
         BAL   R3,SEARDIC          GET THE DICT ENTRY
         LH    R3,CMODLENG         GET FIELD LENGTH
         BCTR  R3,0                DROP 1 FOR EXECUTE
         EX    R3,EMPTTEST         CHECK FIELD NOT EMPTY
         BZ    IDBY0               ITS EMPTY
         BAL   R14,FLDPRINT        SET UP PRINT LINE FOR THIS FIELD
         B     IDBY1               NORMAL RETURN
         SPACE
IDBY0    DS    0H                  EMPTY-FIELD PROCESSING
         TM    EMPTIES,X'80'       ... ALREADY PRINTED ?
         BO    IDBY2               YES, BRANCH
         PUT   (R8),EMPTREPT       PRINT ...
         OI    EMPTIES,X'80'       INDICATE EMPTY-FIELD DONE
         B     IDBY2
IDBY1    DS    0H
         NI    EMPTIES,X'7F'       CLEAR EMPTY-FIELD FLAG
         PUT   (R8),PRTLNE         PRINT DATA LINE FOR THIS FIELD  @P8C
IDBY2    DS    0H
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         AH    R9,CMODLENG         ADDRESS NEXT DATA IN RECORD
         AH    R5,SMFMNDCL         A( NEXT CONNECTOR )
         SR    R3,R3               CLEAR WORK REGISTER
         LH    R3,IDSAVE           GET NUMBER OF COL DESCRIPTORS
         BCT   R3,IDLOOP           SUBTRACT ONE AND TEST FOR ZERO
IDXIT    DS    0H                  NO MORE IDS FOR THIS ROW
         L     R14,IDLUPR14        RESTORE OUR RETURN REGISTER
         BR    R14                 RETURN TO CALLER
         SPACE 1
         DROP  R2                                                  @P8A
         EJECT ,
***********************************************************************
*  THIS SECTION CONTROLS THE PRINTING OF THE DATA FOR EACH FIELD.     *
*  IT USES A DIFFERENT ROUTINE FOR EACH OF THE TYPES OF DATA PLUS     *
* ANOTHER WHICH GIVES A HEX LISTING OF THE CONTENTS OF ALL FIELDS.    *
***********************************************************************
         SPACE 1
FLDPRINT DS    0H
         LH    R3,CMODLENG         FIELDSIZE
         BCTR  R3,0                FOR EX INSTRUCTION
         EX    R3,EMPTTEST         FIELD IS EMPTY?
         BZ    4(,R14)             YES, RETURN ABNORMAL
         ST    R14,FLDR14SV        STORE RETURN REGISTER
         MVC   PLFTITL(8),CMODNAME     FIELD-TITLE - FIELD NAME    @PYC
         MVC   PLFTITL+9(1),CMODTYPE   FIELD-TITLE - FIELD TYPE    @PYC
         MVC   PLFTITL+10(3),CMODIDNT  FIELD-TITLE - FIELD IDNT    @PYC
         MVC   PLFTITL+18(8),CMODHEAD  FIELD-TITLE - FIELD HEADING @PYA
         MVC   FLDLEN,CMODLENG     SET DATA LENGTH FOR FLDPRINT ROUTINE
         CLI   CMODTYPE,C'C'       IS IT BYTE-STRING DATA ?
         BE    FLDPNOHX            YES, NO HEX TO DO
         CLI   CMODTYPE,C'S'       IS IT STOPWATCH DATA ?          @D6A
         BE    FLDPNOHX            YES, NO HEX TO DO               @D6A
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN
FLDPNOHX DS    0H                  CHECK FOR SPECIAL TYPE FIELDS   @PAC
         CLC   CMODIDNT,=C'064'    TASKFLAG?                       @P8A
         BE    FLDPXIT             YES, SKIP FORMATTING RTN        @P8A
         CLC   CMODIDNT,=C'082'    TRNGRPID?                       @Q5C
         BE    FLDPSPCL            YES, SPECIAL FORMATTING RTN     @Q5C
         CLC   CMODIDNT,=C'098'    UOWID?                          @Q5A
         BE    FLDPSPCL            YES, SPECIAL FORMATTING RTN     @Q5A
         CLC   CMODIDNT,=C'164'    TRANFLAG?                       @P8A
         BE    FLDPXIT             YES, SKIP FORMATTING RTN        @P8A
         CLC   CMODIDNT,=C'165'    TERMINFO?                       @P8A
         BE    FLDPXIT             YES, SKIP FORMATTING RTN        @P8A
         CLC   CMODIDNT,=C'190'    RRMSURID?                       @LGA
         BE    FLDPSPCL            YES, SPECIAL FORMATTING RTN     @LGA
         CLC   CMODIDNT,=C'194'    OTSTID?                         @LGA
         BE    FLDPSPCL            YES, SPECIAL FORMATTING RTN     @LGA
         CLC   CMODIDNT,=C'202'    PRCSID?                         @LGA
         BE    FLDPSPCL            YES, SPECIAL FORMATTING RTN     @LGA
         CLC   CMODIDNT,=C'203'    ACTVTYID?                       @LGA
         BE    FLDPSPCL            YES, SPECIAL FORMATTING RTN     @LGA
         CLC   CMODIDNT,=C'370'    OTRANFLG?                       @LKA
         BE    FLDPXIT             YES, SPECIAL FORMATTINF RTN     @LKA
         B     FLDNOPRT            BRANCH TO NORMAL FORMATTING RTN @PAA
         SPACE ,                                                   @PAA
FLDPSPCL DS    0H                  SPECIAL TYPE C FIELDS           @PAA
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN           @PAA
         B     FLDPXIT             BRANCH TO FORMATTING RTN EXIT   @PAA
         SPACE ,                                                   @PAA
FLDNOPRT DS    0H                                                  @P8A
         BASR  R14,0               Address location pointer    @BA63143
         AHI   R14,FLDPXIT-*       Address schedule exit           @D6C
         CLI   CMODTYPE,C'A'       IS IT BINARY FORM ?
         BE    FLDBIPRT            DO BINARY FORMAT RTN.
         CLI   CMODTYPE,C'C'       IS IT BYTE-STRING DATA?
         BE    FLDCHPRT            DO BYTE-STRING DISPLAY
         CLI   CMODTYPE,C'S'       STOPWATCH?
         BE    FLDCLPRT            DO CLOCK FORMATTING RTN
         CLI   CMODTYPE,C'T'       TIMESTAMP?
         BE    FLDCLDBL            DO CLOCK FORMATTING RTN
         CLI   CMODTYPE,C'P'       IS THIS PACKED DECIMAL DATA?
         BE    FLDPKPRT            DO PACKED FORMATTING RTN
FLDPXIT  DS    0H                  ROUTINE COMMON EXIT
         L     R14,FLDR14SV        RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         EJECT  ,
***********************************************************************
*   THIS ROUTINE PRINTS INTERPRETED FORMS OF CLOCK AND TIMER DATA.    *
***********************************************************************
         SPACE
FLDCLDBL DS    0H                  DOUBLE WORD TIMER FIELD
         ST    R14,FLDP14SV        SAVE OUR RETURN REGISTER
         XC    IPPARMS(8),IPPARMS  CLEAR STCK PARM AREA            @LEA
         MVC   IPPARMS(8),0(R9)    MOVE STCK DATA TO PARAMETER AREA    F
                                                                   @LEA
         L     R2,ANLCBSV          RESTORE ANLCB ADDRESS           @LEA
         USING ANLCB,R2            ADDRESSABILITY                  @LEA
         TM    PROCESSW,LOCALT     PRINT TIMESTAMPS IN LOCAL TIME? @LEA
         BZ    FLDCLDBC            NO, CONTINUE WITH PROCESSING    @LEA
         SPACE ,                                                   @LEA
         DROP  R2                                                  @LEA
         SPACE ,                                                   @LEA
***********************************************************************
* Convert stck timestamp from GMT to Local time.                      *
***********************************************************************
         LM    R14,R15,IPPARMS     STCK TIME STAMP                 @LEA
         LM    R0,R1,SMFMNLSO      LEAP SECOND OFFSET              @LEA
         SLR   R14,R0                                              @LEA
         SLR   R15,R1                                              @LEA
         BC    11,NOCSTCK1                                         @LEA
         LA    R0,1                                                @LEA
         SLR   R14,R0                                              @LEA
NOCSTCK1 DS    0H                                                  @LEA
         LM    R0,R1,SMFMNDTO      LOCAL DATE/TIME OFFSET          @LEA
         ALR   R14,R0                                              @LEA
         ALR   R15,R1                                              @LEA
         BC    12,NOCSTCK2                                         @LEA
         LA    R0,1                                                @LEA
         ALR   R14,R0                                              @LEA
NOCSTCK2 DS    0H                                                  @LEA
         STM   R14,R15,IPPARMS     CONVERTED TIMESTAMP VALUE       @LEA
         SPACE ,                                                   @LEA
FLDCLDBC DS    0H                                                  @LEA
         BASR  R11,0                                           @BA63143
         USING *,R11               ADDRESSABILITY              @BA63143
         STCKCONV STCKVAL=IPPARMS,CONVVAL=TODOP,                       X
               TIMETYPE=DEC,DATETYPE=YYYYMMDD                      @LEC
         DROP  R11                                             @BA63143
*                                  EDIT CONVERTED DATE AND TIME
         MVC   PLCHRTIM(10),=X'21202020612020612020'               @P8C
         ED    PLCHRTIM(10),TODOP+8                                @P8C
         MVC   TIMEWORK(16),=X'F021207A20207A20204B202020202020'   @P8C
         ED    TIMEWORK(16),TODOP  EDIT CONVERTED TIME             @P8C
         MVC   PLCHRTIM+11(15),TIMEWORK+1                          @P8A
FLDCLDBX DS    0H
         B     FLDCLXIT            -> TO ROUTINE EXIT
         EJECT ,                                                   @LEC
FLDCLPRT DS    0H                                                  @D6C
         CLC   SMFMNRVN,=XL2'0650' PRIOR TO CICS 6.5.0?            @D6A
         BL    FLDCLDBY            YES, PROCESS AS 8 BYTE FORMAT   @D6A
*                                  NO, PROCESS AS 12 BYTE FORMAT
         ST    R14,FLDP14SV        SAVE OUR RETURN REGISTER        @D6A
*                                  DO HEX FORMATTING FIRST
         UNPK  PLWORDS+00(9),00(5,R9)                              @D6A
         TR    PLWORDS+00(8),TRTAB                                 @D6A
         MVI   PLWORDS+08,C' '                                     @D6A
         SPACE ,                                                   @D6A
         UNPK  PLWORDS+08(9),04(5,R9)                              @D6A
         TR    PLWORDS+08(8),TRTAB                                 @D6A
         MVI   PLWORDS+16,C' '                                     @D6A
         SPACE ,                                                   @D6A
         UNPK  PLWORDS+16(9),08(5,R9)                              @D6A
         TR    PLWORDS+16(8),TRTAB                                 @D6A
         MVI   PLWORDS+24,C' '                                     @D6A
         SPACE ,                                                   @D6A
         XC    IPPARMS(8),IPPARMS  CLEAR STCK PARM AREA            @P8C
         MVC   IPPARMS(8),0(R9)    MOVE DATA TO FIRST 2 WORDS OF PARM  F
                                                                   @D6C
         LG    R2,IPPARMS          LOAD VALUE INTO 64 BIT R2       @D7C
         SRLG  R3,R2,12            CONVERT TOD UNIT TO MICROSECS IN    F
                                   64 BIT R3                       @D7A
         DSG   R2,MICSDAY          CONVERT MICROSECONDS TO DAYS    @D7A
         CVDG  R3,WRK7             CONVERT TO PACKED DECIMAL       @D7C
         UNPK  TIMEWORK(4),WRK7+14(2)  CONVERT TO CHARACTER        @D7C
         OI    TIMEWORK+3,X'F0'    MAKE SURE SIGN IS OK            @D6A
         MVC   PLCHRDAY(3),TIMEWORK+1  DAYS IN HERE (DDD)          @D6A
         SPACE ,                                                   @D6A
         BASR  R11,0                                               @D6C
         USING *,R11               ADDRESSABILITY              @BA63143
         STCKCONV STCKVAL=IPPARMS,CONVVAL=TODOP,TIMETYPE=DEC       @P8C
         DROP  R11                                             @BA63143
         MVC   TIMEWORK(16),=X'F021207A20207A20204B202020202020'   @P8C
         ED    TIMEWORK(16),TODOP  EDIT CONVERTED TIME             @P8C
         MVC   PLCHRTIM(15),TIMEWORK+1                             @D6C
         SPACE ,                                                   @D6A
         SR    R3,R3               CLEAR REG FOR WORK
         ICM   R3,B'0111',9(R9)    START-COUNT                     @D6C
         CVD   R3,WRK2             CONVERT IT TO DECIMAL           @P8C
         MVC   PLCLKCNT,=X'40202020202020202020' .
         ED    PLCLKCNT,WRK2+3     CONV. TO CHAR IN PRINT LINE     @P8C
         TM    8(R9),X'06'         PHASE ERRORS ?                  @D6C
         BZ    FLDCLXIT            NONE, -> TO RTN EXIT
         MVC   PLCLKCNT+11(19),=CL19'(INCL PHASE-ERRORS)'
         TM    8(R9),X'06'         PHASE ERRORS ?                  @D6C
         BO    FLDCLXIT            BOTH TYPES, -> TO RTN EXIT
         MVC   PLCLKCNT+11(19),=CL19'(TOO MANY STOPS)'
         TM    8(R9),X'02'         MISSING STARTS ?                @D6C
         BO    FLDCLXIT            YES, -> TO RTN EXIT
         MVC   PLCLKCNT+11(19),=CL19'(TOO MANY STARTS)'
         B     FLDCLXIT            -> TO RTN EXIT
         SPACE 1
FLDCLNEG DS    0H                  CLOCK HAS NOT STOPPED
         MVC   PLCLKCNT(7),=CL7'INVALID'
FLDCLXIT DS    0H
         L     R14,FLDP14SV        RESTORE RETURN ADDRESS
         BR    R14                 GO BACK
         EJECT ,                                                   @D6A
FLDCLDBY DS    0H                                                  @D6A
         ST    R14,FLDP14SV        SAVE OUR RETURN REGISTER        @D6A
*                                  DO HEX FORMATTING FIRST
         UNPK  PLWORDS+00(9),00(5,R9)                              @D6A
         TR    PLWORDS+00(8),TRTAB                                 @D6A
         MVI   PLWORDS+08,C' '                                     @D6A
         SPACE ,                                                   @D6A
         UNPK  PLWORDS+08(9),04(5,R9)                              @D6A
         TR    PLWORDS+08(8),TRTAB                                 @D6A
         MVI   PLWORDS+16,C' '                                     @D6A
         SPACE ,                                                   @D6A
         XC    IPPARMS(8),IPPARMS  CLEAR STCK PARM AREA            @D6A
         MVC   IPPARMS+2(4),0(R9)  MOVE DATA TO FIRST 2 WORDS OF PARM  F
                                                                   @D6A
         SPACE ,                                                   @D6A
         BASR  R11,0                                               @D6A
         USING *,R11               ADDRESSABILITY                  @D6A
         STCKCONV STCKVAL=IPPARMS,CONVVAL=TODOP,TIMETYPE=DEC       @D6A
         DROP  R11                                                 @D6A
         MVC   TIMEWORK(16),=X'F021207A20207A20204B202020202020'   @D6A
         ED    TIMEWORK(16),TODOP  EDIT CONVERTED TIME             @D6A
         MVC   PLCHRTIM(15),TIMEWORK+1                             @D6A
         SPACE ,                                                   @D6A
         SR    R3,R3               CLEAR REG FOR WORK              @D6A
         ICM   R3,B'0111',5(R9)    START-COUNT                     @D6A
         CVD   R3,WRK2             CONVERT IT TO DECIMAL           @D6A
         MVC   PLCLKCNT,=X'40202020202020202020' .                 @D6A
         ED    PLCLKCNT,WRK2+3     CONV. TO CHAR IN PRINT LINE     @D6A
         TM    4(R9),X'06'         PHASE ERRORS ?                  @D6A
         BZ    FLDCLXIT            NONE, -> TO RTN EXIT            @D6A
         MVC   PLCLKCNT+11(19),=CL19'(INCL PHASE-ERRORS)'          @D6A
         TM    4(R9),X'06'         PHASE ERRORS ?                  @D6A
         BO    FLDCLXIT            BOTH TYPES, -> TO RTN EXIT      @D6A
         MVC   PLCLKCNT+11(19),=CL19'(TOO MANY STOPS)'             @D6A
         TM    4(R9),X'02'         MISSING STARTS ?                @D6A
         BO    FLDCLXIT            YES, -> TO RTN EXIT             @D6A
         MVC   PLCLKCNT+11(19),=CL19'(TOO MANY STARTS)'            @D6A
         B     FLDCLXIT            -> TO RTN EXIT                  @D6A
         EJECT  ,
***********************************************************************
*          THIS ROUTINE PRINTS CONTENTS OF ALL FIELDS IN HEX          *
*                                                                     *
*   THE UNPACKS BELOW WILL MANAGE 4-BYTE AND 8-BYTE FIELDS, LONGER    *
*   FIELDS BEING TREATED AS 8-BYTE FIELDS WITH '...' INDICATION.      *
***********************************************************************
         SPACE 1
FLDHXPRT DS    0H
         ST    R14,FLDP14SV        SAVE OUR RETURN REGISTER
         LH    R3,FLDLEN           SOURCE LENGTH CODE
         C     R3,=F'6'            IF FIELD TO BE UNPKD IS LONGER
         BH    FLDHX2UP            THAN 6 BYTES, DO 2 UNPKS
         LR    R0,R3               SOURCE LENGTHCODE
         ALR   R0,R0                  X 2 = TARGET LENGTHCODE
         SLL   R0,4                TO LEFT HALF-BYTE
         ALR   R3,R0               COMBINE LENGTHS
*              E.G. 4 BYTE SOURCE FIELD WILL GIVE SOURCE LENGTHCODE
*                 OF 4 AND TARGET LENGTHCODE OF 8. THE EX-ECUTED
*                 UNPK WOULD THEREFORE UNPACK 5 BYTES INTO 9.
         EX    R3,FLDHXUPK         UNPACK INPUT DATA
         TR    PLUNPK,TRTAB        TRANSLATE OUTPUT
*              HOWEVER THE UNPK PRODUCED, E.G. 9 BYTES WHEN ONLY 8
*              BYTES, WERE REQUIRED.
         LH    R3,FLDLEN           SOURCE LENGTH CODE
         ALR   R3,R3               X 2 = TARGET LENGTH CODE
         LA    R3,PLUNPK(R3)       ADDRESS EXCESS BYTE
         MVI   0(R3),C' '          AND SET IT TO BLANK
         B     FLDHXXIT
         SPACE 1
FLDHX2UP DS    0H                  DOUBLE UNPACK FOR LONG FIELD
         UNPK  PLUNPK21,0(3,R9)       UNPACK HIGH BYTES
         UNPK  PLUNPK22,2(7,R9)       THEN REMAINDER
         TR    PLUNPK21(PLUNPK2L),TRTAB       TRANSLATE OUTPUT
         MVI   PLUPSPAR,C' '       BLANK OUT THE EXTRA CHARACTER
         CLC   FLDLEN,=H'8'        MORE THAN 8 BYTES ?
         BNH   FLDHXXIT            NO, BRANCH
         MVC   PLUPSPAR(3),=C'...' INDICATE EXCESS
FLDHXXIT DS    0H                  ROUTINE EXIT
         L     R14,FLDP14SV        RESTORE CALLER'S ADDRESS
         BR    R14                 RETURN
         EJECT  ,                                                  @Q6A
***********************************************************************
* THIS ROUTINE PRINTS CONTENTS OF ALL BYTE-STRING FIELDS - AS IS      *
***********************************************************************
         SPACE 1                                                   @Q6A
FLDIDPRT DS    0H                  *** BYTE-STRING ROUTINE ***     @Q6A
         ST    R14,FLDP14SV        STORE CALLER'S ADDRESS          @Q6A
         LA    R9,0(,R9)                                           @Q6A
         ST    R9,FLDCHR9          STORE FIELD-POINTER             @Q6A
         LH    R3,FLDLEN           GET LENGTH-OF-DATA              @Q6A
FLDIDLP1 DS    0H                  FOR EACH 20 BYTES OF FIELD ...  @Q6A
*        LEFT COLUMN SHOWS OFFSET (0, 16, 32,...)
         LR    R1,R9                                               @Q6A
         S     R1,FLDCHR9          HEX OFFSET                      @Q6A
         BZ    FLDIDNOF                                            @Q6A
         STH   R1,FLDCHOFF                                         @Q6A
         UNPK  PLOFFSET(5),FLDCHOFF(3)                             @Q6A
         TR    PLOFFSET(4),TRTAB                                   @Q6A
         MVI   PLOFFSET+4,C' '                                     @Q6A
         MVC   PLOFFSET-2(2),=C'+X'                                @Q6A
FLDIDNOF DS    0H                                                  @Q6A
         LR    R2,R3               REMAINING LENGTH                @Q6A
         C     R3,=F'20'           MUCH LEFT ?                     @Q6A
         BNH   FLDIDBY1            NO, BRANCH                      @Q6A
         LA    R2,20               YES, LIMIT LENGTH               @Q6A
FLDIDBY1 DS    0H                                                  @Q6A
         SR    R3,R2               LENGTH TO MOVE THIS TIME ROUND  @Q6A
         LA    R1,0(R2,R9)         A( REMAINING SOURCE )           @Q6A
         LA    R14,PLWORDS         START OF PRINTLINE HEX FIELD    @Q6A
*        MIDDLE COLUMNS DISPLAYS UP TO 20 HEX-REPRESENTATIONS
FLDIDFM1 DS    0H                                                  @Q6A
         CL    R2,=F'4'                 IF LESS THAN 4 BYTES LEFT  @Q6A
         BL    FLDIDLFB                 HANDLE THEM                @Q6A
         MVC   FLDWK5(4),0(R9)          GET FIRST/NEXT 4 BYTES     @Q6A
         UNPK  0(9,R14),FLDWK5                                     @Q6A
         TR    0(8,R14),TRTAB              HEX-WORD                @Q6A
         MVI   8(R14),C' '                                         @Q6A
         S     R2,=F'4'                                            @Q6A
         BNP   FLDIDBYX                    BRANCH IF NO REMAINDER  @Q6A
         LA    R14,9(,R14)         NEXT BYTE OF PRINTLINE HEX FIELD    F
                                                                   @Q6A
         LA    R9,4(,R9)           NEXT BYTE OF FIELD              @Q6A
         B     FLDIDFM1            PROCESS NEXT PORTION OF FIELD   @Q6A
*        LESS THAN 4 BYTES OF FIELD REMAINING
FLDIDLFB DS    0H                                                  @Q6A
         BCTR  R2,0                ASSEMBLER LENGTH OF REMAINDER   @Q6A
         EX    R2,FLDMVC1          COPY REMAINDER                  @Q6A
         UNPK  FLDWK9,FLDWK5       UNPACK REMAINDER                @Q6A
         TR    FLDWK9,TRTAB        TRANSLATE REMAINDER (HEX)       @Q6A
         LA    R2,1(,R2)           REAL LENGTH OF REMAINDER        @Q6A
         SLL   R2,1                REAL LENGTH * 2                 @Q6A
         BCTR  R2,0                ASSEMBLER LENGTH                @Q6A
         EX    R2,FLDMVC2          INSERT REMAINDER IN LINE (HEX)  @Q6A
FLDIDBYX DS    0H                                                  @Q6A
         LTR   R3,R3               ANYTHING LEFT ?                 @Q6A
         BNP   FLDIDXIT            NO, BRANCH                      @Q6A
         LR    R9,R1               A( REMAINING SOURCE )           @Q6A
         LR    R2,R3               COPY ITS LENGTH                 @Q6A
         BCTR  R2,0                FOR EXECUTED OC                 @Q6A
         EX    R2,FLDCHCF          IS REMAINING SOURCE EMPTY ?     @Q6A
         BZ    FLDIDXIT            YES, BRANCH                     @Q6A
         SPACE ,                                                   @Q6A
*   THERE WILL BE AT LEAST ONE MORE LINE FOR THIS FIELD, THEREFORE
*        PRINT WHAT IS ALREADY SET UP...
         PUT   (R8),PRTLNE         PRINT LINE AS IT IS             @Q6A
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @Q6A
         B     FLDIDLP1            TRY AGAIN                       @Q6A
         SPACE 1                                                   @Q6A
FLDIDXIT DS    0H                                                  @Q6A
*   AT LEAST ONE LINE OF THIS BYTE-STRING FIELD IS YET TO BE PRINTED...
         L     R9,FLDCHR9          RESTORE FIELD-POINTER           @Q6A
         L     R14,FLDP14SV        RESTORE CALLER'S ADDRESS        @Q6A
         BR    R14                 RETURN                          @Q6A
         EJECT  ,
***********************************************************************
* THIS ROUTINE PRINTS CONTENTS OF ALL BYTE-STRING FIELDS - AS IS      *
***********************************************************************
         SPACE 1
FLDCHPRT DS    0H                  *** BYTE-STRING ROUTINE ***
         ST    R14,FLDP14SV        STORE CALLER'S ADDRESS
         LA    R9,0(,R9)
         ST    R9,FLDCHR9          STORE FIELD-POINTER
         LH    R3,FLDLEN           GET LENGTH-OF-DATA
FLDCHLP1 DS    0H                  FOR EACH 20 BYTES OF FIELD ...
*        LEFT COLUMN SHOWS OFFSET (0, 16, 32,...)
         LR    R1,R9
         S     R1,FLDCHR9          HEX OFFSET
         BZ    FLDCHNOF
         STH   R1,FLDCHOFF
         UNPK  PLOFFSET(5),FLDCHOFF(3)
         TR    PLOFFSET(4),TRTAB
         MVI   PLOFFSET+4,C' '
         MVC   PLOFFSET-2(2),=C'+X'
FLDCHNOF DS    0H
         LR    R2,R3               REMAINING LENGTH
         C     R3,=F'20'           MUCH LEFT ?
         BNH   FLDCHBY1            NO, BRANCH
         LA    R2,20               YES, LIMIT LENGTH
FLDCHBY1 DS    0H
         SR    R3,R2               LENGTH TO MOVE THIS TIME ROUND
         LA    R1,0(R2,R9)         A( REMAINING SOURCE )
         LA    R14,PLWORDS         START OF PRINTLINE HEX FIELD    @LMA
         LA    R15,PLCHARS         START OF PRINTLINE CHAR FIELD   @LMA
*        MIDDLE COLUMNS DISPLAYS UP TO 20 HEX-REPRESENTATIONS
*        RIGHT COLUMN DISPLAYS UP TO 20 CHARACTERS
FLDCHFM1 DS    0H
         CL    R2,=F'4'                 IF LESS THAN 4 BYTES LEFT  @LMA
         BL    FLDCHLFB                 HANDLE THEM                @LMA
         MVC   FLDWK5(4),0(R9)          GET FIRST/NEXT 4 BYTES     @LMA
         UNPK  0(9,R14),FLDWK5                                     @LMC
         TR    0(8,R14),TRTAB              HEX-WORD                @LMC
         MVI   8(R14),C' '                                         @LMC
         MVC   0(4,R15),0(R9)              CHAR-WORD               @LMC
         S     R2,=F'4'
         BNP   FLDCHBYX                    BRANCH IF NO REMAINDER
         LA    R14,9(,R14)         NEXT BYTE OF PRINTLINE HEX FIELD@LMA
         LA    R15,4(,R15)         NEXT BYTE TO PRINTLINE CHR FIELD@LMA
         LA    R9,4(,R9)           NEXT BYTE OF FIELD              @LMA
         B     FLDCHFM1            PROCESS NEXT PORTION OF FIELD   @LMA
*        LESS THAN 4 BYTES OF FIELD REMAINING
FLDCHLFB DS    0H                                                  @LMA
         BCTR  R2,0                ASSEMBLER LENGTH OF REMAINDER   @LMA
         EX    R2,FLDMVC1          COPY REMAINDER                  @LMA
         UNPK  FLDWK9,FLDWK5       UNPACK REMAINDER                @LMA
         TR    FLDWK9,TRTAB        TRANSLATE REMAINDER (HEX)       @LMA
         LA    R2,1(,R2)           REAL LENGTH OF REMAINDER        @LMA
         SLL   R2,1                REAL LENGTH * 2                 @LMA
         BCTR  R2,0                ASSEMBLER LENGTH                @LMA
         EX    R2,FLDMVC2          INSERT REMAINDER IN LINE (HEX)  @LMA
         LA    R2,1(,R2)           REAL LENGTH * 2                 @LMA
         SRL   R2,1                REAL LENGTH                     @LMA
         BCTR  R2,0                ASSEMBLER LENGTH                @LMA
         EX    R2,FLDMVC3          INSERT REMAINDER IN LINE (CHAR) @LMA
FLDCHBYX DS    0H
         LTR   R3,R3               ANYTHING LEFT ?
         BNP   FLDCHXIT            NO, BRANCH
         LR    R9,R1               A( REMAINING SOURCE )
         LR    R2,R3               COPY ITS LENGTH
         BCTR  R2,0                FOR EXECUTED OC
         EX    R2,FLDCHCF          IS REMAINING SOURCE EMPTY ?
         BZ    FLDCHXIT            YES, BRANCH
         SPACE ,
*   THERE WILL BE AT LEAST ONE MORE LINE FOR THIS FIELD, THEREFORE
*        PRINT WHAT IS ALREADY SET UP...
         PUT   (R8),PRTLNE         PRINT LINE AS IT IS             @P8C
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         B     FLDCHLP1            TRY AGAIN
         SPACE 1
FLDCHXIT DS    0H
*   AT LEAST ONE LINE OF THIS BYTE-STRING FIELD IS YET TO BE PRINTED...
         L     R9,FLDCHR9          RESTORE FIELD-POINTER
         L     R14,FLDP14SV        RESTORE CALLER'S ADDRESS
         BR    R14                 RETURN
         EJECT  ,
***********************************************************************
*               THIS ROUTINE EDITS PACKED DATA                        *
***********************************************************************
         SPACE 1
FLDPKPRT DS    0H
         ST    R14,FLDP14SV        STORE CALLER'S ADDRESS
         CLI   1(R9),X'99'         IS IT PACKED ?
         BNH   FLDPKCNT            YES, WELL THE FIRST BYTE MAYBE
         MVC   PLPAKOUT+28(4),0(R9) MOVE NON-PACKED TRAN NUMBER
         B     FLDPKXIT            AND EXIT
         SPACE 1
FLDPKCNT DS    0H
         LH    R3,FLDLEN           GET LENGTH-OF-DATA FROM DICT.
         BCTR  R3,0                REDUCE FOR EXECUTE
         EX    R3,FLDPKMVC         MOVE FLD TO AREA OF KNOWN LENG  @PWA
         LA    R2,FLDPKWK2         ADDRESS OF FIELD AREA           @PWA
         IC    R14,0(R3,R2)        LAST CHAR                       @PWC
         O     R14,=F'15'          LAST HALF-BYTE
         STC   R14,0(R3,R2)        FORCE +VE                       @PWC
         LH    R3,FLDLEN           GET LENGTH-OF-DATA FROM DICT.   @PWA
         BCTR  R3,0                REDUCE FOR EXECUTE              @PWA
         EX    R3,FLDPKZAP         MOVE FLD TO AREA OF KNOWN LENG
         MVC   PLPAKOUT,FLDPKPAT   PUT PATTERN IN OUTPUT           @PWA
         ED    PLPAKOUT,FLDPKWK1   EDIT INPUT TO OUTPUT            @PWA
FLDPKXIT DS    0H                  ROUTINE EXIT
         L     R14,FLDP14SV        RESTORE CALLER'S ADDRESS
         BR    R14                 RETURN
         EJECT  ,
***********************************************************************
*        THIS ROUTINE EDITS BINARY COUNT DATA                         *
***********************************************************************
         SPACE 1
FLDBIPRT DS    0H
         ST    R14,FLDP14SV        SAVE RETURN ADDRESS
         LM    R2,R3,0(R9)         GET INPUT FIELD
         CLC   FLDLEN,=H'4'           INTO REGS
         BH    FLDBIBY1                  2 AND 3
         LR    R3,R2
         SR    R2,R2
FLDBIBY1 DS    0H
         CLM   R2,B'1000',=X'00'   VERY BIG ?
         BE    FLDBIBY2            NO, BRANCH
         SRDL  R2,10
         MVC   PLBINFLG,=C' X 2**10'
FLDBIBY2 DS    0H
         D     R2,=F'1000000000'
         CVD   R3,FLDPKWK1         HI-ORDER (BILLIONS)
         CVD   R2,FLDPKWK1+8       LO-ORDER (< 1 BN.)..
         LM    R2,R3,FLDPKWK1
         SRDL  R2,4                SQUEEZE OUT HI-SIGN
         STM   R2,R3,FLDPKWK1
         MVC   FLDPKWK1+8(5),FLDPKWK1+11 SQUEEZE OUT LO-ZEROES
         MVC   PLBINOUT-1(L'FLDBIPAT),FLDBIPAT  PATTERN
         ED    PLBINOUT-1(L'FLDBIPAT),FLDPKWK1  EDIT
FLDBIXIT DS    0H                  ROUTINE EXIT
         L     R14,FLDP14SV        RESTORE CALLER'S ADDRESS
         BR    R14                 RETURN
         SPACE  ,                                                  @P8A
         DROP  R6                                                  @P8A
         EJECT
***********************************************************************
*                                                                     *
*  ROUTINE TO SEARCH DICTIONARY FOR ENTRY MATCHING CURRENT FIELD ID   *
*                                                                     *
*          R 3 = RETURN REGISTER                                      *
*          R 4 = WORK REGISTER                                        *
*          R 5 = CONNECTOR IN SEGMENT SECTION DATA  (CURRENT ID)      *
*          R 9 = END OF CONNECTORS OR START OF DATA                   *
*          R10 = DICT ENTRY FOR PERFORMANCE CLASS                     *
*                                                                     *
***********************************************************************
         SPACE
SEARDIC  DS    0H
         STM   R11,R9,RSAVE        SAVE REGISTERS ... IN CASE !!
         L     R10,DICTADDR        R10 -> PERFORMANCE RECORD DICTIONARYF
                                                                   @P8A
SEARDI1  DS    0H
         SR    R4,R4               CLEAR FOR WORK
         LH    R4,0(R5)            GET CONNECTOR NUMBER
         BCTR  R4,0                SUBTRACT ONE
         MH    R4,=Y(CMODNEXT-CMODNAME)    TIMES LENGTH OF AN ENTRY
         AR    R10,R4              OFFSET INTO THE DICTIONARY
         C     R10,DICTENDS        OVERSHOT?
         BNL   SEARDI2             YES, OOPS SOMETHING'S WRONG
         CLC   CMODCONN,0(R5)      COMPARE CONNECTORS
         BE    SEARDXIT            -> IF THEY MATCH, OTHERWISE
SEARDI2  DS    0H
         UNPK  WRK2(5),0(3,R5)                                     @P8C
         TR    WRK2(4),TRTAB                                       @P8C
         MVC   MSG108+3(4),WRK2    PUT THE NUMBER INTO THE MESSAGE @P8C
         PUT   (R8),MSG108         OUTPUT ERROR MESSAGE
         ABEND 108,DUMP            AND ABEND
         SPACE
SEARDXIT DS    0H                  *** RETURN FROM SEARCH ***
         LM    R11,R9,RSAVE         RESTORE REGISTERS SAVED
         BR    R3                  RETURN TO CALLING ROUTINE
         SPACE  ,                                                  @P4A
         DROP  R10                                                 @P4A
         EJECT  ,
***********************************************************************
*                                                                     *
*                  PROCESS EXCEPTION MONITORING RECORDS               *
*                                                                     *
***********************************************************************
         SPACE
EXCAREA  DS    0H
         LA    R6,PRTLNE           ADDRESS PRINT BUILD AREA        @L9C
         USING PRTDSCT,R6          MAP THE PRINTLINE WITH PRINT LAYOUTSF
                                                                   @P8A
         SR    R3,R3               CLEAR WORK REGISTER
         LH    R3,SMFMNDRN         GET NUMBER OF ROWS IN SECTION
         CH    R3,=H'0'            ARE THERE ANY DATA ROWS?
         BNE   EXCADDR             YES - THEN CONTINUE
         PUT   (R8),MSG104         PRINT ERROR MESSAGE
         ABEND 104,DUMP            AND ABEND
         SPACE
EXCADDR  DS    0H                  NOW ADDRESS THE DATA AREA
         USING ANLCB,R9            ADDRESSABILITY                  @P8A
         AP    EXCRECS,=P'1'       COUNT THE EXCEPTION RECORDS     @P8A
         SPACE  ,                                                  @P8A
         DROP  R9                                                  @P8A
         SPACE  ,                                                  @P8A
         SR    R9,R9               CLEAR DATA POINTER
         LH    R9,SMFMNDRA+2       ADDRESS DATA ROW
         AR    R9,R7               FIND WHERE DATA STARTS
         MVC   TRANID,0(R9)        COPY TRANID FOR SELECTION PROCESS   F
                                                                   @LEA
         MVC   TERMID,4(R9)        COPY TERMID FOR SELECTION PROCESS   F
                                                                   @LEA
         MVC   USERID,8(R9)        COPY USERID FOR SELECTION PROCESS   F
                                                                   @LEA
         MVC   TASKNO,36(R9)       COPY TASKNO FOR SELECTION PROCESS   F
                                                                   @PNA
         XC    PRCSTYPE(8),PRCSTYPE NO PROCESS TYPE FOR EXCEPTION CLASSF
                                                                   @LEA
         BAL   R14,SELECT          CHECK FOR SELECTED RECORD
         B     MOL3EXIT            +0 NOT SELECTED                 @P8C
         B     SELON50             +4 SELECTED
         SPACE
SELON50  DS    0H                  PROCESS SELECTED RECORD
         L     R10,ANLCBSV         RESTORE ANLCB ADDRESS           @P8A
         USING ANLCB,R10           ADDRESSABILITY                  @P8A
         AP    EXCSLCTD,=P'1'      COUNT EXCEPTION RECORDS SELECTED    F
                                                                   @P8A
         SPACE  ,                                                  @P4A
         MVC   PRTLNE,=C' -'       CLEAR PRINT LINE
         MVC   PRTLNE+2(L'PRTLNE-2),PRTLNE+1
         MVC   PLTITLR,DLTITLR     SAY THIS IS A NEW RECORD
         MVC   PLDESCU,DLDESCU     AND PUT HEADINGS FOR THE
         MVC   PLDESCI,DLDESCI     PRINT LAYOUT
         MVC   PLDESCR,=X'40202020202020202120'    EDIT MASK       @P8A
         ED    PLDESCR,EXCRECS+3   EDIT IN RECORD NUMBER           @P8A
         PUT   (R8),PRTLNE         PRINT DATA LINE                 @P8C
         PUT   (R8),SPACES         PRINT EMPTY LINE
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         SPACE  ,                                                  @P8A
         DROP  R10                                                 @P8A
         SPACE  ,                                                  @P8A
         LR    R10,R9              KEEP WHERE DATA STARTS          @P8A
         USING MNEXCDS,R10         ADDRESSABILITY                  @P8A
         SPACE 2
         MVC   PLFTITL(4),=C'TRAN'
         MVC   FLDLEN,=H'4'
         LA    R9,EXCMNTRN
         BAL   R14,FLDCHPRT
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         SPACE 1
         MVC   PLFTITL(4),=C'TERM'
         LA    R9,EXCMNTER
         BAL   R14,FLDCHPRT
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         SPACE 1
         MVC   PLFTITL(6),=C'USERID'
         MVC   FLDLEN,=H'8'
         LA    R9,EXCMNUSR
         BAL   R14,FLDCHPRT
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         SPACE 1
         MVC   PLFTITL(5),=C'TTYPE'
         MVC   FLDLEN,=H'4'
         LA    R9,EXCMNTST
         BAL   R14,FLDCHPRT
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         SPACE 1
         MVC   PLFTITL(5),=C'START'
         MVC   FLDLEN,=H'8'
         LA    R9,EXCMNSTA
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN           @LLC
         BAL   R14,FLDCLDBL
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         SPACE 1
         MVC   PLFTITL(4),=C'STOP'
         LA    R9,EXCMNSTO
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN           @LLC
         BAL   R14,FLDCLDBL
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         SPACE 1
         MVC   PLFTITL(7),=C'TRANNUM'
         MVC   FLDLEN,=H'4'
         LA    R9,EXCMNTNO
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN           @LLC
         BAL   R14,FLDPKPRT        DO PACKED FORMATTING RTN        @LLC
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         SPACE 1
         MVC   PLFTITL(7),=C'TRANPRI'
         MVC   FLDLEN,=H'4'                                        @L6A
         LA    R9,EXCMNTPR
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN           @LLC
         BAL   R14,FLDBIPRT                                        @L6C
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         SPACE 1                                                   @P4C
         MVC   PLFTITL(8),=C'TCLSNAME'                             @L3C
         MVC   FLDLEN,=H'8'                                        @L3A
         LA    R9,EXCMNTCN                                         @L3C
         BAL   R14,FLDCHPRT
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @P4C
         SPACE 1
         MVC   PLFTITL(6),=C'LUNAME'
         MVC   FLDLEN,=H'8'
         LA    R9,EXCMNLUN
         BAL   R14,FLDCHPRT
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         SPACE 1                                                   @D1A
         MVC   PLFTITL(5),=C'NETID'                                @D1A
         MVC   FLDLEN,=H'8'                                        @D1A
         LA    R9,EXCMNNID         NETWORK ID                      @D1A
         BAL   R14,FLDCHPRT                                        @D1A
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @D1A
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @D1A
         SPACE 1                                                   @D1A
         MVC   PLFTITL(7),=C'RLUNAME'                              @D1A
         MVC   FLDLEN,=H'8'                                        @D1A
         LA    R9,EXCMNRLU         REAL LUNAME                     @D1A
         BAL   R14,FLDCHPRT                                        @D1A
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @D1A
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @D1A
         SPACE 1                                                   @P8A
         MVC   PLFTITL(8),=C'SRVCLASS'                             @P8A
         MVC   FLDLEN,=H'8'                                        @P8A
         LA    R9,EXCMNSRV         WLM SERVICE CLASS NAME          @P8A
         BAL   R14,FLDCHPRT                                        @P8A
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @P8A
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @P8A
         SPACE 1                                                   @P8A
         MVC   PLFTITL(8),=C'RPTCLASS'                             @P8A
         MVC   FLDLEN,=H'8'                                        @P8A
         LA    R9,EXCMNRPT         WLM REPORT CLASS NAME           @P8A
         BAL   R14,FLDCHPRT                                        @P8A
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @P8A
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @P8A
         SPACE 1                                                   @P8A
         MVC   PLFTITL(8),=C'TRANFLAG'                             @L9C
         MVC   FLDLEN,=H'8'                                        @L9C
         LA    R9,EXCMNTRF         TRANSACTION FLAGS               @L9C
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN           @LLC
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @L9C
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @L9C
         SPACE 1                                                   @L9A
         MVC   PLFTITL(8),=C'FCTYNAME'                             @L9A
         MVC   FLDLEN,=H'4'                                        @L9A
         LA    R9,EXCMNFCN         TRANSACTION FACILITY NAME       @L9A
         BAL   R14,FLDCHPRT                                        @L9A
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @L9A
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @L9A
         SPACE 1                                                   @L9A
         MVC   PLFTITL(8),=C'BRDGTRAN'                             @L9A
         MVC   FLDLEN,=H'4'                                        @L9A
         LA    R9,EXCMNBTR         3270 BRIDGE TRANSACTION ID      @L9A
         BAL   R14,FLDCHPRT                                        @L9A
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @L9A
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @L9A
         SPACE 1                                                   @L9A
         MVC   PLFTITL(8),=C'NETUOWPX'                             @L9A
         MVC   FLDLEN,=H'20'                                       @L9A
         LA    R9,EXCMNNPX         NETWORK UNIT-OF-WORK PREFIX     @L9A
         BAL   R14,FLDCHPRT                                        @L9A
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @L9A
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @L9A
         SPACE 1                                                   @L9A
         MVC   PLFTITL(8),=C'NETUOWSX'                             @L9A
         MVC   FLDLEN,=H'8'                                        @L9A
         LA    R9,EXCMNNSX         NETWORK UNIT-OF-WORK SUFFIX     @L9A
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN           @LLC
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @L9A
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @L9A
         SPACE 1                                                   @L9A
         MVC   PLFTITL(7),=C'PGMNAME'                              @L9A
         MVC   FLDLEN,=H'8'                                        @L9A
         LA    R9,EXCMNCPN         CURRENT EXCEPTION PROGRAM NAME  @L9A
         BAL   R14,FLDCHPRT                                        @L9A
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @L9A
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @L9A
         SPACE 1                                                   @L9C
EXCRTN3  DS    0H                                                  @D1C
         MVC   PLFTITL(5),=C'EXCNO'
         MVC   FLDLEN,=H'4'
         LA    R9,EXCMNEXN
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN           @LLC
         BAL   R14,FLDBIPRT                                        @P8A
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE
         SPACE 1
         MVC   PLFTITL(6),=C'EXCTYP'
         MVC   FLDLEN,=H'2'
         LA    R9,EXCMNTYP
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN           @LLC
         CLC   EXCMNTYP(2),=AL2(EXCMNWT)                      @PM78616C
         BNE   EXCCONT1
         MVC   PLCHARS(4),=C'WAIT'
         B     EXCPRT                                              @LAC
         SPACE 1                                                   @LAA
EXCCONT1 CLC   EXCMNTYP(2),=AL2(EXCMNBWT)                     @PM78616C
         BNE   EXCCONT2
         MVC   PLCHARS(11),=C'BUFFER WAIT'
         B     EXCPRT
         SPACE 1                                                   @LAA
EXCCONT2 CLC   EXCMNTYP(2),=AL2(EXCMNSWT)                     @PM78616C
         BNE   EXCCONT4                                       @PM78616C
         MVC   PLCHARS(11),=C'STRING WAIT'
         B     EXCPRT                                         @PM78616A
EXCCONT4 CLC   EXCMNTYP(2),=AL2(EXCMNPOL)                     @PM78616A
         BNE   EXCPRT                                         @PM78616A
         MVC   PLCHARS(6),=C'POLICY'                          @PM78616A
EXCPRT   EQU   *                                                   @LAA
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @LAA
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @LAA
         SPACE 1                                                   @LAA
         MVC   PLFTITL(6),=C'RESTYP'                               @LAA
         MVC   FLDLEN,=H'8'                                        @LAA
         LA    R9,EXCMNRTY                                         @LAA
         BAL   R14,FLDCHPRT                                        @LAA
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @LAA
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @LAA
         SPACE 1                                                   @LAA
         MVC   PLFTITL(5),=C'RESID'                                @LAA
         LA    R9,EXCMNRID                                         @LAA
         BAL   R14,FLDCHPRT                                        @LAA
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @LAA
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @LAA
         SPACE 1                                                   @LAA
         MVC   PLFTITL(8),=C'RRMSURID'                             @LCA
         MVC   FLDLEN,=H'16'                                       @LCA
         LA    R9,EXCMNURI         RRMS/MVS UNIT OF RECOVERY ID    @LCA
         UNPK  PLWORDS+00(9),00(5,R9)   OFFSETS.0-3                @PMA
         TR    PLWORDS+00(8),TRTAB         HEX-WORD                @PMA
         UNPK  PLWORDS+08(9),04(5,R9)   OFFSETS.4-7                @PMA
         TR    PLWORDS+08(8),TRTAB         HEX-WORD                @PMA
         UNPK  PLWORDS+16(9),08(5,R9)   OFFSETS.8-11               @PMA
         TR    PLWORDS+16(8),TRTAB         HEX-WORD                @PMA
         UNPK  PLWORDS+24(9),12(5,R9)   OFFSETS.12-15              @PMA
         TR    PLWORDS+24(8),TRTAB         HEX-WORD                @PMA
         MVI   PLWORDS+32,C' '                                     @PMA
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @LCA
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @LCA
         SPACE 1                                                   @LAA
         MVC   PLFTITL(8),=C'RESIDLEN'                             @LAA
         MVC   FLDLEN,=H'4'                                        @LAA
         LA    R9,EXCMNRIL                                         @LAA
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN           @LLC
         BAL   R14,FLDBIPRT                                        @LAA
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @LAA
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @LAA
         SPACE 1                                                   @LAA
         MVC   PLFTITL(8),=C'RESIDEXT'                             @LAA
         MVC   FLDLEN,EXCMNRIL+2                                   @LAA
         LA    R9,EXCMNRIX                                         @LAA
         BAL   R14,FLDCHPRT                                        @LAA
         PUT   (R8),PRTCC          PRINT DATA LINE FOR THIS FIELD  @LAA
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE                @LAA
         SPACE 1                                                   @LAA
         B     MOL3EXIT            WHEN DONE TO SECTION PROCESSOR END  F
                                                                   @P8C
         SPACE  ,                                                  @P4A
         DROP  R6,R10                                              @P8C
         EJECT  ,                                                  @LMC
***********************************************************************
*                                                                     *
*                  PROCESS RESOURCE MONITORING RECORDS                *
*                                                                     *
***********************************************************************
         SPACE  ,                                                  @LMC
RESAREA  DS    0H                                              @BA63143
         LA    R6,PRTLNE           ADDRESS PRINT BUILD AREA    @BA63143
         USING PRTDSCT,R6          MAP THE PRINTLINE WITH PRINT LAYOUTSF
                                                               @BA63143
         SR    R3,R3               CLEAR WORK REGISTER         @BA63143
         LH    R3,SMFMNDRN         GET NUMBER OF ROWS IN SECTIO@BA63143
         CH    R3,=H'0'            ARE THERE ANY DATA ROWS?    @BA63143
         BNE   RESADDR             YES - THEN CONTINUE         @BA63143
         PUT   (R8),MSG104         PRINT ERROR MESSAGE         @BA63143
         ABEND 104,DUMP            AND ABEND                   @BA63143
         SPACE ,                                               @BA63143
RESADDR  DS    0H                  NOW ADDRESS THE DATA AREA   @BA63143
         SR    R10,R10             CLEAR DATA POINTER          @BA63143
         LH    R10,SMFMNDRA+2      ADDRESS DATA ROW            @BA63143
         AR    R10,R7              FIND WHERE DATA STARTS      @BA63143
         USING DFHMNRDS,R10        ADDRESSABILITY              @BA63143
RESLOOP  DS    0H                  RESOURCE RECORD LOOP        @BA63143
         L     R2,ANLCBSV          RESTORE ANLCB ADDRESS       @BA63143
         USING ANLCB,R2            ADDRESSABILITY              @BA63143
         AP    RESRECS,=P'1'       COUNT THE RESOURCE RECORDS  @BA63143
         STH   R3,ROWSAVE          SAVE FOR RECORD LOOP PROCESS@BA63143
         SPACE ,                                               @BA63143
         LR    R4,R10              FIND WHERE DATA STARTS      @BA63143
         A     R4,MNR_ISO          OFFSET TO ID DATA SECTION   @BA63143
         SPACE ,                                               @BA63143
         USING MNR_ID_DATA,R4          ADDRESSABILITY              @LMC
         MVC   TRANID,MNR_ID_TRANID    TRANID FOR SELECTION        @LMC
         MVC   TERMID,MNR_ID_TERMID    TERMID FOR SELECTION        @LMC
         MVC   USERID,MNR_ID_USERID    USERID FOR SELECTION        @LMC
         MVC   TASKNO,MNR_ID_TASKNO    TASKNO FOR SELECTION        @LMC
         XC    PRCSTYPE(8),PRCSTYPE    NO PROCESS TYPE             @LMC
         BAL   R14,SELECT              CHECK FOR SELECTED RECORD   @LMC
         B     SELON500                +0 NOT SELECTED             @LMC
         B     SELON70                 +4 SELECTED                 @LMC
         SPACE ,                                                   @LMC
SELON70  DS    0H                      PROCESS SELECTED RECORD     @LMC
         AP    RESSLCTD,=P'1'          COUNT RECORDS SELECTED      @LMC
         SPACE  ,                                                  @LMC
         MVC   PRTLNE,=C' -'           CLEAR PRINT LINE            @LMC
         MVC   PRTLNE+2(L'PRTLNE-2),PRTLNE+1                       @LMC
         MVC   PLTITLR,DLTITLR         SAY THIS IS A NEW RECORD    @LMC
         MVC   PLDESCU,DLDESCU         AND PUT HEADINGS FOR THE    @LMC
         MVC   PLDESCI,DLDESCI         PRINT LAYOUT                @LMC
         MVC   PLDESCR,=X'40202020202020202120'    EDIT MASK       @LMC
         ED    PLDESCR,RESRECS+3       EDIT IN RECORD NUMBER       @LMC
         PUT   (R8),PRTLNE             PRINT DATA LINE             @LMC
         PUT   (R8),SPACES             PRINT EMPTY LINE            @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE  ,                                                  @LMC
         DROP  R2                      DONE WITH ANLCB             @LMC
         SPACE  ,                                                  @LMC
SELON80  DS    0H                                                  @LLA
         MVC   PLFTITL(4),=C'TRAN'     FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNR_ID_TRANID        TRANSACTION ID              @LMC
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
         MVC   PLFTITL(4),=C'TERM'     FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LLC
         LA    R9,MNR_ID_TERMID        TERMINAL ID                 @LLC
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON81                 ITS EMPTY                   @LLA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LLC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LLC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLC
         SPACE ,                                                   @LLC
SELON81  DS    0H                                                  @LLA
         MVC   PLFTITL(6),=C'USERID'   FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNR_ID_USERID        USERID                      @LMC
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
         MVC   PLFTITL(5),=C'TTYPE'    FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'4'            FIELD LENGTH                @LMC
         LA    R9,MNR_ID_STYPE         TRANSACTION START TYPE      @LMC
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE  ,                                                  @LMC
         MVC   PLFTITL(5),=C'START'    FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'8'            FIELD LENGTH                @LMC
         LA    R9,MNR_ID_START         TRANSACTION START TIME      @LMC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMC
         BAL   R14,FLDCLDBL            DO CLOCK FORMATTING RTN     @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
         MVC   PLFTITL(4),=C'STOP'     FIELD TITLE                 @LMC
         LA    R9,MNR_ID_STOP          TRANSACTION STOP TIME       @LMC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMC
         BAL   R14,FLDCLDBL            DO CLOCK FORMATTING RTN     @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
         MVC   PLFTITL(7),=C'TRANNUM'  FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNR_ID_TASKNO        TRANSACTION NUMBER          @LMC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMC
         BAL   R14,FLDPKPRT            DO PACKED FORMATTING RTN    @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
         MVC   PLFTITL(6),=C'LUNAME'   FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNR_ID_LUNAME        LUNAME                      @LMC
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
         MVC   PLFTITL(7),=C'PGMNAME'  FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNR_ID_PGMNAME       PGMNAME                     @LMC
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
         MVC   PLFTITL(8),=C'RSYSID  ' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LLC
         LA    R9,MNR_ID_RSYSID        RSYSID                      @LLC
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON86                 ITS EMPTY                   @LLA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LLC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLC
         SPACE ,                                                   @LLC
SELON86  DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'TRANFLAG' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNR_ID_TRN_FLAGS     TRANSACTION FLAGS           @LMC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
         MVC   PLFTITL(8),=C'FCTYNAME' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNR_ID_FCTYNAME      TRANSACTION FACILITY NAME   @LMC
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
         MVC   PLFTITL(8),=C'TERMINFO' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNR_ID_TERMINFO      TERMINAL INFORMATION        @LMC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
         MVC   PLFTITL(8),=C'TERMCNNM' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNR_ID_TERMCNNM      TERMINAL CONNECTION NAME    @LMC
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON87                 ITS EMPTY                   @LLA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
SELON87  DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'RTYPE   ' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'4'            FIELD LENGTH                @LMC
         LA    R9,MNR_ID_RTYPE         RESOURCE RECORD TYPE        @LMC
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
         MVC   PLFTITL(8),=C'NETUOWPX' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'20'           FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNR_ID_UOW_PX        NETWORK UNIT-OF-WORK PREFIX @LMC
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                               @BA63143
         MVC   PLFTITL(8),=C'NETUOWSX' FIELD TITLE                 @LLC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNR_ID_UOW_SX        NETWORK UNIT-OF-WORK SUFFIX @LMC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMC
         MVC   PLFTITL(8),=C'RESFLAGS' FIELD TITLE                 @LLC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LLC
         LA    R9,MNR_ID_RES_FLAGS     RESOURCE FLAGS              @LLC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LLC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @DAC
         SPACE ,                                                   @LJA
         MVC   PLFTITL(8),=C'ISIPICNM' FIELD TITLE                 @LLC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LJA
         LA    R9,MNR_ID_ISIPICNM      IPCONN NAME                 @LJA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON89                 ITS EMPTY                   @LLA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LLC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LJA
         SPACE ,                                                   @LLA
SELON89  DS    0H                                                  @LLA
***********************************************************************
*              FORMAT SELECTED TRANSACTION ORIGIN DATA                *
***********************************************************************
         SPACE ,                                                   @LLA
         CLC   SMFMNRVN,=XL2'0660'     PRIOR TO CICS 6.6.0?        @LLA
         BL    SELON125                YES, BYPASS ORIGIN DATA     @LLA
SELON90  DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'CLIPADDR' FIELD TITLE                 @Q4A
         MVC   FLDLEN,=H'40'           FIELD LENGTH TO FORMAT      @Q4A
         LA    R9,MNR_ID_CLIPADDR      CLIENT IP ADDRESS           @Q4A
         LH    R3,FLDLEN               FIELD SIZE                  @Q4A
         BCTR  R3,0                    FOR EX INSTRUCTION          @Q4A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @Q4A
         BZ    SELON91                 ITS EMPTY                   @Q4A
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @Q4A
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q4A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @Q4A
SELON91  DS    0H                                                  @Q4A
         MVC   PLFTITL(8),=C'ONETWKID' FIELD TITLE                 @LLA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LLA
         LA    R9,MNR_ID_ORIGIN_NETWKID    NETWORK ID              @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON92                 ITS EMPTY                   @Q4C
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON92  DS    0H                                                  @Q4C
         MVC   PLFTITL(8),=C'OAPPLID ' FIELD TITLE                 @Q3C
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LLA
         LA    R9,MNR_ID_ORIGIN_APPLID APPLID                      @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON93                 ITS EMPTY                   @Q4C
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON93  DS    0H                                                  @Q4C
         MVC   PLFTITL(8),=C'OSTART  ' FIELD TITLE                 @Q3C
         MVC   FLDLEN,=H'8'            FIELD LENGTH                @LLA
         LA    R9,MNR_ID_ORIGIN_ATT_TIME   TRANSACTION START TIME  @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON94                 ITS EMPTY                   @Q4C
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LLA
         BAL   R14,FLDCLDBL            DO CLOCK FORMATTING RTN     @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON94  DS    0H                                                  @Q4C
         MVC   PLFTITL(8),=C'OTRANNUM' FIELD TITLE                 @LLA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LLA
         LA    R9,MNR_ID_ORIGIN_TRANNUM    TRANSACTION NUMBER      @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON95                 ITS EMPTY                   @Q4C
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LLA
         BAL   R14,FLDPKPRT            DO PACKED FORMATTING RTN    @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON95  DS    0H                                                  @Q4C
         MVC   PLFTITL(8),=C'OTRAN   ' FIELD TITLE                 @Q3C
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LLA
         LA    R9,MNR_ID_ORIGIN_TRANID TRANSACTION ID              @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON96                 ITS EMPTY                   @Q4C
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON96  DS    0H                                                  @Q4C
         MVC   PLFTITL(8),=C'OUSERID ' FIELD TITLE                 @Q3C
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LLA
         LA    R9,MNR_ID_ORIGIN_USERID USERID                      @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON97                 ITS EMPTY                   @Q4C
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON97  DS    0H                                                  @Q4C
         MVC   PLFTITL(8),=C'OUSERCOR' FIELD TITLE                 @LLA
         MVC   FLDLEN,=H'64'           FIELD LENGTH TO FORMAT      @LLA
         LA    R9,MNR_ID_ORIGIN_USER_CORR  USER CORRELATOR         @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON98                 ITS EMPTY                   @Q4C
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON98  DS    0H                                                  @Q4C
         MVC   PLFTITL(8),=C'OTCPSVCE' FIELD TITLE                 @LLA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LLA
         LA    R9,MNR_ID_ORIGIN_TCPIPSERV  TCPIPSERVICE            @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON99                 ITS EMPTY                   @Q4C
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON99  DS    0H                                                  @Q4C
         MVC   PLFTITL(8),=C'OPORTNUM' FIELD TITLE                 @LLA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LLA
         LA    R9,MNR_ID_ORIGIN_PORTNUM    PORT NUMBER             @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON100                ITS EMPTY                   @Q4C
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @Q4A
         BAL   R14,FLDBIPRT            DO BINARY FORMAT RTN.       @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON100 DS    0H                                                  @Q4C
         MVC   PLFTITL(8),=C'OCLIPADR' FIELD TITLE                 @LLA
         MVC   FLDLEN,=H'40'           FIELD LENGTH TO FORMAT      @LLA
         LA    R9,MNR_ID_ORIGIN_CLIPADDR   CLIENT IP ADDRESS       @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON101                ITS EMPTY                   @Q4C
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON101 DS    0H                                                  @Q4C
         MVC   PLFTITL(8),=C'OCLIPORT' FIELD TITLE                 @LLA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LLA
         LA    R9,MNR_ID_ORIGIN_CLIPPORT   CLIENT PORT NUMBER      @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON102                ITS EMPTY                   @Q4C
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @Q4A
         BAL   R14,FLDBIPRT            DO BINARY FORMAT RTN.       @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON102 DS    0H                                                  @Q4C
         MVC   PLFTITL(8),=C'OTRANFLG' FIELD TITLE                 @Q4C
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LLA
         LA    R9,MNR_ID_ORIGIN_TRANFLAG   TRANSACTION FLAGS       @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON103                ITS EMPTY                   @Q4C
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON103 DS    0H                                                  @Q4C
         MVC   PLFTITL(8),=C'OFCTYNME' FIELD TITLE                 @LLA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LLA
         LA    R9,MNR_ID_ORIGIN_FCTYNAME   FACILITY NAME           @LLA
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON104                ITS EMPTY                   @Q4C
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LLA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LLA
SELON104 DS    0H                                                  @LNC
***********************************************************************
*              FORMAT SELECTED TRANSACTION PREVIOUS HOP DATA          *
***********************************************************************
         SPACE ,                                                   @LNA
         CLC   SMFMNRVN,=XL2'0670'     PRIOR TO CICS 6.7.0?        @LNA
         BL    SELON125                YES, BYPASS HOP DATA        @LNA
SELON110 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'PHNTWKID' FIELD TITLE                 @LNA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LNA
         LA    R9,MNR_PHD_NETWKID      NETWORK ID                  @LNA
         LH    R3,FLDLEN               FIELD SIZE                  @LNA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LNA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LNA
         BZ    SELON111                ITS EMPTY                   @LNA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LNA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LNA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LNA
SELON111 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'PHAPPLID' FIELD TITLE                 @LNA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LNA
         LA    R9,MNR_PHD_APPLID       APPLID                      @LNA
         LH    R3,FLDLEN               FIELD SIZE                  @LNA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LNA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LNA
         BZ    SELON112                ITS EMPTY                   @LNA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LNA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LNA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LNA
SELON112 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'PHSTART ' FIELD TITLE                 @LNA
         MVC   FLDLEN,=H'8'            FIELD LENGTH                @LNA
         LA    R9,MNR_PHD_ATTACH_TIME  TRANSACTION START TIME      @LNA
         LH    R3,FLDLEN               FIELD SIZE                  @LNA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LNA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LNA
         BZ    SELON113                ITS EMPTY                   @LNA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LNA
         BAL   R14,FLDCLDBL            DO CLOCK FORMATTING RTN     @LNA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LNA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LNA
SELON113 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'PHTRANNO' FIELD TITLE                 @LNA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LNA
         LA    R9,MNR_PHD_TRANNUM      TRANSACTION NUMBER          @LNA
         LH    R3,FLDLEN               FIELD SIZE                  @LNA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LNA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LNA
         BZ    SELON114                ITS EMPTY                   @LNA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LNA
         BAL   R14,FLDPKPRT            DO PACKED FORMATTING RTN    @LNA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LNA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LNA
SELON114 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'PHTRAN  ' FIELD TITLE                 @LNA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LNA
         LA    R9,MNR_PHD_TRANID       TRANSACTION ID              @LNA
         LH    R3,FLDLEN               FIELD SIZE                  @LNA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LNA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LNA
         BZ    SELON115                ITS EMPTY                   @LNA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LNA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LNA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LNA
SELON115 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'PHCOUNT ' FIELD TITLE                 @LNA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LNA
         LA    R9,MNR_PHD_COUNT        HOP DATA COUNT              @LNA
         LH    R3,FLDLEN               FIELD SIZE                  @LNA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LNA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LNA
         BZ    SELON116                ITS EMPTY                   @LNA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LNA
         BAL   R14,FLDBIPRT            DO BINARY FORMAT RTN.       @LNA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LNA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LNA
SELON116 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'TRNGRPID' FIELD TITLE                 @LOA
         MVC   FLDLEN,=H'28'           FIELD LENGTH TO FORMAT      @LOA
         LA    R9,MNR_ID_TRNGRPID      TRANSACTION GROUP ID        @LOA
         LH    R3,FLDLEN               FIELD SIZE                  @LOA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LOA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LOA
         BZ    SELON117                ITS EMPTY                   @LOA
         BAL   R14,FLDHXPRT            JUST SHOW IT'S HEX          @LOA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LOA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LOA
SELON117 DS    0H                                                  @LOA
         SPACE ,                                                   @LNA
SELON125 DS    0H                                                  @LNA
***********************************************************************
*              FORMAT SELECTED TRANSACTION PREVIOUS TRAN DATA         *
***********************************************************************
         SPACE ,                                              @R116385A
         CLC   SMFMNRVN,=XL2'0710'     PRIOR TO CICS 7.1.0?   @R116385A
         BL    SELON135                YES, BYPASS TRAN DATA  @R116385A
SELON130 DS    0H                                             @R116385A
         MVC   PLFTITL(8),=C'PTSTART ' FIELD TITLE            @R116385A
         MVC   FLDLEN,=H'8'            FIELD LENGTH           @R116385A
         LA    R9,MNR_PTD_ATTACH_TIME  TRANSACTION START TIME @R116385A
         LH    R3,FLDLEN               FIELD SIZE             @R116385A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R116385A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R116385A
         BZ    SELON131                ITS EMPTY              @R116385A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN  @R116385A
         BAL   R14,FLDCLDBL            DO CLOCK FORMAT RTN    @R116385A
         PUT   (R8),PRTLNE             PRINT DATA FOR FIELD   @R116385A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R116385A
SELON131 DS    0H                                             @R116385A
         MVC   PLFTITL(8),=C'PTTRANNO' FIELD TITLE            @R116385A
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT @R116385A
         LA    R9,MNR_PTD_TRANNUM      TRANSACTION NUMBER     @R116385A
         LH    R3,FLDLEN               FIELD SIZE             @R116385A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R116385A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R116385A
         BZ    SELON132                ITS EMPTY              @R116385A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN  @R116385A
         BAL   R14,FLDPKPRT            DO PACKED FORMAT RTN   @R116385A
         PUT   (R8),PRTLNE             PRINT DATA FOR FIELD   @R116385A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R11638AA
SELON132 DS    0H                                             @R116385A
         MVC   PLFTITL(8),=C'PTTRAN  ' FIELD TITLE            @R116385A
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT @R116385A
         LA    R9,MNR_PTD_TRANID       TRANSACTION ID         @R116385A
         LH    R3,FLDLEN               FIELD SIZE             @R116385A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R116385A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R116385A
         BZ    SELON133                ITS EMPTY              @R116385A
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY @R116385A
         PUT   (R8),PRTLNE             PRINT DATA FOR FIELD   @R116385A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R116385A
SELON133 DS    0H                                             @R116385A
         MVC   PLFTITL(8),=C'PTCOUNT ' FIELD TITLE            @R116385A
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT @R116385A
         LA    R9,MNR_PTD_COUNT        HOP DATA COUNT         @R116385A
         LH    R3,FLDLEN               FIELD SIZE             @R116385A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R116385A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R116385A
         BZ    SELON134                ITS EMPTY              @R116385A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN  @R116385A
         BAL   R14,FLDBIPRT            DO BINARY FORMAT RTN.  @R116385A
         PUT   (R8),PRTLNE             PRINT DATA FOR FIELD   @R116385A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R111685A
SELON134 DS    0H                                             @R116385A
         SPACE ,                                              @R116385A
SELON135 DS    0H                                             @R116385A
         SPACE ,                                                   @LNC
SELON150 DS    0H                                                  @LLA
         SPACE ,                                                   @LMC
         DROP  R4                      DONE WITH ID DATA SECTION   @LMC
         SPACE ,                                                   @LMC
         L     R2,ANLCBSV              RESTORE ANLCB ADDRESS       @LMC
         USING ANLCB,R2                ADDRESSABILITY              @LMC
         TM    PRTSEL2,PRTRESF         PRINT FILE RECORDS?         @LMC
         BZ    SELON200                NO, SKIP FILE ENTRIES       @LMC
         DROP  R2                      DONE WITH ANLCB             @LMC
         SPACE ,                                                   @06A
         L     R4,MNR_FSO          OFFSET TO FILE DATA SECTION @BA63143
         AR    R4,R10              FIND WHERE DATA STARTS      @BA63143
         USING MNR_FILE_ENTRY,R4   ADDRESSABILITY              @BA63143
         SR    R3,R3               CLEAR WORK REGISTER         @BA63143
         LH    R3,MNR_FSN          NUMBER OF FILE ENTRIES      @BA63143
         LTR   R3,R3               ANY FILE ENTRIES?           @BA63143
         BZ    SELON190            NO, SKIP PROCESSING             @LLC
SELON170 DS    0H                                                  @LLC
         PUT   (R8),SPACES             PRINT EMPTY LINE            @LMC
         SPACE ,                                                   @LIA
         STH   R3,FILESAVE             SAVE NO. OF FILE ENTRIES    @LMC
         MVC   PLFTITL(8),=C'FILENAME' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'8'        FIELD LENGTH TO FORMAT      @BA63143
         LA    R9,MNR_FILE_NAME    FILE NAME                   @BA63143
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN       @BA63143
         BAL   R14,FLDCHPRT        DO BYTE-STRING DISPLAY      @BA63143
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
SELON171 DS    0H                                                  @LMC
         MVC   PLFTITL(8),=C'FCGETCT ' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'8'        FIELD LENGTH TO FORMAT      @BA63143
         LA    R9,MNR_FILE_GET     FILE GET TIME/COUNT         @BA63143
         LH    R3,FLDLEN           FIELD SIZE                      @LLA
         BCTR  R3,0                FOR EX INSTRUCTION              @LLA
         EX    R3,EMPTTEST         CHECK FIELD NOT EMPTY           @LLA
         BZ    SELON172            ITS EMPTY                       @LLA
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN       @BA63143
         BAL   R14,FLDCLDBY        DO CLOCK FORMATTING RTN         @D6C
         PUT   (R8),PRTLNE         PRINT DATA FOR THIS FIELD       @Q3C
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE            @BA63143
SELON172 DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'FCPUTCT '                         @BA63143
         MVC   FLDLEN,=H'8'        FIELD LENGTH TO FORMAT      @BA63143
         LA    R9,MNR_FILE_PUT     FILE PUT TIME/COUNT         @BA63143
         LH    R3,FLDLEN           FIELD SIZE                      @LLA
         BCTR  R3,0                FOR EX INSTRUCTION              @LLA
         EX    R3,EMPTTEST         CHECK FIELD NOT EMPTY           @LLA
         BZ    SELON173            ITS EMPTY                       @LLA
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN       @BA63143
         BAL   R14,FLDCLDBY        DO CLOCK FORMATTING RTN         @D6C
         PUT   (R8),PRTLNE         PRINT DATA FOR THIS FIELD       @Q3C
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE            @BA63143
SELON173 DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'FCBRWCT '                         @BA63143
         MVC   FLDLEN,=H'8'        FIELD LENGTH TO FORMAT      @BA63143
         LA    R9,MNR_FILE_BRWSE   FILE BROWSE TIME/COUNT      @BA63143
         EX    R3,EMPTTEST         CHECK FIELD NOT EMPTY           @LLA
         BZ    SELON174            ITS EMPTY                       @LLA
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN       @BA63143
         BAL   R14,FLDCLDBY        DO CLOCK FORMATTING RTN         @D6C
         PUT   (R8),PRTLNE         PRINT DATA FOR THIS FIELD       @Q3C
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE            @BA63143
SELON174 DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'FCADDCT '                         @BA63143
         MVC   FLDLEN,=H'8'        FIELD LENGTH TO FORMAT      @BA63143
         LA    R9,MNR_FILE_ADD     FILE ADD TIME/COUNT         @BA63143
         LH    R3,FLDLEN           FIELD SIZE                      @LLA
         BCTR  R3,0                FOR EX INSTRUCTION              @LLA
         EX    R3,EMPTTEST         CHECK FIELD NOT EMPTY           @LLA
         BZ    SELON175            ITS EMPTY                       @LLA
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN       @BA63143
         BAL   R14,FLDCLDBY        DO CLOCK FORMATTING RTN         @D6C
         PUT   (R8),PRTLNE         PRINT DATA FOR THIS FIELD       @Q3C
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE            @BA63143
SELON175 DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'FCDELCT ' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'8'        FIELD LENGTH TO FORMAT      @BA63143
         LA    R9,MNR_FILE_DEL     FILE DELETE TIME/COUNT      @BA63143
         LH    R3,FLDLEN               FIELD SIZE                  @LMC
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMC
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMC
         BZ    SELON176                ITS EMPTY                   @LMC
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN       @BA63143
         BAL   R14,FLDCLDBY        DO CLOCK FORMATTING RTN         @D6C
         PUT   (R8),PRTLNE         PRINT DATA FOR THIS FIELD       @Q3C
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE            @BA63143
SELON176 DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'FCTOTCT ' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'8'        FIELD LENGTH TO FORMAT      @BA63143
         LA    R9,MNR_FILE_TOTAL   FILE TOTAL TIME/COUNT       @BA63143
         LH    R3,FLDLEN           FIELD SIZE                      @LLA
         BCTR  R3,0                FOR EX INSTRUCTION              @LLA
         EX    R3,EMPTTEST         CHECK FIELD NOT EMPTY           @LLA
         BZ    SELON177            ITS EMPTY                       @LLA
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN       @BA63143
         BAL   R14,FLDCLDBY        DO CLOCK FORMATTING RTN         @D6C
         PUT   (R8),PRTLNE         PRINT DATA FOR THIS FIELD       @Q3C
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE            @BA63143
SELON177 DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'FCAMCT  '                         @BA63143
         MVC   FLDLEN,=H'4'        FIELD LENGTH TO FORMAT      @BA63143
         LA    R9,MNR_FILE_AM_RQ   FC ACCESS METHOD COUNT      @BA63143
         LH    R3,FLDLEN           FIELD SIZE                      @LLA
         BCTR  R3,0                FOR EX INSTRUCTION              @LLA
         EX    R3,EMPTTEST         CHECK FIELD NOT EMPTY           @LLA
         BZ    SELON178            ITS EMPTY                       @LLA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @DAC
         BAL   R14,FLDBIPRT            DO BINARY FORMATTING RTN    @DAC
         PUT   (R8),PRTLNE         PRINT DATA FOR THIS FIELD       @Q3C
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE            @BA63143
SELON178 DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'FCIOWTT '                         @BA63143
         MVC   FLDLEN,=H'8'        FIELD LENGTH TO FORMAT      @BA63143
         LA    R9,MNR_FILE_IO_WT   FILE I/O WAIT TIME/COUNT    @BA63143
         LH    R3,FLDLEN           FIELD SIZE                      @LLA
         BCTR  R3,0                FOR EX INSTRUCTION              @LLA
         EX    R3,EMPTTEST         CHECK FIELD NOT EMPTY           @LLA
         BZ    SELON179            ITS EMPTY                       @LLA
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN       @BA63143
         BAL   R14,FLDCLDBY        DO CLOCK FORMATTING RTN         @D6C
         PUT   (R8),PRTLNE         PRINT DATA FOR THIS FIELD       @Q3C
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE            @BA63143
SELON179 DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'RLSWAIT '                         @BA63143
         MVC   FLDLEN,=H'8'        FIELD LENGTH TO FORMAT      @BA63143
         LA    R9,MNR_RLS_FILE_IO_WT   RLS I/O WAIT TIME/COUNT @BA63143
         LH    R3,FLDLEN           FIELD SIZE                      @LLA
         BCTR  R3,0                FOR EX INSTRUCTION              @LLA
         EX    R3,EMPTTEST         CHECK FIELD NOT EMPTY           @LLA
         BZ    SELON180            ITS EMPTY                       @LLA
         BAL   R14,FLDHXPRT        DO HEX FORMATTING RTN       @BA63143
         BAL   R14,FLDCLDBY        DO CLOCK FORMATTING RTN         @D6C
         PUT   (R8),PRTLNE         PRINT DATA FOR THIS FIELD       @Q3C
         MVC   PRTLNE,SPACES       CLEAR PRINT LINE            @BA63143
SELON180 DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'CFDTWAIT' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNR_CFDT_IO_WT   FILE CFDT I/O WAIT TIME/COUNT   @LLC
         LH    R3,FLDLEN               FIELD SIZE                  @LMC
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMC
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMC
         BZ    SELON181                ITS EMPTY                   @LMC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMC
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN     @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
SELON181 DS    0H                                              @R36300A
         CLC   SMFMNRVN,=XL2'0680'     PRIOR TO CICS 6.8.0?    @D50231A
         BL    SELON182                                        @D50231A
         MVC   PLFTITL(8),=C'FCXCWTT ' FIELD TITLE             @R36300A
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT  @R36300A
         LA    R9,MNR_FILE_XC_WT   FILE EXCLUSIVE WAIT TIME    @R36300A
         LH    R3,FLDLEN               FIELD SIZE              @R36300A
         BCTR  R3,0                    FOR EX INSTRUCTION      @R36300A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY   @R36300A
         BZ    SELON182                ITS EMPTY               @R36300A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN   @R36300A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN @R36300A
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FLD @R36300A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE        @R36300A
SELON182 DS    0H                                              @R36300A
         CLC   SMFMNRVN,=XL2'0680'     PRIOR TO CICS 6.8.0?    @D50231A
         BL    SELON183                                        @D50231A
         MVC   PLFTITL(8),=C'FCVSWTT ' FIELD TITLE             @R36300A
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT  @R36300A
         LA    R9,MNR_FILE_VS_WT       VSAM STRING WAIT TIME   @R36300A
         LH    R3,FLDLEN               FIELD SIZE              @R36300A
         BCTR  R3,0                    FOR EX INSTRUCTION      @R36300A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY   @R36300A
         BZ    SELON183                ITS EMPTY               @R36300A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN   @R36300A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN @R36300A
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FLD @R36300A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE        @R36300A
SELON183 DS    0H                                              @R36300C
         SR    R3,R3                   Clear R3                @D50231A
         LH    R3,MNR_FSL              Get the length          @D50231A
         AR    R4,R3                   BUMP TO NEXT FILE ENTRY @D50231A
         SR    R3,R3                   CLEAR WORK REGISTER         @LMC
         LH    R3,FILESAVE             RESTORE OUR COUNTER         @LMC
         BCT   R3,SELON170             LOOP THROUGH FILE ENTRIES   @LMC
         B     SELON200                AND CONTINUE                @LMC
         SPACE  ,                                                  @LMC
         DROP  R4                      DONE WITH FILE ENTRY        @LMC
         SPACE ,                                                   @LMC
SELON190 DS    0H                                                  @LLC
         PUT   (R8),SPACES             PRINT EMPTY LINE            @DAA
         PUT   (R8),MSG116             PRINT NO FILES MESSAGE      @DAC
         SPACE ,                                                   @06A
SELON200 DS    0H                                                  @LLC
         CLC   MNR_TRN,=H'3'           NUMBER OF TRIPLETS?         @LMC
         BL    SELON300                ONLY FILES AVAILABLE        @LMC
         SPACE ,                                                   @06A
         L     R2,ANLCBSV              RESTORE ANLCB ADDRESS       @LMC
         USING ANLCB,R2                ADDRESSABILITY              @LMC
         TM    PRTSEL2,PRTREST         PRINT TSQUEUE RESOURCE DATA @LMC
         BZ    SELON250                NO, SKIP TSQUEUE ENTRIES    @LMC
         DROP  R2                      DONE WITH ANLCB             @LMC
         SPACE ,                                                   @06A
         L     R4,MNR_TSO              OFFSET TO TSQUEUE DATA      @LMC
         AR    R4,R10                  FIND WHERE DATA STARTS      @DAC
         USING MNR_TSQUEUE_ENTRY,R4    ADDRESSABILITY              @DAC
         SR    R3,R3                   CLEAR WORK REGISTER         @DAC
         LH    R3,MNR_TSN              NUMBER OF TSQUEUE ENTRIES   @DAC
         LTR   R3,R3                   ANY TSQUEUE ENTRIES?        @DAC
         BZ    SELON230                NO, SKIP PROCESSING         @DAC
SELON210 DS    0H                                                  @DAC
         PUT   (R8),SPACES             PRINT EMPTY LINE            @DAC
         SPACE ,                                                   @LIA
         STH   R3,TSQSAVE              SAVE NO. OF TSQUEUE ENTRIES @DAC
         MVC   PLFTITL(8),=C'TSQNAME ' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'16'           FIELD LENGTH TO FORMAT      @DAC
         LA    R9,MNR_TSQUEUE_NAME     TSQUEUE NAME                @DAC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @DAC
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @DAC
         PUT   (R8),PRTLNE             PRINT DATA LINE             @DAC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @DAC
SELON211 DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'TSGETCT ' FIELD TITLE                 @LLC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @06A
         LA    R9,MNR_TSQUEUE_GET      TS GET TIME/COUNT           @06A
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON212                ITS EMPTY                   @LLA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @06A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN     @D6C
         PUT   (R8),PRTLNE             PRINT DATA LINE FOR THIS    @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @06A
SELON212 DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'TSPUTACT' FIELD TITLE                 @LLC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @06A
         LA    R9,MNR_TSQUEUE_PUT_AUX  TS PUT AUX TIME/COUNT       @06A
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON213                ITS EMPTY                   @LLA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @06A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN     @D6C
         PUT   (R8),PRTLNE             PRINT DATA LINE FOR THIS    @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @06A
SELON213 DS    0H                                                  @LLA
         MVC   PLFTITL(8),=C'TSPUTMCT' FIELD TITLE                 @LLC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @06A
         LA    R9,MNR_TSQUEUE_PUT_MAIN TS PUT MAIN TIME/COUNT      @06A
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON214                ITS EMPTY                   @LLA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @06A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN     @D6C
         PUT   (R8),PRTLNE             PRINT DATA LINE FOR THIS    @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @06A
SELON214 DS    0H                                              @R92160A
*        Start of code for counts only valid from CICS 700 onwards
         CLC   SMFMNRVN,=XL2'0700'     PRIOR TO CICS 7.8.0?    @R92160A
         BL    SELON216                Bypass shr ts counts    @R92160A
         MVC   PLFTITL(8),=C'TSGETSCT' FIELD TITLE             @R92160A
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT  @R92160A
         LA    R9,MNR_TSQUEUE_GET_SHR  TS PUT SHR TIME/COUNT   @R92160A
         LH    R3,FLDLEN               FIELD SIZE              @R92160A
         BCTR  R3,0                    FOR EX INSTRUCTION      @R92160A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY   @R92160A
         BZ    SELON215                ITS EMPTY               @R92160A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN   @R92160A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN @R92160A
         PUT   (R8),PRTLNE             PRINT DATA LINE FOR THIS@R92160A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE        @R92160A
SELON215 DS    0H                                              @R92160A
         MVC   PLFTITL(8),=C'TSPUTSCT' FIELD TITLE             @R92160A
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT  @R92160A
         LA    R9,MNR_TSQUEUE_PUT_SHR  TS PUT SHR TIME/COUNT   @R92160A
         LH    R3,FLDLEN               FIELD SIZE              @R92160A
         BCTR  R3,0                    FOR EX INSTRUCTION      @R92160A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY   @R92160A
         BZ    SELON216                ITS EMPTY               @R92160A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN   @R92160A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN @R92160A
         PUT   (R8),PRTLNE             PRINT DATA LINE FOR THIS@R92160A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE        @R92160A
*        End of counts valid only valid from CICS 700
SELON216 DS    0H                                              @R92160C
         MVC   PLFTITL(8),=C'TSTOTCT ' FIELD TITLE                 @LLC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @06A
         LA    R9,MNR_TSQUEUE_TOTAL    TSQUEUE TOTAL TIME/COUNT    @06A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @06A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN     @D6C
         PUT   (R8),PRTLNE             PRINT DATA LINE FOR THIS    @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE
SELON220 DS    0H                                              @R92160C
         MVC   PLFTITL(8),=C'TSGILEN ' FIELD TITLE                 @LLC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @06A
         LA    R9,MNR_TSQUEUE_GET_ITEML    TS GET ITEM LENGTH      @06A
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON221                ITS EMPTY               @R92160C
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @06A
         BAL   R14,FLDBIPRT                                        @06A
         PUT   (R8),PRTLNE             PRINT DATA LINE FOR THIS    @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @06A
SELON221 DS    0H                                              @R92160C
         MVC   PLFTITL(8),=C'TSPAILEN' FIELD TITLE                 @LLC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @06A
         LA    R9,MNR_TSQUEUE_PUT_AUX_ITEML    TS PUT AUX ITEM     @06A
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON222                ITS EMPTY               @R92160C
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @06A
         BAL   R14,FLDBIPRT            DO BINARY FORMATTING RTN    @DAC
         PUT   (R8),PRTLNE             PRINT DATA LINE FOR THIS    @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @06A
SELON222 DS    0H                                              @R92160C
         MVC   PLFTITL(8),=C'TSPMILEN' FIELD TITLE                 @LLC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @06A
         LA    R9,MNR_TSQUEUE_PUT_MAIN_ITEML   TS PUT MAIN ITEM    @06A
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON223               ITS EMPTY                @R92160C
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @06A
         BAL   R14,FLDBIPRT            DO BINARY FORMATTING RTN    @DAC
         PUT   (R8),PRTLNE             PRINT DATA LINE FOR THIS    @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @06A
SELON223 DS    0H                                              @R92160A
*        Start of code for counts only valid from CICS 700 onwards
         CLC   SMFMNRVN,=XL2'0700'     PRIOR TO CICS 7.8.0?    @R92160A
         MVC   PLFTITL(8),=C'TSGSILEN' FIELD TITLE             @R92160A
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT  @R92160A
         LA    R9,MNR_TSQUEUE_GET_SHR_ITEML   TS PUT MAIN ITEM @R92160A
         LH    R3,FLDLEN               FIELD SIZE              @R92160A
         BCTR  R3,0                    FOR EX INSTRUCTION      @R92160A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY   @R92160A
         BZ    SELON224                ITS EMPTY               @R92160A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN   @R92160A
         BAL   R14,FLDBIPRT            DO BINARY FORMATTING RTN@R92160A
         PUT   (R8),PRTLNE             PRINT DATA LINE FOR THIS@R92160A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE        @R92160A
SELON224 DS    0H                                              @R92160A
         MVC   PLFTITL(8),=C'TSPSILEN' FIELD TITLE             @R92160A
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT  @R92160A
         LA    R9,MNR_TSQUEUE_PUT_SHR_ITEML   TS PUT MAIN ITEM @R92160A
         LH    R3,FLDLEN               FIELD SIZE              @R92160A
         BCTR  R3,0                    FOR EX INSTRUCTION      @R92160A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY   @R92160A
         BZ    SELON225                ITS EMPTY               @R92160A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN   @R92160A
         BAL   R14,FLDBIPRT            DO BINARY FORMATTING RTN@R92160A
         PUT   (R8),PRTLNE             PRINT DATA LINE FOR THIS@R92160A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE        @R92160A
*        End of code for counts only valid from CICS 700 onwards
SELON225 DS    0H                                              @R92160C
         MVC   PLFTITL(8),=C'TSIOWTT ' FIELD TITLE                 @LLC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @06A
         LA    R9,MNR_TSQUEUE_IO_WT    TSQUEUE I/O WAIT TIME       @DAC
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON226                ITS EMPTY               @R92160C
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @06A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN     @D6C
         PUT   (R8),PRTLNE             PRINT DATA LINE FOR THIS    @Q3C
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @06A
SELON226 DS    0H                                              @R92160C
         MVC   PLFTITL(8),=C'TSSHWAIT' FIELD TITLE                 @LLC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @06A
         LA    R9,MNR_SHR_TSQUEUE_IO_WT  SHR TSQUEUE I/O WT TIME   @DAC
         LH    R3,FLDLEN               FIELD SIZE                  @LLA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LLA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LLA
         BZ    SELON227                ITS EMPTY               @R92160C
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @06A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN     @D6C
         PUT   (R8),PRTLNE             PRINT DATA LINE             @DAC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @06A
SELON227 DS    0H                                              @R92160C
         LA    R4,MNR_TSQUEUE_LEN(,R4) BUMP TO NEXT TSQUEUE ENTRY  @DAA
         SR    R3,R3                   CLEAR WORK REGISTER         @06A
         LH    R3,TSQSAVE              RESTORE OUR COUNTER         @06A
         BCT   R3,SELON210             LOOP THROUGH TSQUEUE ENTRY  @DAC
         B     SELON250                AND CONTINUE                @DAC
         SPACE  ,                                                  @06A
         DROP  R4                      DONE WITH TSQUEUE ENTRY     @06A
         SPACE  ,                                                  @06A
SELON230 DS    0H                                                  @LLC
         PUT   (R8),SPACES             PRINT EMPTY LINE            @LIA
         PUT   (R8),MSG117             PRINT NO TSQUEUE MESSAGE    @06A
         SPACE ,                                                   @DAA
SELON250 DS    0H                                                  @DAC
         CLC   MNR_TRN,=H'4'           NUMBER OF TRIPLETS?         @DAA
         BL    SELON295                ONLY FILE AND TSQUEUE  @R146209C
         SPACE ,                                                   @DAA
         L     R2,ANLCBSV              RESTORE ANLCB ADDRESS       @DAA
         USING ANLCB,R2                ADDRESSABILITY              @DAA
         TM    PRTSEL2,PRTRESD         PRINT DPL RESOURCE RECORDS  @DAA
         BZ    SELON270                NO, SKIP DPL ENTRIES   @R146209C
         DROP  R2                      DONE WITH ANLCB             @DAA
         SPACE ,                                                   @DAA
         L     R4,MNR_DSO              OFFSET TO DPL DATA SECTION  @DAA
         AR    R4,R10                  FIND WHERE DATA STARTS      @DAA
         USING MNR_DPL_ENTRY,R4        ADDRESSABILITY              @DAA
         SR    R3,R3                   CLEAR WORK REGISTER         @DAA
         LH    R3,MNR_DSN              NUMBER OF DPL ENTRIES       @DAA
         LTR   R3,R3                   ANY DPL ENTRIES?            @DAA
         BZ    SELON269                NO, SKIP PROCESSING    @R146209C
SELON260 DS    0H                                                  @DAA
         PUT   (R8),SPACES             PRINT EMPTY LINE            @DAA
         SPACE ,                                                   @DAA
         STH   R3,DPLSAVE              SAVE NO. OF DPL ENTRIES     @DAA
         MVC   PLFTITL(8),=C'PROGRAM ' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @DAA
         LA    R9,MNR_DPL_PROGRAM_NAME DPL PROGRAM NAME            @DAA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @DAA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @DAA
         PUT   (R8),PRTLNE             PRINT DATA LINE             @DAA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @DAA
SELON261 DS    0H                                                  @DAA
         MVC   PLFTITL(8),=C'SYSID   ' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @DAA
         LA    R9,MNR_DPL_SYSID        DPL SYSID                   @DAA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @DAA
         PUT   (R8),PRTLNE             PRINT DATA LINE             @DAA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @DAA
SELON262 DS    0H                                                  @DAA
         MVC   PLFTITL(8),=C'PCDPLCT ' FIELD TITLE                 @LMC
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @DAA
         LA    R9,MNR_DPL_LINK_REQS    DPL LINK REQUESTS           @DAA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @DAA
         BAL   R14,FLDBIPRT            DO BINARY FORMATTING RTN    @DAA
         PUT   (R8),PRTLNE             PRINT DATA LINE             @DAA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @DAA
SELON263 DS    0H                                                  @DAA
         LA    R4,MNR_DPL_LEN(,R4)     BUMP TO NEXT DPL ENTRY      @DAA
         SR    R3,R3                   CLEAR WORK REGISTER         @DAA
         LH    R3,DPLSAVE              RESTORE OUR COUNTER         @DAA
         BCT   R3,SELON260             LOOP THROUGH DPL ENTRIES    @DAA
         B     SELON270                AND CONTINUE           @R146209C
         SPACE  ,                                                  @DAA
         DROP  R4                      DONE WITH DPL ENTRY         @DAA
         SPACE  ,                                                  @DAA
SELON269 DS    0H                                             @R146209C
         PUT   (R8),SPACES             PRINT EMPTY LINE            @DAA
         PUT   (R8),MSG121             PRINT NO DPL MESSAGE        @DAA
SELON270 DS    0H                                             @R146209A
         CLC   MNR_TRN,=H'6'           NUMBER OF TRIPLETS?    @R146209A
         BL    SELON295                ONLY FILE,TSQUEUE,DPL  @R146209A
         SPACE ,                                              @R146209A
         L     R2,ANLCBSV              RESTORE ANLCB ADDRESS  @R146209A
         USING ANLCB,R2                ADDRESSABILITY         @R146209A
         TM    PRTSEL2,PRTRESU         PRINT URIMAP RESOURCE  @R146209A
         BZ    SELON280                NO, SKIP URIMAP ENTRIES@R146209A
         DROP  R2                      DONE WITH ANLCB        @R146209A
         SPACE ,                                              @R146209A
         L     R4,MNR_USO              OFFSET TO URIMAP SECTIO@R146209A
         AR    R4,R10                  FIND WHERE DATA STARTS @R146209A
         USING MNR_URIMAP_ENTRY,R4     ADDRESSABILITY         @R146209A
         SR    R3,R3                   CLEAR WORK REGISTER    @R146209A
         LH    R3,MNR_USN              NUMBER OF URIMAP ENTRIS@R146209S
         LTR   R3,R3                   ANY URIMAP ENTRIES?    @R146209A
         BZ    SELON279                NO, SKIP PROCESSING    @R146209A
SELON271 DS    0H                                             @R146209A
         PUT   (R8),SPACES             PRINT EMPTY LINE       @R146209A
         SPACE ,                                              @R146209A
         STH   R3,URISAVE              SAVE NO. OF URIMAP ENT @R146209A
         MVC   PLFTITL(8),=C'URIMAP  ' FIELD TITLE            @R146209A
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT @R146209A
         LA    R9,MNR_URIMAP_NAME      URIMAP NAME            @R146209A
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY @R146209A
         PUT   (R8),PRTLNE             PRINT DATA LINE        @R146209A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R146209A
         SPACE ,                                              @R149169A
         MVC   PLFTITL(8),=C'CIPHER  ' FIELD TITLE            @R149169A
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT @R149169A
         LA    R9,MNR_URIMAP_CIPHER    CIPHER USED            @R149169A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN  @R149169A
         PUT   (R8),PRTLNE             PRINT DATA LINE        @R149169A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R149169A
SELON272 DS    0H                                             @R146209A
         MVC   PLFTITL(8),=C'WBURIOPN' FIELD TITLE            @R146209A
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT @R146209A
         LA    R9,MNR_URIMAP_WEBOPEN   WEB OPEN TIME          @R146209A
         LH    R3,FLDLEN               FIELD SIZE             @R146209A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R146209A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R146209A
         BZ    SELON273                ITS EMPTY              @R146209A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN  @R146209A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN@R146209A
         PUT   (R8),PRTLNE             PRINT DATA LINE        @R146209A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R146209A
SELON273 DS    0H                                             @R146209A
         MVC   PLFTITL(8),=C'WBURIRCV' FIELD TITLE            @R146209A
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT @R146209A
         LA    R9,MNR_URIMAP_WEBRECV   WEB RECEIVE TIME       @R146209A
         LH    R3,FLDLEN               FIELD SIZE             @R146209A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R146209A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R146209A
         BZ    SELON274                ITS EMPTY              @R146209A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN  @R146209A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN@R146209A
         PUT   (R8),PRTLNE             PRINT DATA LINE        @R146209A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R146209A
SELON274 DS    0H                                             @R146209A
         MVC   PLFTITL(8),=C'WBURISND' FIELD TITLE            @R146209A
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT @R146209A
         LA    R9,MNR_URIMAP_WEBSEND   WEB SEND TIME          @R146209A
         LH    R3,FLDLEN               FIELD SIZE             @R146209A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R146209A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R146209A
         BZ    SELON275                ITS EMPTY              @R146209A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN  @R146209A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN@R146209A
         PUT   (R8),PRTLNE             PRINT DATA LINE        @R146209A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R146209A
SELON275 DS    0H                                             @R146209A
         LA    R4,MNR_URIMAP_LEN(,R4)  BUMP TO NEXT URIMAP ENT@R146209A
         SR    R3,R3                   CLEAR WORK REGISTER    @R146209A
         LH    R3,URISAVE              RESTORE OUR COUNTER    @R146209A
         BCT   R3,SELON271             LOOP THROUGH URIMAP ENT@R146209A
         B     SELON280                AND CONTINUE           @R146209A
         SPACE  ,                                             @R146209A
         DROP  R4                      DONE WITH URIMAP ENTRY @R146209A
         SPACE  ,                                             @R146209A
SELON279 DS    0H                                             @R146209A
         PUT   (R8),SPACES             PRINT EMPTY LINE       @R146209A
         PUT   (R8),MSG122             PRINT NO URIMAP MESSAGE@R146209A
SELON280 DS    0H                                             @R146209A
         L     R2,ANLCBSV              RESTORE ANLCB ADDRESS  @R146209A
         USING ANLCB,R2                ADDRESSABILITY         @R146209A
         TM    PRTSEL2,PRTRESW         PRINT WEBSERVC RESOURCE@R146209A
         BZ    SELON295                NO, SKIP WEBSERVC ENTRI@R146209A
         DROP  R2                      DONE WITH ANLCB        @R146209A
         SPACE ,                                              @R146209A
         L     R4,MNR_WSO              OFFSET TO WEBSERVC SECT@R146209A
         AR    R4,R10                  FIND WHERE DATA STARTS @R146209A
         USING MNR_WEBSVC_ENTRY,R4     ADDRESSABILITY         @R146209A
         SR    R3,R3                   CLEAR WORK REGISTER    @R146209A
         LH    R3,MNR_WSN              NUMBER OF WEBSERVC ENTR@R146209A
         LTR   R3,R3                   ANY WEBSERVC ENTRIES?  @R146209A
         BZ    SELON289                NO, SKIP PROCESSING    @R146209A
SELON281 DS    0H                                             @R146209A
         PUT   (R8),SPACES             PRINT EMPTY LINE       @R146209A
         SPACE ,                                              @R146209A
         STH   R3,WEBSAVE              SAVE NO. OF WEBSERVC EN@R146209A
         MVC   PLFTITL(8),=C'WEBSERVC' FIELD TITLE            @R146209A
         MVC   FLDLEN,=H'32'           FIELD LENGTH TO FORMAT @R146209A
         LA    R9,MNR_WEBSVC_NAME      WEBSERVC NAME          @R146209A
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY @R146209A
         PUT   (R8),PRTLNE             PRINT DATA LINE        @R146209A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R146209A
SELON282 DS    0H                                             @R146209A
         MVC   PLFTITL(8),=C'PIPELINE' FIELD TITLE            @R146209A
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT @R146209A
         LA    R9,MNR_WEBSVC_PIPE      PIPELINE NAME          @R146209A
         LH    R3,FLDLEN               FIELD SIZE             @R146209A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R146209A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R146209A
         BZ    SELON283                ITS EMPTY              @R146209A
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY @R146209A
         PUT   (R8),PRTLNE             PRINT DATA LINE        @R146209A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R146209A
SELON283 DS    0H                                             @R146209A
         MVC   PLFTITL(8),=C'WBSVINVK' FIELD TITLE            @R146209A
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT @R146209A
         LA    R9,MNR_WEBSVC_INVK      INVOKE SERVICE TIME    @R146209A
         LH    R3,FLDLEN               FIELD SIZE             @R146209A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R146209A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R146209A
         BZ    SELON284                ITS EMPTY              @R146209A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN  @R146209A
         BAL   R14,FLDCLDBY            DO CLOCK FORMATTING RTN@R146209A
         PUT   (R8),PRTLNE             PRINT DATA LINE        @R146209A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R146209A
SELON284 DS    0H                                             @R146209A
         LA    R4,MNR_WEBSVC_LEN(,R4)  BUMP TO NEXT WEBSERVC  @R146209A
         SR    R3,R3                   CLEAR WORK REGISTER    @R146209A
         LH    R3,WEBSAVE              RESTORE OUR COUNTER    @R146209A
         BCT   R3,SELON281             LOOP THROUGH WEBSERVCs @R146209A
         B     SELON295                AND CONTINUE           @R146209A
         SPACE  ,                                             @R146209A
         DROP  R4                      DONE WITH WEBSERVCs    @R146209A
         SPACE  ,                                             @R146209A
SELON289 DS    0H                                             @R146209A
         PUT   (R8),SPACES             PRINT EMPTY LINE       @R146209A
         PUT   (R8),MSG123             PRINT NO WEBSERVC MSG  @R146209A
SELON295 DS    0H                                             @R146209C
SELON300 DS    0H                                                  @06A
         PUT   (R8),SPACES             PRINT EMPTY LINE            @DAC
SELON500 DS    0H                                                  @06A
         SPACE ,                                                   @06A
         AH    R10,MNR_LENGTH          NO, A( NEXT ROW )           @DAC
         SPACE ,                                                   @DAC
         SR    R3,R3                   CLEAR WORK REGISTER         @DAC
         LH    R3,ROWSAVE              RESTORE OUR COUNTER         @DAC
         BCT   R3,RESLOOP              LOOP THRU DATA SECTION      @LMC
         B     MOL3EXIT                WHEN DONE TO SECTION END    @LMC
         SPACE  ,                                                  @DAC
         DROP  R10                                                 @DAC
         EJECT  ,                                                  @LMA
***********************************************************************
*                                                                     *
*                  PROCESS IDENTITY MONITORING RECORDS                *
*                                                                     *
***********************************************************************
         SPACE  ,                                                  @LMA
IDNAREA  DS    0H                                                  @LMA
         LA    R6,PRTLNE               ADDRESS PRINT BUILD AREA    @LMA
         USING PRTDSCT,R6              MAP THE PRINTLINE LAYOUTS   @LMA
         SR    R3,R3                   CLEAR WORK REGISTER         @LMA
         LH    R3,SMFMNDRN             GET NUMBER OF ROWS          @LMA
         CH    R3,=H'0'                ARE THERE ANY DATA ROWS?    @LMA
         BNE   IDNADDR                 YES - THEN CONTINUE         @LMA
         PUT   (R8),MSG104             PRINT ERROR MESSAGE         @LMA
         ABEND 104,DUMP                AND ABEND                   @LMA
         SPACE ,                                                   @LMA
IDNADDR  DS    0H                      NOW ADDRESS THE DATA AREA   @LMA
         SR    R10,R10                 CLEAR DATA POINTER          @LMA
         LH    R10,SMFMNDRA+2          ADDRESS DATA ROW            @LMA
         AR    R10,R7                  FIND WHERE DATA STARTS      @LMA
         USING DFHMNIDS,R10            ADDRESSABILITY              @LMA
IDNLOOP  DS    0H                      IDENTITY RECORD LOOP        @LMA
         L     R2,ANLCBSV              RESTORE ANLCB ADDRESS       @LMA
         USING ANLCB,R2                ADDRESSABILITY              @LMA
         AP    IDNRECS,=P'1'           COUNT THE IDENTITY RECORDS  @LMA
         STH   R3,ROWSAVE              SAVE FOR RECORD LOOP        @LMA
         SPACE  ,                                                  @LMA
         LR    R4,R10                  FIND WHERE DATA STARTS      @LMA
         A     R4,MNI_ISO              OFFSET TO ID DATA SECTION   @LMC
         SPACE ,                                                   @LMA
         USING MNI_ID_DATA,R4          ADDRESSABILITY              @LMC
         MVC   TRANID,MNI_ID_TRANID    TRANID FOR SELECTION        @LMC
         MVC   TERMID,MNI_ID_TERMID    TERMID FOR SELECTION        @LMC
         MVC   USERID,MNI_ID_USERID    USERID FOR SELECTION        @LMC
         MVC   TASKNO,MNI_ID_TASKNO    TASKNO FOR SELECTION        @LMC
         XC    PRCSTYPE(8),PRCSTYPE     NO PROCESS TYPE            @LMC
         BAL   R14,SELECT              CHECK FOR SELECTED RECORD   @LMC
         B     SELON900                +0 NOT SELECTED             @LMC
         B     SELON700                +4 SELECTED                 @LMC
         SPACE ,                                                   @LMA
SELON700 DS    0H                      PROCESS SELECTED RECORD     @LMC
         AP    IDNSLCTD,=P'1'          COUNT RECORDS SELECTED      @LMC
         SPACE  ,                                                  @LMA
         MVC   PRTLNE,=C' -'           CLEAR PRINT LINE            @LMC
         MVC   PRTLNE+2(L'PRTLNE-2),PRTLNE+1                       @LMA
         MVC   PLTITLR,DLTITLR         SAY THIS IS A NEW RECORD    @LMC
         MVC   PLDESCU,DLDESCU         AND PUT HEADINGS FOR THE    @LMC
         MVC   PLDESCI,DLDESCI         PRINT LAYOUT                @LMC
         MVC   PLDESCR,=X'40202020202020202120'    EDIT MASK       @LMA
         ED    PLDESCR,IDNRECS+3       EDIT IN RECORD NUMBER       @LMC
         PUT   (R8),PRTLNE             PRINT DATA LINE             @LMC
         PUT   (R8),SPACES             PRINT EMPTY LINE            @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE  ,                                                  @LMA
         DROP  R2                      DONE WITH ANLCB             @LMC
         SPACE  ,                                                  @LMA
SELON710 DS    0H                                                  @LMC
         MVC   PLFTITL(4),=C'TRAN'     FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNI_ID_TRANID        TRANSACTION ID              @LMC
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMA
         MVC   PLFTITL(4),=C'TERM'     FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_TERMID        TERMINAL ID                 @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON711                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
         SPACE ,                                                   @LMA
SELON711 DS    0H                                                  @LMA
         MVC   PLFTITL(6),=C'USERID'   FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_USERID        USER ID                     @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
         SPACE ,                                                   @LMA
         MVC   PLFTITL(5),=C'TTYPE'    FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH                @LMA
         LA    R9,MNI_ID_STYPE         TRANSACTION START TYPE      @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
         SPACE  ,                                                  @LMA
         MVC   PLFTITL(5),=C'START'    FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH                @LMC
         LA    R9,MNI_ID_START         TRANSACTION START TIME      @LMC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMC
         BAL   R14,FLDCLDBL            DO CLOCK FORMATTING RTN     @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMA
         MVC   PLFTITL(4),=C'STOP'     FIELD TITLE                 @LMA
         LA    R9,MNI_ID_STOP          TRANSACTION STOP TIME       @LMC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMC
         BAL   R14,FLDCLDBL            DO CLOCK FORMATTING RTN     @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMA
         MVC   PLFTITL(7),=C'TRANNUM'  FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNI_ID_TASKNO        TRANSACTION NUMBER          @LMC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMC
         BAL   R14,FLDPKPRT            DO PACKED FORMATTING RTN    @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMA
         MVC   PLFTITL(6),=C'LUNAME'   FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_LUNAME        LUNAME                      @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
         SPACE ,                                                   @LMA
         MVC   PLFTITL(7),=C'PGMNAME'  FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_PGMNAME       PGMNAME                     @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
         SPACE ,                                                   @LMA
         MVC   PLFTITL(8),=C'NETUOWPX' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'20'           FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_UOW_PX        NETWORK UNIT-OF-WORK PREFIX @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
         SPACE ,                                                   @LMA
         MVC   PLFTITL(8),=C'NETUOWSX' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_UOW_SX        NETWORK UNIT-OF-WORK SUFFIX @LMA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
         SPACE ,                                                   @LMA
         MVC   PLFTITL(8),=C'RSYSID  ' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_RSYSID        RSYSID                      @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON715                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
         SPACE ,                                                   @LMA
SELON715 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'TRANFLAG' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMC
         LA    R9,MNI_ID_TRN_FLAGS     TRANSACTION FLAGS           @LMC
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMA
         MVC   PLFTITL(8),=C'FCTYNAME' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_FCTYNAME      TRANSACTION FACILITY NAME   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
         SPACE ,                                                   @LMA
         MVC   PLFTITL(8),=C'RTYPE   ' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH                @LMC
         LA    R9,MNI_ID_RTYPE         RESOURCE RECORD TYPE        @LMC
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMC
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMC
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMC
         SPACE ,                                                   @LMA
         MVC   PLFTITL(8),=C'TERMINFO' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_TERMINFO      TERMINAL INFORMATION        @LMA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
         SPACE ,                                                   @LMA
         MVC   PLFTITL(8),=C'TERMCNNM' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_TERMCNNM      TERMINAL CONNECTION NAME    @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON720                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON720 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'ISIPICNM' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ISIPICNM      IPCONN NAME                 @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON725                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON725 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'CLIPADDR' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'40'           FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_CLIPADDR      CLIENT IP ADDRESS           @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON726                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON726 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'ONETWKID' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ORIGIN_NETWKID    NETWORK ID              @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON727                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON727 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'OAPPLID ' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ORIGIN_APPLID APPLID                      @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON728                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON728 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'OSTART  ' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH                @LMA
         LA    R9,MNI_ID_ORIGIN_ATT_TIME   TRANSACTION START TIME  @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON729                ITS EMPTY                   @LMA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMA
         BAL   R14,FLDCLDBL            DO CLOCK FORMATTING RTN     @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON729 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'OTRANNUM' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ORIGIN_TRANNUM    TRANSACTION NUMBER      @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON730                ITS EMPTY                   @LMA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMA
         BAL   R14,FLDPKPRT            DO PACKED FORMATTING RTN    @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON730 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'OTRAN   ' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ORIGIN_TRANID TRANSACTION ID              @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON731                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON731 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'OUSERID ' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ORIGIN_USERID USERID                      @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON732                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON732 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'OUSERCOR' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'64'           FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ORIGIN_USER_CORR  USER CORRELATOR         @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON733                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON733 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'OTCPSVCE' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ORIGIN_TCPIPSERV  TCPIPSERVICE            @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON734                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON734 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'OPORTNUM' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ORIGIN_PORTNUM    PORT NUMBER             @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON735                ITS EMPTY                   @LMA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMA
         BAL   R14,FLDBIPRT            DO BINARY FORMAT RTN.       @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON735 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'OCLIPADR' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'40'           FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ORIGIN_CLIPADDR   CLIENT IP ADDRESS       @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON736                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON736 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'OCLIPORT' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ORIGIN_CLIPPORT   CLIENT PORT NUMBER      @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON737                ITS EMPTY                   @LMA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMA
         BAL   R14,FLDBIPRT            DO BINARY FORMAT RTN.       @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON737 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'OTRANFLG' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ORIGIN_TRANFLAG   TRANSACTION FLAGS       @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON738                ITS EMPTY                   @LMA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON738 DS    0H                                                  @LMA
         MVC   PLFTITL(8),=C'OFCTYNME' FIELD TITLE                 @LMA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LMA
         LA    R9,MNI_ID_ORIGIN_FCTYNAME   FACILITY NAME           @LMA
         LH    R3,FLDLEN               FIELD SIZE                  @LMA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LMA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LMA
         BZ    SELON739                ITS EMPTY                   @LMA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LMA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
SELON739 DS    0H                                                  @LMA
         SPACE ,                                                   @LMA
SELON750 DS    0H                                                  @LMA
***********************************************************************
*              FORMAT SELECTED TRANSACTION PREVIOUS HOP DATA          *
***********************************************************************
         SPACE ,                                                   @LNA
         CLC   SMFMNRVN,=XL2'0670'     PRIOR TO CICS 6.7.0?        @LNA
         BL    SELON760                YES, BYPASS HOP DATA        @LNA
SELON751 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'PHNTWKID' FIELD TITLE                 @LNA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LNA
         LA    R9,MNI_PHD_NETWKID      NETWORK ID                  @LNA
         LH    R3,FLDLEN               FIELD SIZE                  @LNA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LNA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LNA
         BZ    SELON752                ITS EMPTY                   @LNA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LNA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LNA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LNA
SELON752 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'PHAPPLID' FIELD TITLE                 @LNA
         MVC   FLDLEN,=H'8'            FIELD LENGTH TO FORMAT      @LNA
         LA    R9,MNI_PHD_APPLID       APPLID                      @LNA
         LH    R3,FLDLEN               FIELD SIZE                  @LNA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LNA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LNA
         BZ    SELON753                ITS EMPTY                   @LNA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LNA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LNA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LNA
SELON753 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'PHSTART ' FIELD TITLE                 @LNA
         MVC   FLDLEN,=H'8'            FIELD LENGTH                @LNA
         LA    R9,MNI_PHD_ATTACH_TIME  TRANSACTION START TIME      @LNA
         LH    R3,FLDLEN               FIELD SIZE                  @LNA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LNA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LNA
         BZ    SELON754                ITS EMPTY                   @LNA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LNA
         BAL   R14,FLDCLDBL            DO CLOCK FORMATTING RTN     @LNA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LNA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LNA
SELON754 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'PHTRANNO' FIELD TITLE                 @LNA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LNA
         LA    R9,MNI_PHD_TRANNUM      TRANSACTION NUMBER          @LNA
         LH    R3,FLDLEN               FIELD SIZE                  @LNA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LNA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LNA
         BZ    SELON755                ITS EMPTY                   @LNA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LNA
         BAL   R14,FLDPKPRT            DO PACKED FORMATTING RTN    @LNA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LNA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LNA
SELON755 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'PHTRAN  ' FIELD TITLE                 @LNA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LNA
         LA    R9,MNI_PHD_TRANID       TRANSACTION ID              @LNA
         LH    R3,FLDLEN               FIELD SIZE                  @LNA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LNA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LNA
         BZ    SELON756                ITS EMPTY                   @LNA
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY      @LNA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LNA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LNA
SELON756 DS    0H                                                  @LNA
         MVC   PLFTITL(8),=C'PHCOUNT ' FIELD TITLE                 @LNA
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT      @LNA
         LA    R9,MNI_PHD_COUNT        HOP DATA COUNT              @LNA
         LH    R3,FLDLEN               FIELD SIZE                  @LNA
         BCTR  R3,0                    FOR EX INSTRUCTION          @LNA
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY       @LNA
         BZ    SELON757                ITS EMPTY                   @LNA
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN       @LNA
         BAL   R14,FLDBIPRT            DO BINARY FORMAT RTN.       @LNA
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LNA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LNA
SELON757 DS    0H                                                  @LNA
         SPACE ,                                                   @LNA
SELON760 DS    0H                                                  @LNA
***********************************************************************
*              FORMAT SELECTED TRANSACTION PREVIOUS TRAN DATA         *
***********************************************************************
         SPACE ,                                              @R116385A
         CLC   SMFMNRVN,=XL2'0710'     PRIOR TO CICS 7.1.0?   @R116385A
         BL    SELON775                YES, BYPASS TRAN DATA  @R116385A
SELON770 DS    0H                                             @R116385A
         MVC   PLFTITL(8),=C'PTSTART ' FIELD TITLE            @R116385A
         MVC   FLDLEN,=H'8'            FIELD LENGTH           @R116385A
         LA    R9,MNI_PTD_ATTACH_TIME  TRANSACTION START TIME @R116385A
         LH    R3,FLDLEN               FIELD SIZE             @R116385A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R116385A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R116385A
         BZ    SELON771                ITS EMPTY              @R116385A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN  @R116385A
         BAL   R14,FLDCLDBL            DO CLOCK FORMAT RTN    @R116385A
         PUT   (R8),PRTLNE             PRINT DATA FOR FIELD   @R116385A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R116385A
SELON771 DS    0H                                             @R116385A
         MVC   PLFTITL(8),=C'PTTRANNO' FIELD TITLE            @R116385A
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT @R116385A
         LA    R9,MNI_PTD_TRANNUM      TRANSACTION NUMBER     @R116385A
         LH    R3,FLDLEN               FIELD SIZE             @R116385A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R116385A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R116385A
         BZ    SELON772                ITS EMPTY              @R116385A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN  @R116385A
         BAL   R14,FLDPKPRT            DO PACKED FORMAT RTN   @R116385A
         PUT   (R8),PRTLNE             PRINT DATA FOR FIELD   @R116385A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R11638AA
SELON772 DS    0H                                             @R116385A
         MVC   PLFTITL(8),=C'PTTRAN  ' FIELD TITLE            @R116385A
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT @R116385A
         LA    R9,MNI_PTD_TRANID       TRANSACTION ID         @R116385A
         LH    R3,FLDLEN               FIELD SIZE             @R116385A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R116385A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R116385A
         BZ    SELON773                ITS EMPTY              @R116385A
         BAL   R14,FLDCHPRT            DO BYTE-STRING DISPLAY @R116385A
         PUT   (R8),PRTLNE             PRINT DATA FOR FIELD   @R116385A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R116385A
SELON773 DS    0H                                             @R116385A
         MVC   PLFTITL(8),=C'PTCOUNT ' FIELD TITLE            @R116385A
         MVC   FLDLEN,=H'4'            FIELD LENGTH TO FORMAT @R116385A
         LA    R9,MNI_PTD_COUNT        HOP DATA COUNT         @R116385A
         LH    R3,FLDLEN               FIELD SIZE             @R116385A
         BCTR  R3,0                    FOR EX INSTRUCTION     @R116385A
         EX    R3,EMPTTEST             CHECK FIELD NOT EMPTY  @R116385A
         BZ    SELON774                ITS EMPTY              @R116385A
         BAL   R14,FLDHXPRT            DO HEX FORMATTING RTN  @R116385A
         BAL   R14,FLDBIPRT            DO BINARY FORMAT RTN.  @R116385A
         PUT   (R8),PRTLNE             PRINT DATA FOR FIELD   @R116385A
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE       @R111685A
SELON774 DS    0H                                             @R116385A
         SPACE ,                                              @R116385A
SELON775 DS    0H                                             @R116385A
         SPACE ,                                                   @LMA
         DROP  R4                      DONE WITH ID DATA SECTION   @LMA
         SPACE ,                                                   @LMA
         L     R4,MNI_DSO              OFFSET TO DATA SECTION      @LMA
         AR    R4,R10                  FIND WHERE DATA STARTS      @LMA
         USING MNI_DATA_ENTRY,R4       ADDRESSABILITY              @LMA
         SR    R3,R3                   CLEAR WORK REGISTER         @LMA
         LH    R3,MNI_DSN              NUMBER OF DATA ENTRIES      @LMA
         LTR   R3,R3                   ANY DATA ENTRIES?           @LMA
         BZ    SELON790                NO, SKIP PROCESSING         @LMA
SELON780 DS    0H                                                  @LMA
         PUT   (R8),SPACES             PRINT EMPTY LINE            @LMA
         SPACE ,                                                   @LMA
         STH   R3,DATASAVE             SAVE NO. OF DATA ENTRIES    @LMA
         MVC   PLFTITL(8),=C'ID=     ' FIELD TITLE                 @LMA
         UNPK  PLFTITL+3(5),MNI_ENTRY_IDENT(3) UNPACK HEX          @LMA
         TR    PLFTITL+3(4),TRTAB      TRANSLATE OUTPUT            @LMA
         MVC   PLFTITL+7(5),=C',LEN='  FIELD TITLE                 @LMA
         UNPK  PLFTITL+12(5),MNI_ENTRY_LENGTH(3)   UNPACK HEX      @LMA
         TR    PLFTITL+12(4),TRTAB     TRANSLATE OUTPUT            @LMA
         MVI   PLFTITL+16,C' '         BLANK OUTPUT                @LMA
SELON781 DS    0H                                                  @LMA
         LA    R9,MNI_ENTRY_FIELD      DATA ENTRY FIELD            @LMA
         MVC   FLDLEN,MNI_ENTRY_LENGTH FIELD LENGTH TO FORMAT      @Q6A
         BAL   R14,FLDIDPRT            DO HEX FORMATTING RTN       @Q6C
         PUT   (R8),PRTLNE             PRINT DATA FOR THIS FIELD   @LMA
         MVC   PRTLNE,SPACES           CLEAR PRINT LINE            @LMA
         SPACE ,                                                   @LMA
         AH    R4,MNI_ENTRY_LENGTH     BUMP TO NEXT DATA ENTRY     @LMA
         AH    R4,MNI_DSL              ADD ENTRY HEADER LENGTH     @LMA
         SPACE ,                                                   @LMA
         SR    R3,R3                   CLEAR WORK REGISTER         @LMA
         LH    R3,DATASAVE             RESTORE OUR COUNTER         @LMA
         BCT   R3,SELON780             LOOP THROUGH DATA ENTRIES   @LMA
         B     SELON790                AND CONTINUE                @LMA
         SPACE  ,                                                  @LMA
         DROP  R4                      DONE WITH DATA ENTRY        @LMA
         SPACE ,                                                   @LMA
SELON790 DS    0H                                                  @LMA
         SPACE ,                                                   @LMA
SELON800 DS    0H                                                  @LMA
         PUT   (R8),SPACES             PRINT EMPTY LINE            @LMA
SELON900 DS    0H                                                  @LMA
         SPACE ,                                                   @LMA
         AH    R10,MNI_LENGTH          NO, A( NEXT ROW )           @LMA
         SPACE ,                                                   @LMA
         SR    R3,R3                   CLEAR WORK REGISTER         @LMA
         LH    R3,ROWSAVE              RESTORE OUR COUNTER         @LMA
         BCT   R3,IDNLOOP              LOOP THRU DATA SECTION      @LMA
         B     MOL3EXIT                WHEN DONE TO SECTION END    @LMA
         SPACE  ,                                                  @LMA
         DROP  R10                                                 @LMA
         TITLE 'DFH$MOL3 - MN RECORD SELECTION TESTS'              @DAC
***********************************************************************
*                                                                     *
*                MONITORING RECORD SELECTION TESTS                    *
*                                                                     *
*   SELECT AND/OR IGNORE RECORDS BASED ON GENERIC APPLID, TRANSACTION *
* ID, TERMINAL ID, USER ID, TASK NO, OR CBTS PROCESS TYPE.            *
*                                                                     *
***********************************************************************
         SPACE
SELECT   DS    0H                  MONITORING RECORD SELECTION
         STM   R4,R9,RSAVE         SAVE SOME REGISTERS             @P8C
         ST    LINK,SELCTSV        SAVE RETURN REG
         L     R9,ANLCBSV          RESTORE ANLCB ADDRESS           @P8C
         USING ANLCB,R9            ADDRESSABILITY
         TM    PROCESSW,SELECTFD+IGNOREFD  ANY SELECTS OR IGNORES?
         BZ    SELECTOK            NO, SELECT EVERYTHING BY DEFAULT
         L     R7,FIRSTBLK         GET FIRST SIBLOCK
         USING SIBLOCK,R7          USE R7 FOR BASE REG
         XC    SISW,SISW           CLEAR SELECT/IGNORE FLAG
SINEXTBK DS    0H                  CHECK ENTIRE BLOCK FOR SELECTION
         XC    SISW2,SISW2         CLEAR HIT/MISS GROUP FLAG
         TM    SISW1,SELECTFD      ARE THERE ANY SELECTS?
         BZ    NOSELECT            NO, THEN SELECT BY DEFAULT
         SPACE
CHKSAPPL DS    0H                  CHECK SELECT GENERIC APPLID
         TM    SELSWTCH,SELAPPL    IS APPLID SELECT ACTIVE
         BZ    ECHKSAPL            NO,
         MVC   WRK2,=CL8' '        PAD SELECT COMPARE AREA
         MVC   WRK2(L'GAPPLID),GAPPLID AGAINST GENERIC APPLID
         L     R4,SAIDCHN          POINT TO CHAIN OF SELECT APPLIDS
         BAL   LINK,SCANID         SCAN FOR EQUAL
         B     *+12                NO HIT RETURN
*              A MATCH WAS FOUND IN THE CHAIN OF GENERIC APPLIDS
         OI    SISW2,SELHIT        REMEMBER HIT
         B     ECHKSAPL            AND CONTINUE CHECKING
         OI    SISW2,SELMIS        REMEMBER THAT WE MISSED
ECHKSAPL DS    0H                  OK -
         SPACE
CHKSTERM DS    0H                  CHECK SELECT TERMID
         TM    SELSWTCH,SELTERM    IS TERMID SELECT ACTIVE
         BZ    ECHKSTRM            NO,
         MVC   WRK2,=CL8' '        PAD SELECT COMPARE AREA
         MVC   WRK2(L'TERMID),TERMID   AGAINST TERMID
         L     R4,STRMCHN          POINT TO CHAIN OF SELECT TERMIDS
         BAL   LINK,SCANID         SCAN FOR EQUAL
         B     *+12                NO HIT RETURN
*              A MATCH WAS FOUND IN THE CHAIN OF TERMIDS
         OI    SISW2,SELHIT        REMEMBER HIT
         B     ECHKSTRM            AND CONTINUE CHECKING
         OI    SISW2,SELMIS        REMEMBER THAT WE MISSED
ECHKSTRM DS    0H                  OK -
         SPACE
CHKSTRAN DS    0H                  CHECK SELECT TRANID
         TM    SELSWTCH,SELTRAN    IS TRANID SELECTION ACTIVE
         BZ    ECHKSTRN            NO
         MVC   WRK2,=CL8' '        PAD SELECT COMPARE AREA
         MVC   WRK2(L'TRANID),TRANID   AGAINST TRANID
         L     R4,STRNCHN          POINT TO CHAIN OF SELECT TRANIDS
         BAL   LINK,SCANID         SCAN FOR EQUAL
         B     *+12                NO HIT RETURN
*              A MATCH WAS FOUND IN THE CHAIN OF TRANIDS
         OI    SISW2,SELHIT        REMEMBER HIT
         B     ECHKSTRN            AND CONTINUE CHECKING
         OI    SISW2,SELMIS        REMEMBER THAT WE MISSED
ECHKSTRN DS    0H                  OK -
         SPACE
CHKSUSID DS    0H                  CHECK SELECT USERID
         TM    SELSWTCH,SELUSID    IS USERID SELECT ACTIVE
         BZ    ECHKSUID            NO
         MVC   WRK2,=CL8' '        PAD SELECT COMPARE AREA
         MVC   WRK2(L'USERID),USERID   AGAINST USERID
         L     R4,SUIDCHN          POINT TO CHAIN OF SELECT USERIDS
         BAL   LINK,SCANID         SCAN FOR EQUAL
         B     *+12                NO HIT RETURN
*              A MATCH WAS FOUND IN THE CHAIN OF USERIDS
         OI    SISW2,SELHIT        REMEMBER HIT
         B     ECHKSUID            AND CONTINUE CHECKING
         OI    SISW2,SELMIS        REMEMBER THAT WE MISSED
ECHKSUID DS    0H                  OK -
         SPACE ,                                                   @PNA
CHKSTASK DS    0H                  CHECK SELECT TASKNO             @PNA
         TM    SELSWTCH+1,SELTASK  IS TASKNO SELECT ACTIVE         @PNA
         BZ    ECHKSTSK            NO,                             @PNA
         XC    WRK2,WRK2           CLEAR SELECT COMPARE AREA       @PNA
         MVC   WRK2+4(L'TASKNO),TASKNO AGAINST TASKNO              @PNA
         L     R4,STSKCHN          POINT TO CHAIN OF SELECT TASKNOS    F
                                                                   @PNA
         BAL   LINK,SCANID         SCAN FOR EQUAL                  @PNA
         B     *+12                NO HIT RETURN                   @PNA
*              A MATCH WAS FOUND IN THE CHAIN OF TASKNOS
         OI    SISW2,SELHIT        REMEMBER HIT                    @PNA
         B     ECHKSTSK            AND CONTINUE CHECKING           @PNA
         OI    SISW2,SELMIS        REMEMBER THAT WE MISSED         @PNA
ECHKSTSK DS    0H                  OK -                            @PNA
         SPACE ,                                                   @LEA
CHKSPRST DS    0H                  CHECK SELECT PRCSTYPE           @LEA
         TM    SELSWTCH+1,SELPRST  IS PRCSTYPE SELECT ACTIVE       @LEA
         BZ    ECHKSPST            NO,                             @LEA
         MVC   WRK2,=CL8' '        PAD SELECT COMPARE AREA         @LEA
         MVC   WRK2(L'PRCSTYPE),PRCSTYPE   AGAINST PRCSTYPE        @LEA
         L     R4,SPSTCHN          POINT TO CHAIN OF SELECT PRCSTYPES  F
                                                                   @LEA
         BAL   LINK,SCANID         SCAN FOR EQUAL                  @LEA
         B     *+12                NO HIT RETURN                   @LEA
*              A MATCH WAS FOUND IN THE CHAIN OF PRCSTYPES
         OI    SISW2,SELHIT        REMEMBER HIT                    @LEA
         B     ECHKSPST            AND CONTINUE CHECKING           @LEA
         OI    SISW2,SELMIS        REMEMBER THAT WE MISSED         @LEA
ECHKSPST DS    0H                  OK -                            @LEA
         SPACE ,                                                   @LEA
         TM    SISW2,SELMIS        DID WE MISS ANYWHERE IN GROUP?
         BO    SIGETNXT            YES, IF SO TRY ANOTHER GROUP
         OI    SISW,SELHIT         NO, THEN THIS GROUP SELECTED HIM
         B     IGNORE              NO, GO PROCESS ANY IGNORES THEN
         SPACE ,                                                   @LEC
NOSELECT DS    0H
         TM    SISW1,IGNOREFD      ARE THERE ANY IGNORES?
         BZ    SIGETNXT            NO, CHECK FOR MORE GROUPS
         OI    SISW2,SELHIT        SELECT BY DEFAULT
         OI    SISW,SELHIT         SELECT BY DEFAULT
         SPACE
IGNORE   DS    0H
         TM    SISW1,IGNOREFD      ARE THERE ANY IGNORES?
         BZ    SIGETNXT            NO, CHECK FOR MORE GROUPS
         TM    SISW2,SELHIT        HAVE WE BEEN SELECTED IN GROUP
         BZ    SIGETNXT            NO, CHECK FOR MORE GROUPS
         EJECT  ,                                                  @P8C
CHKIAPPL DS    0H                  CHECK IGNORE GENERIC APPLID
         TM    SELSWTCH,IGNAPPL    IS APPLID IGNORE ACTIVE
         BZ    ECHKIAPL            NO,
         MVC   WRK2,=CL8' '        PAD SELECT COMPARE AREA
         MVC   WRK2(L'GAPPLID),GAPPLID AGAINST GENERIC APPLID
         L     R4,IAIDCHN          POINT TO CHAIN OF IGNORE APPLIDS
         BAL   LINK,SCANID         SCAN FOR EQUAL
         B     *+12                NO HIT RETURN
*              A MATCH WAS FOUND IN THE CHAIN OF USERIDS
         OI    SISW2,IGNHIT        REMEMBER HIT
         B     ECHKIAPL            AND CONTINUE CHECKING
         OI    SISW2,IGNMIS        REMEMBER THAT WE MISSED
ECHKIAPL DS    0H                  OK -
         SPACE
CHKITERM DS    0H                  CHECK IGNORE TERMID
         TM    SELSWTCH,IGNTERM    IS TERMID IGNORE ACTIVE
         BZ    ECHKITRM            NO,
         MVC   WRK2,=CL8' '        PAD SELECT COMPARE AREA
         MVC   WRK2(L'TERMID),TERMID   AGAINST TERMID
         L     R4,ITRMCHN          POINT TO CHAIN OF IGNORE TERMIDS
         BAL   LINK,SCANID         SCAN FOR EQUAL
         B     *+12                NO HIT RETURN
*              A MATCH WAS FOUND IN THE CHAIN OF USERIDS
         OI    SISW2,IGNHIT        REMEMBER HIT
         B     ECHKITRM            AND CONTINUE CHECKING
         OI    SISW2,IGNMIS        REMEMBER THAT WE MISSED
ECHKITRM DS    0H                  OK -
         SPACE
CHKITRAN DS    0H                  CHECK IGNORE TRANID
         TM    SELSWTCH,IGNTRAN    IS TRANID IGNORE ACTIVE
         BZ    ECHKITRN            NO
         MVC   WRK2,=CL8' '        PAD SELECT COMPARE AREA
         MVC   WRK2(L'TRANID),TRANID   AGAINST TRANID
         L     R4,ITRNCHN          POINT TO CHAIN OF IGNORE TRANIDS
         BAL   LINK,SCANID         SCAN FOR EQUAL
         B     *+12                NO HIT RETURN
*              A MATCH WAS FOUND IN THE CHAIN OF USERIDS
         OI    SISW2,IGNHIT        REMEMBER HIT
         B     ECHKITRN            AND CONTINUE CHECKING
         OI    SISW2,IGNMIS        REMEMBER THAT WE MISSED
ECHKITRN DS    0H                  OK -
         SPACE
CHKIUSID DS    0H                  CHECK IGNORE USERID
         TM    SELSWTCH,IGNUSID    IS USERID IGNORE ACTIVE
         BZ    ECHKIUID            NO
         MVC   WRK2,=CL8' '        PAD SELECT COMPARE AREA
         MVC   WRK2(L'USERID),USERID   AGAINST USERID
         L     R4,IUIDCHN          POINT TO CHAIN OF IGNORE USERIDS
         BAL   LINK,SCANID         SCAN FOR EQUAL
         B     *+12                NO HIT RETURN
*              A MATCH WAS FOUND IN THE CHAIN OF USERIDS
         OI    SISW2,IGNHIT        REMEMBER HIT
         B     ECHKIUID            AND CONTINUE CHECKING
         OI    SISW2,IGNMIS        REMEMBER THAT WE MISSED
ECHKIUID DS    0H                  OK -
         SPACE ,                                                   @PNA
CHKITASK DS    0H                  CHECK IGNORE TASKNO             @PNA
         TM    SELSWTCH+1,IGNTASK  IS TASKNO IGNORE ACTIVE         @PNA
         BZ    ECHKITSK            NO,                             @PNA
         XC    WRK2,WRK2           CLEAR SELECT COMPARE AREA       @PNA
         MVC   WRK2+4(L'TASKNO),TASKNO AGAINST TASKNO              @PNA
         L     R4,ITSKCHN          POINT TO CHAIN OF IGNORE TASKNOS    F
                                                                   @PNA
         BAL   LINK,SCANID         SCAN FOR EQUAL                  @PNA
         B     *+12                NO HIT RETURN                   @PNA
*              A MATCH WAS FOUND IN THE CHAIN OF TASKNOS
         OI    SISW2,IGNHIT        REMEMBER HIT                    @PNA
         B     ECHKITSK            AND CONTINUE CHECKING           @PNA
         OI    SISW2,IGNMIS        REMEMBER THAT WE MISSED         @PNA
ECHKITSK DS    0H                  OK -                            @PNA
         SPACE  ,                                                  @LEA
CHKIPRST DS    0H                  CHECK IGNORE PRCSTYPE           @LEA
         TM    SELSWTCH+1,IGNPRST  IS PRCSTYPE IGNORE ACTIVE       @LEA
         BZ    ECHKIPST            NO                              @LEA
         MVC   WRK2,=CL8' '        PAD SELECT COMPARE AREA         @LEA
         MVC   WRK2(L'PRCSTYPE),PRCSTYPE   AGAINST PRCSTYPE        @LEA
         L     R4,IPSTCHN          POINT TO CHAIN OF IGNORE PRCSTYPES  F
                                                                   @LEA
         BAL   LINK,SCANID         SCAN FOR EQUAL                  @LEA
         B     *+12                NO HIT RETURN                   @LEA
*              A MATCH WAS FOUND IN THE CHAIN OF PRCSTYPES
         OI    SISW2,IGNHIT        REMEMBER HIT                    @LEA
         B     ECHKIPST            AND CONTINUE CHECKING           @LEA
         OI    SISW2,IGNMIS        REMEMBER THAT WE MISSED         @LEA
ECHKIPST DS    0H                  OK -                            @LEA
         SPACE ,                                                   @LEC
         TM    SISW2,IGNHIT        WERE WE IGNORED?
         BZ    SIGETNXT            NO, TRY ANOTHER GROUP
         OI    SISW,IGNHIT         THIS GROUP IGNORED HIM
         B     SISELECT            GO DECIDE WHAT TO DO
         SPACE
SIGETNXT DS    0H                  CHECK ENTIRE BLOCK
         L     R7,NEXTBLK          POINT TO NEXT BLOCK/GROUP
         LTR   R7,R7               WAS BLOCK/GROUP THERE
         BNZ   SINEXTBK            IF SO PROCESS IT
SISELECT DS    0H
         TM    SISW,SELHIT         WERE WE SELECTED
         BZ    SELECTNO            NO, IGNORE THIS RECORD
         TM    SISW,IGNHIT         WERE WE IGNORED
         BNZ   SELECTNO            YES, IGNORE THIS RECORD
         SPACE
         DROP  R7
         SPACE  ,                                                  @P8C
SELECTOK DS    0H                  WE HAVE SELECTED THIS RECORD
         OI    READFLAG,RECSPROC   FLAG AS SELECTED RECORD
         LM    R4,R9,RSAVE         RESTORE SOME REGISTERS          @P8C
         L     LINK,SELCTSV        RESTORE LINK REG
         B     4(LINK)             TAKE - YES RETURN PATH
SELECTNO DS    0H                  NON SELECTED RECORD
         LM    R4,R9,RSAVE         RESTORE SOME REGISTERS          @P8C
         L     LINK,SELCTSV        RESTORE LINK REG
         BR    LINK                TAKE - NO RETURN PATH
         SPACE  ,                                                  @P8A
         DROP  R9                                                  @P8A
         SPACE
SCANID   DS    0H                  SCAN SELECTION CHAIN FOR MATCH
SCANRESC SR    R5,R5               CLEAR WORK
         IC    R5,0(R4)            GET ACTIVE ENTRY COUNT
         LA    R6,4(R4)            POINT TO FIRST OPERAND
SCANLOOP CLC   WRK2,0(R6)          IS IT A MATCH
         BE    4(LINK)             YES, RETURN TO CALLER           @D5C
         LA    R6,8(R6)            BUMP TO NEXT OPERAND
         BCT   R5,SCANLOOP         LOOK AT NEXT OPERAND
         OC    1(3,R4),1(R4)       IS CHAIN POINTER CONTINUED
         BCR   8,LINK              NO RETURN
         L     R4,0(R4)            POINT TO NEXT
         B     SCANRESC            KEEP IT UP
         SPACE
         TITLE 'DFH$MOL3 - DATA AREAS'                             @P8C
***********************************************************************
*              STORAGE AREAS FOR PROGRAM                              *
***********************************************************************
         SPACE 1
MOL3_STATIC DS 0F                  DFH$MOL3 STATIC DATA            @PWC
SAVEOFST DC    XL2'0000'           SAVED FIELD OFFSET              @PWC
         SPACE ,                                                   @PWC
ROWSAVE  DC    H'0'                SAVE AREA FOR LOOP COUNTER      @PWC
FILESAVE DC    H'0'                SAVE AREA FOR FILE LOOP COUNT   @PWC
DPLSAVE  DC    H'0'                SAVE AREA FOR DPL LOOP COUNT    @DAA
TSQSAVE  DC    H'0'                SAVE AREA FOR TSQ LOOP COUNT    @06A
URISAVE  DC    H'0'                SAVE AREA FOR URIMAP LOOP C@R146209A
WEBSAVE  DC    H'0'                SAVE AREA FOR WEBSVC LOOP C@R146209A
DATASAVE DC    H'0'                SAVE AREA FOR DATA ENTRY LOOP   @LMA
GAPPLID  DC    CL8' '              GENERIC APPLID                  @PWC
SAPPLID  DC    CL8' '              SPECIFIC APPLID                 @PWC
TRANID   DC    CL4' '              TRANSACTION ID                  @PWC
TERMID   DC    CL4' '              TERMINAL ID                     @PWC
USERID   DC    CL8' '              USER ID                         @PWC
TASKNO   DC    PL4'0'              TASK NUMBER                     @PWC
PRCSTYPE DC    CL8' '              CBTS PROCESS TYPE               @PWC
         SPACE ,                                                   @PWC
UNLDPR09 DC    F'0'                SAVE AREA FOR                   @PWC
MOVEDATA MVC   0(0,R2),0(R9)       EXECUTED INSTRUCTION            @PWC
         SPACE ,                                                   @PWC
BLANKS   DC    22C' '              CHECK FOR A BLANK TOKEN         @PWC
         SPACE ,                                                   @PWC
IDLUPR14 DC    F'0'                SAVE AREA FOR R14               @PWC
EMPTTEST OC    0(0,R9),0(R9)       EXECUTED INSTRUCTION            @PWC
EMPTIES  DC    X'0'                                                @PWC
         SPACE ,                                                   @PWC
FLDLEN   DC    H'0'                LENGTH OF DATA TO BE PROCESS    @PWC
FLDR14SV DC    F'0'                RETURN REGISTER SAVE AREA.      @PWC
FLDP14SV DC    F'0'                PRINT ROUTINE R14 SAVE AREA     @PWC
FLDWK5   DC    CL5' '              5 BYTE WORK AREA                @LMA
FLDWK9   DC    CL9' '              9 BYTE WORK AREA                @LMA
         SPACE ,                                                   @PWC
FLDMVC1  MVC   FLDWK5(0),0(R9)     MOVE INTO WORKAREA              @LMA
FLDMVC2  MVC   0(0,R14),FLDWK9     MOVE INTO PRINTLINE             @LMA
FLDMVC3  MVC   0(0,R15),0(R9)      MOVE INTO PRINTLINE             @LMA
FLDHXUPK UNPK  PLUNPK(0),0(0,R9)   UNPACK DATA IN PRINT LINE       @PWC
         SPACE ,                                                   @PWC
FLDCHCF  OC    0(0,R9),0(R9)       TEST IF ANY REMAINING CHARS     @PWC
FLDCHOFF DC    H'0'                                                @PWC
FLDCHR9  DC    F'0'                SAVE AREA FOR FIELD-POINTER     @PWC
         SPACE ,                                                   @PWC
FLDPKPAT DS    0XL32                                               @PWC
         DC    XL10'40202020202020202020'                          @PWC
         DC    XL11'2020202020202020202020'                        @PWC
         DC    XL11'2020202020202020202120'                        @PWC
FLDPKMVC MVC   FLDPKWK2(0),0(R9)   MOVE INPUT FLD INTO KNOWN AREA  @PWC
FLDPKZAP ZAP   FLDPKWK1,0(0,R2)    MOVE INPUT FLD INTO KNOWN AREA  @PWA
         DS    0D                  ALIGN FOR CVD                   @PWC
FLDPKWK1 DC    PL16'0'             FIXED LENGTH AREA FOR USE IN EX @PWC
FLDPKWK2 DC    XL16'00'            FIXED LENGTH AREA FOR USE IN EX @PWA
         SPACE ,                                                   @PWC
FLDBIPAT DC    XL26'402020202020202020202020202020202020202020202020212F
               0'                                                  @PWC
         SPACE ,                                                   @PWC
SELCTSV  DC    F'0'                SAVE LINK REG                   @PWC
         SPACE ,                                                   @PWC
MOL3SAVE DC    18F'0'              SAVE AREA                       @P8A
RSAVE    DS    9D                  REGISTER SAVE AREA
WRK2     DS    D                   WORK SPACE FOR CVD AND UNPACK
         ORG   WRK2                ORG BACK                        @D7A
WRK7     DS    2D                  WORK SPACE FOR CVDG AND UNPACK  @D7A
         DS    D                   WORK SPACE FOR CVD AND UNPACK
         SPACE
IPPARMS  DC    2F'0'               DATE & TIME CONVERSION I/P      @P8C
TODOP    DC    16C' '              DATE & TIME CONVERSION O/P      @P8C
TIMEWORK DC    16C' '              DATE & TIME CONVERSION O/P      @P8A
         SPACE ,                                                   @D7A
MICSDAY  DC    FD'86400000000'     MICROSECONDS IN A DAY           @D7A
         SPACE ,                                                   @PWC
DICTADDR DC    F'0'                CURRENT DICTIONARY STORAGE ADDRESS
DICTLEN  DC    F'0'                CURRENT DICTIONARY LENGTH
DICTAPPL DC    CL8' '              DICTIONARY APPLID
DICTENDS DC    F'0'                DICTIONARY END ADDRESSES
DICTADR2 DC    F'0'                FIXED DICTIONARY STORAGE ADDRESS    F
                                                                   @LEA
DICTLEN2 DC    AL4(DC3END-DC3BEGIN)    FIXED DICTIONARY LENGTH     @LEA
         SPACE ,                                                   @DAA
FILETAB  DS    0F                      FILE RESOURCE FIELD TABLE   @DAA
FILENAME DC    CL8'FILENAME'           FIELD TITLE                 @DAA
         DC    CL1'C'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_FILE_NAME-MNR_FILE_ENTRY)                   @DAA
FCGETCT  DC    CL8'FCGETCT '           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_FILE_GET-MNR_FILE_ENTRY)                    @DAA
FCPUTCT  DC    CL8'FCPUTCT '           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_FILE_PUT-MNR_FILE_ENTRY)                    @DAA
FCBRWCT  DC    CL8'FCBRWCT '           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_FILE_BRWSE-MNR_FILE_ENTRY)                  @DAA
FCADDCT  DC    CL8'FCADDCT '           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_FILE_ADD-MNR_FILE_ENTRY)                    @DAA
FCDELCT  DC    CL8'FCDELCT '           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_FILE_DEL-MNR_FILE_ENTRY)                    @DAA
FCTOTCT  DC    CL8'FCTOTCT '           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_FILE_TOTAL-MNR_FILE_ENTRY)                  @DAA
FCAMCT   DC    CL8'FCAMCT  '           FIELD TITLE                 @DAA
         DC    CL1'A'                  FIELD TYPE                  @DAA
         DC    AL1(4)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_FILE_AM_RQ-MNR_FILE_ENTRY)                  @DAA
FCIOWTT  DC    CL8'FCIOWTT '           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_FILE_IO_WT-MNR_FILE_ENTRY)                  @DAA
RLSWAIT  DC    Cl8'RLSWAIT '           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_RLS_FILE_IO_WT-MNR_FILE_ENTRY)              @DAA
CFDTWAIT DC    CL8'CFDTWAIT'           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_CFDT_IO_WT-MNR_FILE_ENTRY)                  @DAA
FCXCWTT  DC    CL8'FCXCWTT '           FIELD TITLE             @R36300A
         DC    CL1'S'                  FIELD TYPE              @R36300A
         DC    AL1(8)                  FIELD LENGTH            @R36300A
         DC    AL2(MNR_FILE_XC_WT-MNR_FILE_ENTRY)              @R36300A
FCVSWTT  DC    CL8'FCVSWTT '           FIELD TITLE             @R36300A
         DC    CL1'S'                  FIELD TYPE              @R36300A
         DC    AL1(8)                  FIELD LENGTH            @R36300A
         DC    AL2(MNR_FILE_VS_WT-MNR_FILE_ENTRY)              @R36300A
         SPACE ,                                                   @DAA
TSQTAB   DS    0F                      TSQUEUE RESOURCE FIELD TABLE    F
                                                                   @DAA
TSQNAME  DC    CL8'TSQNAME '           FIELD TITLE                 @DAA
         DC    CL1'C'                  FIELD TYPE                  @DAA
         DC    AL1(16)                 FIELD LENGTH                @DAA
         DC    AL2(MNR_TSQUEUE_NAME-MNR_TSQUEUE_ENTRY)             @DAA
TSGETCT  DC    CL8'TSGETCT '           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_TSQUEUE_GET-MNR_TSQUEUE_ENTRY)              @DAA
TSPUTACT DC    CL8'TSPUTACT'           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_TSQUEUE_PUT_AUX-MNR_TSQUEUE_ENTRY)          @DAA
TSPUTMCT DC    CL8'TSPUTMCT'           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_TSQUEUE_PUT_MAIN-MNR_TSQUEUE_ENTRY)         @DAA
TSTOTCT  DC    Cl8'TSTOTCT '           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_TSQUEUE_TOTAL-MNR_TSQUEUE_ENTRY)            @DAA
TSGILEN  DC    CL8'TSGILEN '           FIELD TITLE                 @DAA
         DC    CL1'A'                  FIELD TYPE                  @DAA
         DC    AL1(4)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_TSQUEUE_GET_ITEML-MNR_TSQUEUE_ENTRY)        @DAA
TSPAILEN DC    CL8'TSPAILEN'           FIELD TITLE                 @DAA
         DC    CL1'A'                  FIELD TYPE                  @DAA
         DC    AL1(4)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_TSQUEUE_PUT_AUX_ITEML-MNR_TSQUEUE_ENTRY)    @DAA
TSPMILEN DC    CL8'TSPMILEN'           FIELD TITLE                 @DAA
         DC    CL1'A'                  FIELD TYPE                  @DAA
         DC    AL1(4)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_TSQUEUE_PUT_MAIN_ITEML-MNR_TSQUEUE_ENTRY)   @DAA
TSIOWTT  DC    CL8'TSIOWTT '           FIELD TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_TSQUEUE_IO_WT-MNR_TSQUEUE_ENTRY)            @DAA
TSSHWAIT DC    CL8'TSSHWAIT'           FIELD-TITLE                 @DAA
         DC    CL1'S'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_SHR_TSQUEUE_IO_WT-MNR_TSQUEUE_ENTRY)        @DAA
         SPACE ,                                                   @DAA
DPLTAB   DS    0F                      DPL RESOURCE FIELD TABLE    @DAA
DPLPROG  DC    CL8'PROGRAM '           FIELD TITLE                 @DAA
         DC    CL1'C'                  FIELD TYPE                  @DAA
         DC    AL1(8)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_DPL_PROGRAM_NAME-MNR_DPL_ENTRY)             @DAA
DPLSYSID DC    CL8'SYSID   '           FIELD TITLE                 @DAA
         DC    CL1'C'                  FIELD TYPE                  @DAA
         DC    AL1(4)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_DPL_SYSID-MNR_DPL_ENTRY)                    @DAA
PCDPLCT  DC    CL8'PCDPLCT '           FIELD TITLE                 @DAA
         DC    CL1'A'                  FIELD TYPE                  @DAA
         DC    AL1(4)                  FIELD LENGTH                @DAA
         DC    AL2(MNR_DPL_LINK_REQS-MNR_DPL_ENTRY)                @DAA
         SPACE  ,                                                  @DAC
URITAB   DS    0F                      URIMAP RESOURCE FIELD T@R146209A
URIMAP   DC    CL8'URIMAP  '           FIELD TITLE            @R146209A
         DC    CL1'C'                  FIELD TYPE             @R146209A
         DC    AL1(8)                  FIELD LENGTH           @R146209A
         DC    AL2(MNR_URIMAP_NAME-MNR_URIMAP_ENTRY)          @R146209A
WBURIOPN DC    CL8'WBURIOPN'           FIELD TITLE            @R146209A
         DC    CL1'S'                  FIELD TYPE             @R146209A
         DC    AL1(8)                  FIELD LENGTH           @R146209A
         DC    AL2(MNR_URIMAP_WEBOPEN-MNR_URIMAP_ENTRY)       @R146209A
WBURIRCV DC    CL8'WBURIRCV'           FIELD TITLE            @R146209A
         DC    CL1'S'                  FIELD TYPE             @R146209A
         DC    AL1(8)                  FIELD LENGTH           @R146209A
         DC    AL2(MNR_URIMAP_WEBRECV-MNR_URIMAP_ENTRY)       @R146209A
WBURISND DC    CL8'WBURISND'           FIELD TITLE            @R146209A
         DC    CL1'S'                  FIELD TYPE             @R146209A
         DC    AL1(8)                  FIELD LENGTH           @R146209A
         DC    AL2(MNR_URIMAP_WEBSEND-MNR_URIMAP_ENTRY)       @R146209A
         SPACE  ,                                             @R146209A
WEBTAB   DS    0F                      WEBSVC RESOURCE FIELD T@R146209A
WEBSERVC DC    CL8'WEBSERVC'           FIELD TITLE            @R146209A
         DC    CL1'C'                  FIELD TYPE             @R146209A
         DC    AL1(32)                 FIELD LENGTH           @R146209A
         DC    AL2(MNR_WEBSVC_NAME-MNR_WEBSVC_ENTRY)          @R146209A
PIPELINE DC    CL8'PIPELINE'           FIELD TITLE            @R146209A
         DC    CL1'S'                  FIELD TYPE             @R146209A
         DC    AL1(8)                  FIELD LENGTH           @R146209A
         DC    AL2(MNR_WEBSVC_PIPE-MNR_WEBSVC_ENTRY)          @R146209A
WBSVINVK DC    CL8'WBSVINVK'           FIELD TITLE            @R146209A
         DC    CL1'S'                  FIELD TYPE             @R146209A
         DC    AL1(8)                  FIELD LENGTH           @R146209A
         DC    AL2(MNR_WEBSVC_INVK-MNR_WEBSVC_ENTRY)          @R146209A
         SPACE  ,                                             @R146209A
ANLCBSV  DC    F'0'                SAVE ANLCB ADDRESS
PRINTRSV DC    F'0'                SAVED PRINT DCB ADDRESS         @P8A
IDSAVE   DS    H                   NUMBER OF IDENTIFIERS
         SPACE  ,                                                  @P8C
SPACES   DC    CL133' '            SPACES FOR PRINTLINE
PRTCC    DC    CL1' '              PRINT CONTROL CHARACTER
PRTLNE   DC    CL133' '            COMMON PRINT LINE
EMPTREPT DC    C' '                CARRIAGE
         DC    CL132'             ...'
         SPACE
TRTAB    DC    CL256' '
         ORG   TRTAB+C'.'
         DC    CL1'.'
         ORG   TRTAB+C':'
         DC    CL1':'
         ORG   TRTAB+C'A'
         DC    CL9'ABCDEFGHI'
         ORG   TRTAB+C'J'
         DC    CL9'JKLMNOPQR'
         ORG   TRTAB+C'S'
         DC    CL8'STUVWXYZ'
         ORG   TRTAB+C'0'
         DC    CL16'0123456789ABCDEF'
         ORG   ,
         EJECT  ,                                                  @P8C
MSG104   DC    CL133' '
         ORG   MSG104+1
         DC    C'NO DATA FOR THIS CICS DATA SECTION; '
         DC    C'REPORT IS TERMINATED'
         ORG   ,
MSG105   DC    CL133' '
         ORG   MSG105+1
         DC    C'UNKNOWN CLASS IN CICS DATA SECTION; '
         DC    C'REPORT IS TERMINATED'
         ORG   ,
MSG108   DC    CL133' '
         ORG   MSG108+1
         DC    C'X''    '' - CONNECTOR NOT DEFINED; '
         DC    C'REPORT IS TERMINATED'
         ORG   ,
MSG109   DC    CL133' '
         ORG   MSG109+1
         DC    C'NO DICTIONARY ESTABLISHED FOR APPLID '            @DAC
         DC    C'xxxxxxxx; REPORT IS TERMINATED'                   @DAA
         ORG   ,
MSG110   DC    CL133' '
         ORG   MSG110+1
         DC    C'NO DICTIONARY ESTABLISHED FOR NEW APPLID '
         DC    C'xxxxxxxx; REPORT IS TERMINATED'
         ORG   ,
MSG116   DC    CL133' '                                        @BA63143
         ORG   MSG116+1                                        @BA63143
         DC    CL133'NO FILE RESOURCE ENTRIES'                 @BA63143
         ORG   ,                                               @BA63143
MSG117   DC    CL133' '                                            @06A
         ORG   MSG117+1                                            @06A
         DC    CL133'NO TSQUEUE RESOURCE ENTRIES'                  @06A
         ORG   ,                                                   @06A
MSG121   DC    CL133' '                                            @DAA
         ORG   MSG121+1                                            @DAA
         DC    CL133'NO DPL RESOURCE ENTRIES'                      @DAA
         ORG   ,                                                   @DAA
MSG122   DC    CL133' '                                       @R146209A
         ORG   MSG122+1                                       @R146209A
         DC    CL133'NO URIMAP RESOURCE ENTRIES'              @R146209A
         ORG   ,                                              @R146209A
MSG123   DC    CL133' '                                       @R146209A
         ORG   MSG123+1                                       @R146209A
         DC    CL133'NO WEBSERVICE RESOURCE ENTRIES'          @R146209A
         ORG   ,                                              @R146209A
         SPACE 1
*   LISTING LINES - TITLES
         SPACE 1
DLTITLR  DC    CL19'FIELD-NAME---------'
DLTITLD  DC    CL14'FIELD-NAME'
         DC    CL1' '                                              @PTA
         DC    CL6'SIZE'
         DC    CL10'CONNECTOR'
         DC    CL10'OFFSET'
         DC    CL10'NICKNAME'
         DC    CL9' '                                              @PTC
         DC    CL30'NEW IN-CORE DICTIONARY'
DLDESCU  DC    CL13'UNINTERPRETED'
DLDESCI  DC    CL11'INTERPRETED'
         EJECT
         LTORG
         EJECT
***********************************************************************
*   THIS DSECT IS USED TO DESCRIBE THE PRINTING LAYOUTS USED FOR ALL  *
*  THE LISTING DATA LINES WITHIN THIS PROGRAM.                        *
***********************************************************************
         SPACE 1
PRTDSCT  DSECT  ,
PRTCTRL  DS    C
PRTAREA  DS    CL132
         SPACE 1
         ORG   PRTAREA
PTITLE   DS    CL24                AREA FOR HEADING TITLES
         DS    CL2
PHDGFLDS EQU   *                   START OF DATA FLDS IN HEADINGS
         SPACE 1
*     SMF HEADER - BASE
         SPACE 1
PTIMEH   DS    CL6                 TIME STAMP
PTIMED   DS    CL12
         DS    CL4                                                 @P8C
PDATEH   DS    CL6                 DATE STAMP
PDATED   DS    CL9                                                 @P8C
         DS    CL3
PSYSIDH  DS    CL11                SYSTEM ID
         DS    CL1
PSYSIDD  DS    CL4
         DS    CL4                                                 @P8C
PSSYSIDH DS    CL11                SUB SYSTEM ID
         DS    CL1
PSSYSIDD DS    CL4
         DS    CL4                                                 @P8C
POSYSIDH DS    CL10                OPERATING SYSTEM ID
POSYSIDD DS    CL12
         DS    CL3
PEND0    DS    CL1
         SPACE 1
         ORG   PHDGFLDS
         SPACE 1
*     SMF HEADER - LINE 2
         SPACE 1
PRTYPH   DS    CL11                RECORD TYPE
PRTYPD   DS    CL3
         DS    CL3
PRSTYPH  DS    CL14                RECORD SUBTYPE
PRSTYPD  DS    CL2
         DS    CL3
PTRPNH   DS    CL17                NO OF TRIPLETS
PTRPND   DS    CL2
         DS    CL25                                                @P7C
PRSYSLVH DS    CL13                Operating system product level  @P7A
         DS    CL1                                                 @P7A
PRSYSLVD DS    CL8                                                 @P7A
         DS    CL3                                                 @P7A
PEND1    DS    CL1
         SPACE 1
         ORG   PHDGFLDS
         SPACE 1
*   SMF HEADER      - LINE 3,4
*   PRODUCT SECTION - LINE 2,3
         SPACE 1
POFFSETH DS    CL18            OFFSET TO APPROPRIATE SECTION
         DS    CL1
POFFSETD DS    CL4
         DS    CL3
PLENGTHH DS    CL18            LENGTH OF SECTION
         DS    CL1
PLENGTHD DS    CL2
         DS    CL5
PNUMBERH DS    CL19            NUMBER OF ITEMS IN SECTION
         DS    CL1
PNUMBERD DS    CL4
         DS    CL9                                                 @06A
         DS    CL20                                                @D5C
PEND2    DS    CL1
         SPACE 1
         ORG   PHDGFLDS
         SPACE 1
*     PRODUCT SECTION - LINE 1
         SPACE 1
PRECVRH  DS    CL13                CMF RECORD VERSION
         DS    CL1
PRECVRD  DS    CL4                                                 @P8C
         DS    CL2
PRMINDH  DS    CL15                RECORD MAINTENANCE INDICATOR
         DS    CL1
PRMINDD  DS    CL2
         DS    CL3
PGAPPLH  DS    CL10                GENERIC APPLID
         DS    CL1
PGAPPLD  DS    CL8
         DS    CL3
PSAPPLH  DS    CL10                SPECIFIC APPLID
         DS    CL1
PSAPPLD  DS    CL8
         DS    CL3
PRCLASH  DS    CL12                CLASS OF DATA
         DS    CL1
PRCLASD  DS    CL2
         DS    CL1
         DS    CL4                                                 @P8C
PEND3    DS    CL1
         SPACE 1                                                   @L2A
         ORG   PHDGFLDS                                            @L2A
         SPACE 1                                                   @L2A
*     PRODUCT SECTION - LINE 2
         SPACE 1                                                   @L2A
PJMRJOBH DS    CL10                JMR JOB NAME                    @L2A
         DS    CL1                                                 @L2A
PJMRJOB  DS    CL8                                                 @L2A
         DS    CL3                                                 @L2A
PJMRDATH DS    CL12                JMR ENTRY DATE                  @L2A
PJMRDATE DS    CL9                                                 @P8C
         DS    CL3                                                 @L2A
PJMRTIMH DS    CL12                JMR ENTRY TIME                  @L2A
PJMRTIME DS    CL12                                                @L2A
         DS    CL3                                                 @L2A
PJMRUIFH DS    CL21                JMR USERID                      @L2A
         DS    CL1                                                 @L2A
PJMRUIF  DS    CL8                                                 @L2A
         DS    CL2                                                 @P8C
PEND4    DS    CL1                                                 @L2A
         SPACE 1                                                   @L5A
         ORG   PHDGFLDS                                            @D5C
         SPACE 1                                                   @D5C
* Product section - line 5
         SPACE 1                                                   @D5A
PDSECRLH DS    CL24            COMPRESSED DATA RECORD LENGTH       @D5A
         DS    CL1                                                 @D5A
PDSECRLD DS    CL4                                                 @D5A
         DS    CL4                                                 @D5A
         DS    CL18                                                @D5A
         DS    CL20                                                @D5A
         DS    CL2                                                 @D5A
PMCTOPNH DS    CL16            MCT OPTIONS                         @D5A
PMCTOPND DS    CL4                                                 @D5A
         DS    CL2                                                 @D5A
         DS    CL10                                                @D5A
PEND5    DS    CL1                                                 @D5A
         SPACE 1                                                   @D5A
         ORG   PHDGFLDS                                            @D5A
         SPACE 1                                                   @D5A
* Product section - line 6
         SPACE 1                                                   @L5A
PSTODAH  DS    CL17                Tod clock adjustment delta      @P7C
         DS    CL1                                                 @L5A
PSTODAD  DS    CL8                                                 @L5A
         DS    CL2                                                 @P7A
PSLSOH   DS    CL20                Leap Second offset              @P7A
         DS    CL1                                                 @P7A
PSLSOL   DS    CL8                                                 @P7A
         DS    CL1                                                 @P7A
PSLSOR   DS    CL8                                                 @P7A
         DS    CL2                                                 @P7A
PSLDTOH  DS    CL18                Local Date/Time offset          @P7A
         DS    CL1                                                 @P7A
PSLDTOL  DS    CL8                                                 @P7A
         DS    CL1                                                 @P7A
PSLDTOR  DS    CL8                                                 @P7A
         DS    CL1                                                 @P7C
PEND6    DS    CL1                                                 @D5C
         EJECT
         ORG   PRTAREA             LISTING LINES                   @P8A
         DS    CL10                                                @P8C
PLMARGIN EQU   *                   START OF FIELD LISTING AREA
PLTITLR  DS    CL19                DATA RECORD
         DS    CL103               FILLER                          @P8C
         SPACE  ,                                                  @P8A
         ORG   PLMARGIN
PLTITLD  DS    CL90                NEW IN CORE DICTIONARY
         DS    CL32                FILLER                          @P8C
         ORG   PLTITLD+30
         DS    CL5
PLDESCU  DS    CL13                UNINTERPRETED
         DS    CL31
PLDESCI  DS    CL11                INTERPRETED
         DS    CL22                                                @P8C
PLDESCR  DS    CL10                RECORD NUMBER                   @P8A
         SPACE  ,                                                  @P8A
         ORG   PLMARGIN
PLDICDET DS    CL8                 FIELD-QUALIFIER
         DS    CL1                 FILLER                          @PTA
PLDICOBJ DS    CL1                      -TYPE
PLDICNUM DS    CL3                      -ID
         DS    CL2                 FILLER
PLDICLEN DS    CL4                 SIZE
         DS    CL2                 FILLER
PLDICCON DS    CL7                 CONNECTOR
         DS    CL3                 FILLER
PLDICOFF DS    CL7                 OFFSET
         DS    CL3                 FILLER
PLDICTXT DS    CL8                 NICKNAME
         DS    CL73                FILLER                          @PTC
         SPACE 1
         ORG   PLMARGIN
PLFTITL  EQU   *                   START POSITION FOR FIELD TITLE
         DS    CL29
PLOFFSET DS    CL4                 OFFSET
         DS    CL2
PLWORDS  DS    CL36                HEX-WORDS
         DS    CL11
PLCHARS  DS    CL16                CHARACTERS
         DS    CL24                FILLER                          @P8A
         SPACE  ,                                                  @P8A
         ORG   PLMARGIN+35
PLUNPK21 DS    CL5                 TWO OVERLAPPING FIELDS FOR UNPK
         ORG   *-1                 PRINT OVER WASTE BYTE FROM UNPK
PLUNPK22 DS    CL13                PACKED FIELDS > 7 BYTES LONG
PLUNPK2L EQU   *-PLUNPK21-1        TRUE LENG OF OUTPUT FOR 2 UNPKS
         SPACE 1
         ORG   PLUNPK21
PLUNPK   DS    CL15                FIELD FOR UNPACK OF 1 - 7 BYTES
         ORG   *
PLUPLAST DS    C                   LAST NUMBER WITHIN OUTPUT FIELD
PLUPSPAR DS    C                   THE WASTED BYTE FROM HEX UNPK
         DS    CL4
PLMIDPT  EQU   *     (+66) POINT BETWEEN HEX OUTPUT AND FORMATED DATA
         DS    CL16                                                @D6C
PLCHRDAY DS    CL3                                                 @D6A
         DS    CL1                                                 @D6A
PLCHRTIM EQU   *                   START PT FOR TIMER DATA
         DS    CL15                                                @D6C
PLCLKCNT DS    CL10                CLOCK COUNT EDIT AREA
         SPACE 1
         ORG   PLMIDPT       RE-ALIGN WITH START OF INTERPR AREA
         DS    CL18
PLLENTXT DS    CL16                AREA FOR 1ST PART OF LONG FIELD
         DS    C
PLLENMSG DS    CL30                WARNING MSG FOR LONG CHAR FIELD
         SPACE 1
         ORG   PLMIDPT       RE-ALIGN WITH START OF INTERPR AREA
PLPAKOUT DS    CL32                PACKED OUTPUT EDIT AREA
         ORG   PLPAKOUT
         DS    CL7
PLBINOUT DS    CL25                BINARY OUTPUT EDIT AREA
PLBINFLG DS    CL8
         SPACE  ,                                                  @P8A
         DS    CL33                FILLER                          @P8A
         TITLE 'DFH$MOL4 - PRINT FINAL TOTALS'                     @P8A
***************************************************************@BA63143
*                                                              @BA63143
*              PRINT THE FINAL TOTALS REPORT                   @BA63143
*                                                              @BA63143
***************************************************************@BA63143
         SPACE ,                                               @BA63143
DFH$MOL4 CSECT  ,                                                  @P8A
DFH$MOL4 AMODE 31                                                  @Q1C
DFH$MOL4 RMODE ANY                                                 @Q1C
         ENTRY DFH$MOL4                                            @P8A
         SAVE  (14,12)             SAVE CALLER'S REGISTERS         @P8A
         CNOP  0,4                 ALIGN TO FULLWORD           @BA63143
         BRAS  R12,*+8             SKIP OVER AND ADDRESS ADCON @BA63143
         DC    A(MOL4_STATIC)      ADDRESS OF THE STATIC DATA  @BA63143
         L     R12,0(,R12)         LOAD ADDRESS OF THE STATIC  @BA63143
         USING MOL4_STATIC,R12     ADDRESSABILITY TO STATIC    @BA63143
         SPACE ,                                               @BA63143
         ST    R13,MOL4SAVE+4      SAVE BACKWARD POINTER           @P8A
         LA    R13,MOL4SAVE        MY SAVE AREA                    @P8A
         LR    R9,R1               LOAD PARAMETER AREA ADDRESS     @P8A
         USING ANLCB,R9            ADDRESSABILITY                  @P8A
         L     R8,PRINTR           GET DCB ADDRESS                 @P8A
         MVC   HDR2JDTE(8),HDRJDATE    SETUP HEADER DATE - YYYY/DDD    F
                                                                   @P8A
         MVC   HDR2DATE(10),HDRDATE    SETUP HEADER DATE - DD/MM/YYYY  F
                                                                   @P8A
         MVC   HDR2TIME(8),HDRTIME SETUP HEADER TIME               @P8C
         AP    PAGE,=P'1'          BUMP THE PAGE COUNT             @P8A
         ED    PG2COUNT,PAGE       EDIT THE PAGE COUNT             @P8A
         PUT   (R8),HEADER2        PRINT PAGE HEADINGS             @P8A
         MVC   FROMDATE,=X'402120202061202020' EDIT MASK           @P8A
         MVC   DATEWK,LOWDATE      COPY LOWEST DATE FIELD          @P8A
         AP    DATEWK,=PL4'1900000'    ADD IN CENTURY              @P8A
         ED    FROMDATE,DATEWK     EDIT IN DATE FIELD              @P8C
         ICM   R1,15,LOWTIME       GET TIME VALUE                  @P8C
         BAL   R14,TIMEPRNT        CONVERT TIME TO EBCDIC          @P8A
         MVC   FROMTIME,=X'4021207A20207A2020' EDIT MASK           @P8C
         ED    FROMTIME,DWD2+3     EDIT IN TIME FIELD              @P8A
         MVC   TODATE,=X'402120202061202020'   EDIT MASK           @P8C
         MVC   DATEWK,HIDATE       COPY HIGHEST DATE FIELD         @P8A
         AP    DATEWK,=PL4'1900000'    ADD IN CENTURY              @P8A
         ED    TODATE,DATEWK       EDIT IN DATE FIELD              @P8C
         ICM   R1,15,HITIME        GET TIME VALUE                  @P8A
         BAL   R14,TIMEPRNT        CONVERT TIME TO EBCDIC          @P8A
         MVC   TOTIME,=X'4021207A20207A2020' EDIT MASK             @P8A
         ED    TOTIME,DWD2+3       EDIT IN TIME FIELD              @P8A
         EJECT  ,                                                  @P8A
***********************************************************************
*        PRINT THE TOTALS REPORT LINES                                *
***********************************************************************
         SPACE  ,                                                  @P8A
         PUT   (R8),TOTLNE01       PRINT TOTAL LINE 1              @P8A
         PUT   (R8),DUMMY02                                        @P8A
         PUT   (R8),DUMMY01                                        @P8A
         SPACE  ,                                                  @P8A
         CVB   R15,SMFRECS         SMF RECORDS                     @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOTSMF,CNTR                                     @BA63143
         PUT   (R8),TOTLNE02       PRINT TOTAL LINE 2              @P8A
         SPACE  ,                                                  @P8A
         CVB   R15,SMF110S         SMF 110 RECORDS                 @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOT110R,CNTR                                        @P8A
         PUT   (R8),TOTLNE03       PRINT TOTAL LINE 3              @P8A
         SPACE  ,                                                  @P8A
         CVB   R15,SMF110MN        SMF 110 MONITORING RECORDS      @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOT110MN,CNTR                                       @P8A
         PUT   (R8),TOTLNE04       PRINT TOTAL LINE 4              @P8A
         SPACE  ,                                                  @P8A
         CVB   R15,SMFDRECS        SMF 110 DICTIONARY RECORDS      @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOTSMFD,CNTR                                        @P8A
         PUT   (R8),TOTLNE05       PRINT TOTAL LINE 5              @P8A
         SPACE  ,                                                  @P8A
         CVB   R15,SMFPRECS        SMF 110 PERFORMANCE RECORDS     @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOTSMFP,CNTR                                        @P8A
         PUT   (R8),TOTLNE06       PRINT TOTAL LINE 6              @P8A
         SPACE  ,                                                  @P8A
         CVB   R15,SMFERECS        SMF 110 EXCEPTION RECORDS       @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOTSMFE,CNTR                                        @P8A
         PUT   (R8),TOTLNE07       PRINT TOTAL LINE 7              @P8A
         SPACE  ,                                              @BA63143
         CVB   R15,SMFRRECS        SMF 110 RESOURCE RECORDS    @BA63143
         BAL   R14,CNTRPRNT                                    @BA63143
         MVC   TOTSMFR,CNTR                                    @BA63143
         PUT   (R8),TOTLNE17       PRINT TOTAL LINE 17         @BA63143
         SPACE ,                                                   @LMC
         CVB   R15,SMFIRECS        SMF 110 IDENTITY RECORDS        @LMA
         BAL   R14,CNTRPRNT                                        @LMA
         MVC   TOTSMFI,CNTR                                        @LMA
         PUT   (R8),TOTLNE20       PRINT TOTAL LINE 20             @LMA
         SPACE ,                                                   @LMA
         CVB   R15,SMF110NC        SMF 110 RECORDS NOT COMPRESSED  @D5A
         BAL   R14,CNTRPRNT                                        @D5A
         MVC   TOTSMFNC,CNTR                                       @D5A
         PUT   (R8),TOTLNE19       PRINT TOTAL LINE 19             @D5A
         SPACE  ,                                                  @P8A
         CVB   R15,SMF110OK        SMF 110 RECORDS SELECTED        @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOTSLCTD,CNTR                                       @P8A
         PUT   (R8),TOTLNE08       PRINT TOTAL LINE 8              @P8A
         SPACE ,                                                   @D5A
         CVB   R15,UT2RECS         SMF 110 RECORDS COPIED          @D5A
         BAL   R14,CNTRPRNT                                        @D5A
         MVC   TOTSMFC,CNTR                                        @D5A
         PUT   (R8),TOTLNE18       PRINT TOTAL LINE 18             @D5A
         SPACE  ,                                                  @P8A
         CVB   R15,DICSLCTD        DICTIONARY RECORDS SELECTED     @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOTDSLCT,CNTR                                       @P8A
         PUT   (R8),TOTLNE09       PRINT TOTAL LINE 9              @P8A
         SPACE  ,                                                  @P8A
         CVB   R15,PERRECS         PERFORMANCE RECORDS             @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOTPERR,CNTR                                        @P8A
         PUT   (R8),TOTLNE10       PRINT TOTAL LINE 10             @P8A
         SPACE  ,                                                  @P8A
         CVB   R15,PERSLCTD        PERFORMANCE RECORDS SELECTED    @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOTPSLCT,CNTR                                       @P8A
         PUT   (R8),TOTLNE11       PRINT TOTAL LINE 11             @P8A
         SPACE  ,                                                  @P8A
         CVB   R15,UT4RECS         UNLOADED RECORDS                @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOTUNLDR,CNTR                                       @P8A
         PUT   (R8),TOTLNE14       PRINT TOTAL LINE 14             @P8A
         SPACE  ,                                              @BA63143
         CVB   R15,RESRECS         RESOURCE RECORDS            @BA63143
         BAL   R14,CNTRPRNT                                    @BA63143
         MVC   TOTRESR,CNTR                                    @BA63143
         PUT   (R8),TOTLNE15       PRINT TOTAL LINE 15         @BA63143
         SPACE  ,                                                  @P8A
         CVB   R15,RESSLCTD        RESOURCE RECORDS SELECTED   @BA63143
         BAL   R14,CNTRPRNT                                    @BA63143
         MVC   TOTRSLCT,CNTR                                   @BA63143
         PUT   (R8),TOTLNE16       PRINT TOTAL LINE 16         @BA63143
         SPACE  ,                                              @BA63143
         CVB   R15,EXCRECS         EXCEPTION RECORDS               @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOTEXCR,CNTR                                        @P8A
         PUT   (R8),TOTLNE12       PRINT TOTAL LINE 12             @P8A
         SPACE  ,                                                  @P8A
         CVB   R15,EXCSLCTD        EXCEPTION RECORDS SELECTED      @P8A
         BAL   R14,CNTRPRNT                                        @P8A
         MVC   TOTESLCT,CNTR                                       @P8A
         PUT   (R8),TOTLNE13       PRINT TOTAL LINE 13             @LMC
         SPACE  ,                                                  @LMA
         CVB   R15,IDNRECS         IDENTITY RECORDS                @LMA
         BAL   R14,CNTRPRNT                                        @LMA
         MVC   TOTIDNR,CNTR                                        @LMA
         PUT   (R8),TOTLNE21       PRINT TOTAL LINE 21             @LMA
         SPACE  ,                                                  @LMA
         CVB   R15,IDNSLCTD        IDENTITY RECORDS SELECTED       @LMA
         BAL   R14,CNTRPRNT                                        @LMA
         MVC   TOTISLCT,CNTR                                       @LMA
         PUT   (R8),TOTLNE22       PRINT TOTAL LINE 22             @LMA
         SPACE  ,                                                  @P8A
MOL4EXIT DS    0H                                                  @P8A
         L     R13,MOL4SAVE+4      RESTORE CALLERS SAVEAREA ADDRESS    F
                                                                   @P8A
         LM    R14,R12,12(R13)     RESTORE CALLERS REGISTERS       @P8A
         SR    R15,R15             SET RC                          @P8A
         BR    R14                 RETURN TO CALLER                @Q1C
         SPACE  ,                                                  @P8A
         DROP  R9                                                  @P8A
         SPACE  ,                                                  @P8A
CNTRPRNT DS    0H                                                  @P8A
         LTR   R15,R15             IS IT A VERY BIG NUMBER?        @P8A
*        BM    BIGCOUNT            YES, FILL WITH 999999999
         C     R15,=F'99999999'    IS IT WITHIN RANGE?             @P8A
         BL    CNVRTCTR            YES, ITS VALID                  @P8A
BIGCOUNT DS    0H                                                  @P8A
         MVC   CNTR,=C'99999999'   SETUP HIGH VALUE                @P8A
         BR    R14                 RETURN TO CALLER                @P8A
         SPACE  ,                                                  @P8A
CNVRTCTR DS    0H                                                  @P8A
         CVD   R15,DWD2            CONVERT TO DECIMAL              @P8A
         MVC   CNTRWORK,=X'40202020202020202120'                   @P8A
         ED    CNTRWORK,DWD2+3     EDIT TOTAL COUNT                @P8A
         MVC   CNTR,CNTRWORK+2                                     @P8A
         BR    R14                 RETURN TO CALLER                @P8A
         SPACE  ,                                                  @P8A
TIMEPRNT DS    0H                  TIME TO BE CONVERTED PASSED IN R1   F
                                                                   @P8A
         SR    R0,R0               CLEAR WORK REGISTER             @P8A
         D     R0,=F'6000'         DIVIDE BY 60 THOUSAND           @P8A
         LR    R3,R0               STORE REMAINDER                 @P8A
         SR    R0,R0               CLEAR WORK REGISTER             @P8A
         D     R0,=F'60'           DIVIDE BY 60 MINS->HRS          @P8A
         LR    R2,R1               STORE HOURS                     @P8A
         LR    R1,R0                                               @P8A
         M     R0,=F'10000'        SHIFT MINS 4 PLACES LEFT        @P8A
         ALR   R3,R1               SET MINS TO LEFT OF SECS        @P8A
         LR    R1,R2                                               @P8A
         M     R0,=F'1000000'      MOVE HRS 6 PLACES LEFT          @P8A
         ALR   R3,R1               SET HOURS TO LEFT OF MINS       @P8A
         CVD   R3,DWD2             CONVERT TO DECIMAL              @P8A
         LM    R0,R1,DWD2                                          @P8A
         IC    R2,DWD2+7                                           @P8A
         SLDL  R0,4                                                @P8A
         STM   R0,R1,DWD2                                          @P8A
         STC   R2,DWD2+7                                           @P8A
         BR    R14                 RETURN TO CALLER                @P8A
         SPACE  ,                                                  @P8A
         TITLE 'DFH$MOL4 - DATA AREAS'                             @P8A
***********************************************************************
*              STORAGE AREAS FOR PROGRAM                              *
***********************************************************************
         SPACE 1                                                   @P8A
MOL4_STATIC DS 0F                  DFH$MOL4 STATIC DATA        @BA63143
         SPACE ,                                               @BA63143
MOL4SAVE DC    18F'0'              SAVE AREA                       @P8A
DWD2     DC    D'0'                                                @P8A
CNTR     DC    D'0'                                                @P8A
CNTRWORK DC    CL10' '                                             @P8A
DATEWK   DC    PL4'0'              PACKED DATE WORK                @P8A
         SPACE ,                                                   @P8A
***********************************************************************
* A macro is used here to allow the version number to be moved into   *
* the heading from the GBLC &VER. This is needed because the CICS     *
* assembly process inserts a COPY DFHGDEFS at the start of the module,*
* which is not present if the module is assembled separately from     *
* CICS. The macro allows both methods of assembly.                    *
***********************************************************************
HEADER2  DC    CL133' '            PAGE HEADINGS                   @P8A
         ORG   HEADER2                                             @P8A
         DC    C'1'                ASA EJECT CONTROL               @P8A
         DC    C'***  DFH$MOLS - '                                 @L9C
         DC    C'CICS '                                            @04C
*************************                                          @04A
         MACRO                                                     @04A
&LABEL   LVER ,                                                    @04A
         GBLC  &VER                                                @04A
&LABEL   DC    CL5'&VER'                                           @04A
         MEND  ,                                                   @04A
HDR2VER  LVER                                                      @04A
*************************                                          @04A
         DC    C' -'                                               @04A
         DC    C' MONITORING DATA LISTING PROGRAM '                @PDA
         DC    C'***      DATE '                                   @L9C
HDR2JDTE DC    C'YYYY/DDD'                                         @P8A
         DC    C'  '                                               @P8A
HDR2DATE DC    C'DD/MM/YYYY'                                       @P8A
         DC    C'   TIME '                                         @L9C
HDR2TIME DC    C'HH:MM:SS'                                         @P8A
         DC    C'        '                                         @L9C
         DC    CL5'PAGE '                                          @P8A
PG2COUNT DC    XL7'4020206B202120' PAGE COUNT                      @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
DUMMY01  DC    CL133' '                                            @P8A
         ORG   DUMMY01                                             @P8A
         DC    C'0'                ASA CONTROL                     @P8A
         DC    CL132' '                                            @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE01 DC    CL133' '            TOTAL LINE 01                   @P8A
         ORG   TOTLNE01                                            @P8A
         DC    C'-'                ASA CONTROL                     @P8A
         DC    CL19' '                                             @P8A
         DC    CL37'TOTALS REPORT - INPUT DATA FROM  DATE'         @P8A
FROMDATE DC    CL9' '                                              @P8A
         DC    CL6'  TIME'                                         @P8A
FROMTIME DC    CL9' '                                              @P8A
         DC    CL10'  TO  DATE'                                    @P8A
TODATE   DC    CL9' '                                              @P8A
         DC    CL6'  TIME'                                         @P8A
TOTIME   DC    CL9' '                                              @P8A
         DC    CL18' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
DUMMY02  DC    CL133' '                                            @P8A
         ORG   DUMMY02                                             @P8A
         DC    C'+'                ASA CONTROL                     @P8A
         DC    CL19' '                                             @P8A
         DC    31C'_'                                              @P8A
         DC    CL32' '                                             @P8A
         DC    CL2'__'                                             @P8A
         DC    CL48' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE02 DC    CL133' '            TOTAL LINE 02                   @P8A
         ORG   TOTLNE02                                            @P8A
         DC    C'-'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'NUMBER OF SMF RECORDS READ . . . . . . . . . .'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOTSMF   DC    CL8' '                                          @BA63143
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE03 DC    CL133' '            TOTAL LINE 03                   @P8A
         ORG   TOTLNE03                                            @P8A
         DC    C'-'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'NUMBER OF SMF 110 RECORDS READ . . . . . . . .'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOT110R  DC    CL8' '                                              @P8A
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE04 DC    CL133' '            TOTAL LINE 04                   @P8A
         ORG   TOTLNE04                                            @P8A
         DC    C'0'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'NUMBER OF SMF 110 MONITORING RECORDS READ. . .'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOT110MN DC    CL8' '                                              @P8A
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE05 DC    CL133' '            TOTAL LINE 05                   @P8A
         ORG   TOTLNE05                                            @P8A
         DC    C'0'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'   NUMBER OF SMF 110 DICTIONARY RECORDS. . . .'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOTSMFD  DC    CL8' '                                              @P8A
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE06 DC    CL133' '            TOTAL LINE 06                   @P8A
         ORG   TOTLNE06                                            @P8A
         DC    C'0'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'   NUMBER OF SMF 110 PERFORMANCE RECORDS . . .'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOTSMFP  DC    CL8' '                                              @P8A
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE07 DC    CL133' '            TOTAL LINE 07                   @P8A
         ORG   TOTLNE07                                            @P8A
         DC    C'0'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'   NUMBER OF SMF 110 EXCEPTION RECORDS . . . .'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOTSMFE  DC    CL8' '                                              @P8A
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE08 DC    CL133' '            TOTAL LINE 08                   @P8A
         ORG   TOTLNE08                                            @P8A
         DC    C'0'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'NUMBER OF SMF 110 MONITORING RECORDS SELECTED.'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOTSLCTD DC    CL8' '                                              @P8A
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE09 DC    CL133' '            TOTAL LINE 09                   @P8A
         ORG   TOTLNE09                                            @P8A
         DC    C'-'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'NUMBER OF DICTIONARY RECORDS SELECTED. . . . .'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOTDSLCT DC    CL8' '                                              @P8A
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE10 DC    CL133' '            TOTAL LINE 10                   @P8A
         ORG   TOTLNE10                                            @P8A
         DC    C'0'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'NUMBER OF PERFORMANCE RECORDS. . . . . . . . .'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOTPERR  DC    CL8' '                                              @P8A
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE11 DC    CL133' '            TOTAL LINE 11                   @P8A
         ORG   TOTLNE11                                            @P8A
         DC    C'0'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'NUMBER OF PERFORMANCE RECORDS SELECTED . . . .'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOTPSLCT DC    CL8' '                                              @P8A
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE12 DC    CL133' '            TOTAL LINE 12                   @P8A
         ORG   TOTLNE12                                            @P8A
         DC    C'0'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'NUMBER OF EXCEPTION RECORDS. . . . . . . . . .'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOTEXCR  DC    CL8' '                                              @P8A
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE13 DC    CL133' '            TOTAL LINE 13                   @P8A
         ORG   TOTLNE13                                            @P8A
         DC    C'0'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'NUMBER OF EXCEPTION RECORDS SELECTED . . . . .'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOTESLCT DC    CL8' '                                              @P8A
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                                   @P8A
TOTLNE14 DC    CL133' '            TOTAL LINE 14                   @P8A
         ORG   TOTLNE14                                            @P8A
         DC    C'0'                ASA CONTROL                     @P8A
         DC    CL5' '                                              @P8A
         DC    CL46'NUMBER OF PERFORMANCE RECORDS UNLOADED . . . .'    F
                                                                   @P8A
         DC    CL10' . . . . :'                                    @P8A
         DC    CL2' '                                              @P8A
TOTUNLDR DC    CL8' '                                              @P8A
         DC    CL61' '                                             @P8A
         ORG   ,                                                   @P8A
         SPACE ,                                               @BA63143
TOTLNE15 DC    CL133' '            TOTAL LINE 15               @BA63143
         ORG   TOTLNE15                                        @BA63143
         DC    C'0'                ASA CONTROL                 @BA63143
         DC    CL5' '                                          @BA63143
         DC    CL46'NUMBER OF RESOURCE RECORDS . . . . . . . . . .'    F
                                                               @BA63143
         DC    CL10' . . . . :'                                @BA63143
         DC    CL2' '                                          @BA63143
TOTRESR  DC    CL8' '                                          @BA63143
         DC    CL61' '                                         @BA63143
         ORG   ,                                               @BA63143
         SPACE ,                                               @BA63143
TOTLNE16 DC    CL133' '            TOTAL LINE 16               @BA63143
         ORG   TOTLNE16                                        @BA63143
         DC    C'0'                ASA CONTROL                 @BA63143
         DC    CL5' '                                          @BA63143
         DC    CL46'NUMBER OF RESOURCE RECORDS SELECTED. . . . . .'    F
                                                               @BA63143
         DC    CL10' . . . . :'                                @BA63143
         DC    CL2' '                                          @BA63143
TOTRSLCT DC    CL8' '                                          @BA63143
         DC    CL61' '                                         @BA63143
         ORG   ,                                               @BA63143
         SPACE ,                                               @BA63143
TOTLNE17 DC    CL133' '            TOTAL LINE 17               @BA63143
         ORG   TOTLNE17                                        @BA63143
         DC    C'0'                ASA CONTROL                 @BA63143
         DC    CL5' '                                          @BA63143
         DC    CL46'   NUMBER OF SMF 110 RESOURCE RECORDS. . . . .'    F
                                                               @BA63143
         DC    CL10' . . . . :'                                @BA63143
         DC    CL2' '                                          @BA63143
TOTSMFR  DC    CL8' '                                          @BA63143
         DC    CL61' '                                         @BA63143
         ORG   ,                                               @BA63143
         SPACE ,                                               @BA63143
TOTLNE18 DC    CL133' '            TOTAL LINE 18                   @D5A
         ORG   TOTLNE18                                            @D5A
         DC    C'0'                ASA CONTROL                     @D5A
         DC    CL5' '                                              @D5A
         DC    CL46'NUMBER OF SMF 110 MONITORING RECORDS COPIED. .'    F
                                                                   @D5A
         DC    CL10' . . . . :'                                    @D5A
         DC    CL2' '                                              @D5A
TOTSMFC  DC    CL8' '                                              @D5A
         DC    CL61' '                                             @D5A
         ORG   ,                                                   @D5A
         SPACE ,                                                   @D5A
TOTLNE19 DC    CL133' '            TOTAL LINE 19                   @D5A
         ORG   TOTLNE19                                            @D5A
         DC    C'0'                ASA CONTROL                     @D5A
         DC    CL5' '                                              @D5A
         DC    CL46'NUMBER OF SMF 110 MONITORING RECORDS NOT COMPR'    F
                                                                   @D5A
         DC    CL10'ESSED. . :'                                    @D5A
         DC    CL2' '                                              @D5A
TOTSMFNC DC    CL8' '                                              @D5A
         DC    CL61' '                                             @D5A
         ORG   ,                                                   @D5A
         SPACE ,                                                   @LMA
TOTLNE20 DC    CL133' '            TOTAL LINE 20                   @LMA
         ORG   TOTLNE20                                            @LMA
         DC    C'0'                ASA CONTROL                     @LMA
         DC    CL5' '                                              @LMA
         DC    CL46'   NUMBER OF SMF 110 IDENTITY RECORDS. . . . .'    F
                                                                   @LMA
         DC    CL10' . . . . :'                                    @LMA
         DC    CL2' '                                              @LMA
TOTSMFI  DC    CL8' '                                              @LMA
         DC    CL61' '                                             @LMA
         ORG   ,                                                   @LMA
         SPACE ,                                                   @LMA
TOTLNE21 DC    CL133' '            TOTAL LINE 21                   @LMA
         ORG   TOTLNE21                                            @LMA
         DC    C'0'                ASA CONTROL                     @LMA
         DC    CL5' '                                              @LMA
         DC    CL46'NUMBER OF IDENTITY RECORDS . . . . . . . . . .'    F
                                                                   @LMA
         DC    CL10' . . . . :'                                    @LMA
         DC    CL2' '                                              @LMA
TOTIDNR  DC    CL8' '                                              @LMA
         DC    CL61' '                                             @LMA
         ORG   ,                                                   @LMA
         SPACE ,                                                   @LMA
TOTLNE22 DC    CL133' '            TOTAL LINE 22                   @LMA
         ORG   TOTLNE22                                            @LMA
         DC    C'0'                ASA CONTROL                     @LMA
         DC    CL5' '                                              @LMA
         DC    CL46'NUMBER OF IDENTITY RECORDS SELECTED. . . . . .'    F
                                                                   @LMA
         DC    CL10' . . . . :'                                    @LMA
         DC    CL2' '                                              @LMA
TOTISLCT DC    CL8' '                                              @LMA
         DC    CL61' '                                             @LMA
         ORG   ,                                                   @LMA
         SPACE ,                                                   @LMC
         LTORG ,                                               @BA63143
 TITLE 'DFH$MOLD - PERFORMANCE RECORD DICTIONARY FORMAT'       @BA63143
***********************************************************************
*                                                                     *
*               UNLOADED PERFORMANCE RECORD DICTIONARY FORMAT         *
*                                                                     *
***********************************************************************
         SPACE ,                                                   @PEA
DFH$MOLD CSECT  ,                                                  @PEA
DFH$MOLD AMODE 31                                                  @PEA
DFH$MOLD RMODE ANY                                                 @PEA
         SPACE ,                                                   @LLA
         DC    A(DC3BEGIN)             ADDRESS OF DICTIONARY       @LLA
DEF3DICL EQU   DC3END-DC3BEGIN         LENGTH OF DICTIONARY        @LLA
NUM3DES  EQU   (DC3END-DC3BEGIN)/(CMODNEXT-DICTNTRY)               @LLA
         SPACE ,                                                   @LLA
         ENTRY DC3BEGIN                                            @LEC
         SPACE ,                                                   @PEA
         DFHMCTDR DIR                  GENERATE RECORD DICTIONARY  @PEA
         TITLE 'DFH$MOL0 - READ CONTROL CARDS AND SETUP OPTIONS'   @PEA
***********************************************************************
*                                                                     *
*              CONTROL CARD SCAN AND DISPOSITION ROUTINES.            *
*                                                                     *
*   THIS ROUTINE FORMATS THE SELECTED OPTIONS IN THE ANALYSIS CONTROL *
* BLOCK FOR USE BY THE PROCESSING ROUTINES.                           *
*                                                                     *
***********************************************************************
         SPACE
DFH$MOL0 CSECT
DFH$MOL0 AMODE 24
DFH$MOL0 RMODE 24
         ENTRY DFH$MOL0
         SAVE  (14,12)             SAVE CALLERS REGISTERS
         CNOP  0,4                 ALIGN TO FULLWORD           @BA63143
         BRAS  R12,*+8             SKIP OVER AND ADDRESS ADCON @BA63143
         DC    A(MOL0_STATIC)      ADDRESS OF THE STATIC DATA  @BA63143
         L     R12,0(,R12)         LOAD ADDRESS OF THE STATIC  @BA63143
         USING MOL0_STATIC,R12     ADDRESSABILITY TO STATIC    @BA63143
         SPACE ,                                               @BA63143
         ST    R13,CTRLSAVE+4      SAVE BACKWARD POINTER
         LA    R13,CTRLSAVE        MY SAVE AREA
         LR    R9,R1               LOAD PARAMETER AREA ADDRESS
         USING ANLCB,R9            ADDRESSABILITY
*                                  SET PRINT DEFAULTS
         OI    PRTSEL,PRTEXC+PRTPER+PRTRES+PRTIDN+PRTDIC           @LMC
         OI    PRTSEL2,PRTRESW+PRTRESU+PRTRESD+PRTRESF+PRTREST         F
                                                              @R146209C
*        OPEN  (SYSIN,INPUT)       OPEN CONTROL CARD IN
         OPEN  (SYSIN,INPUT)       OPEN CONTROL CARD IN
         TM    SYSIN+48,X'10'      DID IT OPEN?
         BZ    NOSYSIN             NO, GO TO EOF                   @Q1C
         L     R3,PRINTR           GET DCB ADDRESS
         MVC   HDR1JDTE(8),HDRJDATE    SETUP HEADER DATE - YYYY/DDD    F
                                                                   @P8A
         MVC   HDR1DATE(10),HDRDATE    SETUP HEADER DATE - DD/MM/YYYY  F
                                                                   @P8C
         MVC   HDR1TIME(8),HDRTIME SETUP HEADER TIME               @P8C
         AP    PAGE,=P'1'          BUMP THE PAGE COUNT
         ED    PG1COUNT,PAGE       EDIT THE PAGE COUNT
*        PUT   (R3),HEADER1        PRINT PAGE HEADINGS
         PUT   (R3),HEADER1        PRINT PAGE HEADINGS
         EJECT
GETSYSIN DS    0H                  READ CARDS
*        GET   SYSIN,CARDA         READ A CARD
         GET   SYSIN,CARDA         READ A CARD
         L     R3,PRINTR           GET DCB ADDRESS
*        PUT   (R3),CARDLST        LIST THE CONTROL STATEMENT
         PUT   (R3),CARDLST        LIST THE CONTROL STATEMENT
         MVI   CARDLST,C' '        RESET ASA
         CLI   CARDA,C'*'          IS IT A COMMENTS CARD
         BE    GETSYSIN            YES, BYPASS ANALYSIS
         LA    R7,CARDA            CONTROL STATEMENT START
         LA    R6,CARDA+80         CONTROL STATEMENT END
         BAL   LINK,FNDNBLK        GET OPERATION POINTER
         BAL   LINK,GETOPND        GET CONTROL STATEMENT OPERATION
         LM    R6,R7,CTLPOINT      RESTORE SCAN POINTERS
         BAL   LINK,FNDNBLK        GET OPERAND POINTER
         CLC   PARMWORK,=CL8'BREAK'    IS IT A BREAK CONTROL CARD
         BE    BRKPRM              YES,
         CLC   PARMWORK,=CL8'CONTROL'  IS IT A CONTROL CONTROL CARD
         BE    CNTRLPRM            YES,
         CLC   PARMWORK,=CL8'DATE'     IS IT A DATE CONTROL CARD
         BE    DATEPRM             YES,
         CLC   PARMWORK,=CL8'IGNORE'   IS IT AN IGNORE CONTROL CARD
         BE    IGNPRM              YES,
         CLC   PARMWORK,=CL8'PRINT'    IS IT A PRINT CONTROL CARD
         BE    PRINTPRM            YES,
         CLC   PARMWORK,=CL8'RESOURCE' IS IT A RESOURCE CONTROL    @06A
         BE    RESPTPRM            YES,                            @06A
         CLC   PARMWORK,=CL8'SELECT'   IS IT A SELECT CONTROL CARD
         BE    SELCTPRM            YES,
         CLC   PARMWORK,=CL8'SORT'     IS IT A SORT CONTROL CARD
         BE    SORTPPRM            YES,
         CLC   PARMWORK,=CL8'TIME'     IS IT A TIME CONTROL CARD
         BE    TIMEPRM             YES,
         CLC   PARMWORK,=CL8'TIMEOFF'  IS IT A TIMEOFF CONTROL CARD
         BE    STIMESW             YES,
         CLC   PARMWORK,=CL8'OPTION'   IS IT A OPTION CONTROL CARD @LEA
         BE    OPTNPRM             YES,                            @LEA
         CLC   PARMWORK,=CL8'UNLOAD'   IS IT A UNLOAD CONTROL CARD @P8A
         BE    UNLDPRM             YES,                            @P8A
         CLC   PARMWORK,=CL8'EXPAND'   IS IT A EXPAND CONTROL CARD @D5A
         BE    XPNDPRM             YES,                            @D5A
         B     ERR101              ELSE, CONTROL STATEMENT ERROR   @P8A
         SPACE
ERR101   DS    0H                  CONTROL STATEMENT ERROR
         LA    R2,MSG101           ERROR IN CONTROL CARD
         STM   R0,R15,EREGSAVE     SAVE REGS AT TIME OF ERROR
         L     R3,PRINTR           GET PRINTER DCB ADDRESS
         PUT   (R3),(R2)           WRITE ERROR MESSAGE
         ABEND 101
         SPACE ,                                                   @Q1C
EODAD    DS    0H                  END OF INPUT CONTROL CARDS
         CLOSE (SYSIN)             CLOSE SYSIN FILE                @Q1A
NOSYSIN  DS    0H                                                  @Q1A
         TM    SORTSW,UNLOAD       UNLOAD OPTION REQUESTED?        @P8A
         BZ    EODAD1              NO, WHAT ABOUT EXPAND THEN?     @D5C
         TM    PROCESSW,PRINTOPT   PRINT OPTION ALSO REQUESTED?    @P8A
         BNZ   BYPPRINT            YES, SKIP PRINT OPTION RESET    @P8A
*                                  NO, RESET PRINT OPTION DEFAULTS
         NI    PRTSEL,255-PRTEXC-PRTPER-PRTRES-PRTDIC          @BA63143
         B     BYPPRINT            AND CONTINUE                    @D5A
         SPACE ,                                                   @D5A
EODAD1   DS    0H                                                  @D5A
         TM    SORTSW,EXPAND       EXPAND OPTION REQUESTED?        @D5A
         BZ    BYPPRINT            NO, PRINT OPTIONS SET           @D5A
         TM    PROCESSW,PRINTOPT   PRINT OPTION ALSO REQUESTED?    @D5A
         BNZ   BYPPRINT            YES, SKIP PRINT OPTION RESET    @D5A
*                                  NO, RESET PRINT OPTION DEFAULTS
         NI    PRTSEL,255-PRTEXC-PRTPER-PRTRES-PRTDIC              @D5A
         B     BYPPRINT            AND CONTINUE                    @D5A
         SPACE ,                                                   @D5A
BYPPRINT DS    0H                  PRINT OPTIONS SET/RESET         @D5C
         L     R13,CTRLSAVE+4      GET BACKWARD POINTER
         LM    R14,R12,12(R13)     RESTORE REGS
         SR    R15,R15             SET RC
         BSM   0,R14               RETURN IN CALLER'S MODE         @Q1C
         TITLE 'DFH$MOL0   PROCESS TIME CONTROL CARDS'
***********************************************************************
*                       PROCESS 'TIME' CONTROL CARDS                  *
***********************************************************************
         SPACE
TIMEPRM  DS    0H                  TIME CONTROL CARD PROCESSING
         BAL   LINK,GETOPND        GET KEYWORD OPERAND
         CLI   SCANSTOP,C'='       IS IT CORRECT SYNTAX
         BE    EQTIME              YES, CARRY ON
         BAL   R14,ERR101          NO, SIGNAL ERROR
         SPACE
EQTIME   DS    0H
         OI    SELSWTCH+1,SELTIME  INDICATE TIME SELECTION ACTIVE
         CLC   PARMWORK,=CL8'START'    IS IT START TIME
         BE    TIMESTAR            YES,
         CLC   PARMWORK,=CL8'STOP'     IS IT STOP TIME
         BE    TIMESTOP            YES,
         BAL   R14,ERR101          INVALID KEYWORD
         SPACE
TIMESTAR DS    0H                  SETUP START TIME
         BAL   LINK,EDIT           VERIFY NUMERIC
         STCM  TIMEREG,B'1111',JSTART  SAVE START EDIT TIME
         B     TIMEPRM             GET NEXT OPERAND
         SPACE
TIMESTOP DS    0H                  SETUP STOP TIME
         BAL   LINK,EDIT           VERIFY NUMERIC
         STCM  TIMEREG,B'1111',JEND    SAVE STOP EDIT TIME
         B     TIMEPRM             GET NEXT OPERAND
         EJECT
***********************************************************************
*                 CONVERT START AND STOP TIME TO BINARY               *
***********************************************************************
         SPACE
EDIT     DS    0H                  LOCATE AND VERIFY TIME
         ST    LINK,EDITSAVE       SAVE RETURN REG
         MVC   OPNDLEN,=F'9'       MAXIMUM FIELD LENGTH
         BAL   LINK,FINDOPND       GET OPERANDS
         CLI   PARMWORK+2,C'.'     DELIM HH.MM
         BNE   *+10                NO
         MVC   PARMWORK+2(5),PARMWORK+3    SHIFT IT OUT
         CLI   PARMWORK+4,C'.'     DELIM MM.SS
         BNE   *+10                NO
         MVC   PARMWORK+4(2),PARMWORK+5    SHIFT IT OUT
         PACK  DWDPRM,PARMWORK(6)  PACK HH.MM.SS
         UNPK  DWDPRM+8(6),DWDPRM  UNPACK IT
         CLC   DWDPRM+8(6),PARMWORK    COMPARE TO ORIGINAL
         BE    EXTRACT             NUMERIC IS GREAT
         BAL   R14,ERR101          NOT NUMERIC - ERROR
EXTRACT  DS    0H                  CONVERT PARM TO BINARY TIME
         PACK  DWDPRM,PARMWORK(2)  PACK HOURS
         CVB   TIMEREG,DWDPRM
         MH    TIMEREG,=H'3600'    CONVERT TO SECONDS
         PACK  DWDPRM,PARMWORK+2(2)    PACK MINUTES
         CVB   R6,DWDPRM
         MH    R6,=H'60'           CONVERT TO SECONDS
         AR    TIMEREG,R6          ADD HOURS TO MINUTES
         PACK  DWDPRM,PARMWORK+4(2)    PACK SECONDS
         CVB   R6,DWDPRM
         AR    TIMEREG,R6          ADD HOURS + MINUTES TO SECONDS
         LR    R5,TIMEREG          FOR CALCULATION
         M     R4,=F'100'          EXPRESS AS HUNDREDTHS OF A SECOND
         LR    TIMEREG,R5          SAVE TIME RESULT
         L     LINK,EDITSAVE       RESTORE RETURN REG
         BR    LINK                RETURN
         SPACE
         TITLE 'DFH$MOL0   PROCESS DATE CONTROL CARDS'
***********************************************************************
*                       PROCESS 'DATE' CONTROL CARDS                  *
***********************************************************************
         SPACE
DATEPRM  DS    0H                  DATE CONTROL CARD PROCESSING
         BAL   LINK,GETOPND        GET KEYWORD OPERAND
         CLI   SCANSTOP,C'='       IS IT CORRECT SYNTAX
         BE    EQDATE              YES, CARRY ON
         BAL   R14,ERR101          NO, SIGNAL ERROR
         SPACE
EQDATE   DS    0H
         OI    SELSWTCH+1,SELTIME  INDICATE TIME SELECTION ACTIVE
         CLC   PARMWORK,=CL8'START'    IS IT START DATE
         BE    DATESTAR            YES, HANDLE START DATE
         CLC   PARMWORK,=CL8'STOP'     IS IT STOP DATE
         BE    DATESTOP            YES, HANDLE STOP DATE
         BAL   R14,ERR101          NO, INVALID KEYWORD
         SPACE
DATESTAR DS    0H                  PROCESS SELECT START DATE
         BAL   LINK,INDATE         GET INPUT DATE
         STCM  TIMEREG,B'1111',JDATEL  STORE THE LOW DATE          @P8C
         B     DATECONS            DO CONSISTENCY CHECK
         SPACE
DATESTOP DS    0H                  PROCESS SELECT STOP DATE
         BAL   LINK,INDATE         GET INPUT DATE
         STCM  TIMEREG,B'1111',JDATEH  STORE THE HIGH DATE         @P8C
DATECONS DS    0H                  CONSISTENCY CHECK
         CP    JDATEL,JDATEH       IS LOW DATE GT HIGH DATE?
         BNH   DATEPRM             NO, GET NEXT OPERAND
         LA    R2,MSG102           SIGNAL ERROR
         STM   R0,R15,EREGSAVE     SAVE REGS AT TIME OF ERROR
         L     R3,PRINTR           GET PRINTER DCB ADDRESS
         PUT   (R3),(R2)           WRITE ERROR MESSAGE
         ABEND 102                 AND ABEND
         EJECT
***********************************************************************
*     CONVERT INPUT DATE (GREGORIAN MM/DD/YYYY (YYYY IS OPTIONAL))    *
*     TO A JULIAN DATE. RETURN THE JULIAN DATE IN TIMEREG.            *
***********************************************************************
         SPACE
INDATE   DS    0H                  DATE CONVERSION SUBROUTINE
         ST    LINK,EDITSAVE       STORE RETURN REG
         MVC   OPNDLEN,=F'11'      MAXIMUM FIELD LENGTH            @P8C
         BAL   LINK,FINDDATE       GET THE DATE INTO PARMWRK1      @P8C
*  DECODE THE DATE PARAMETER
         LA    R2,PARMWRK1         POINT AT PARAMETER              @P8C
         BAL   LINK,CONVRT         GET THE MONTH
         CH    R4,=H'13'           GREATER THAN 12 MONTHS ?
         BNL   ERR101              ..Yes, month error         @D151392C
         CHI   R4,1                Less than 1 month          @D151392A
         BL    ERR101              .. Yes, month error        @D151392A
         LR    R6,R4               HOLD BINARY MONTH
         LA    R2,2(R1,R2)         POINT BEYOND SLASH
         BAL   LINK,CONVRT         GET THE DAY
         LR    R5,R4               HOLD BINARY DAY
         CHI   R5,1                Less than 1 day?           @D151392A
         BL    ERR101              .. Yes, day error          @D151392A
         LA    R2,1(R1,R2)         POINT BEYOND DAY
         CLI   0(R2),C' '          WAS YEAR OMITTED ?
         BNE   INDATEYE            ..NO, YEAR WAS ENTERED
         PACK  DWDPRM,HDRJDATE(4)  PACK THIS YEAR                  @P8C
         CVB   R4,DWDPRM           GET BINARY YEAR
         B     INDATEDC            DATE IS DECODED
         SPACE ,                                                   @P8A
INDATEYE DS    0H                  SELECTION YEAR WAS ENTERED
         LA    R2,1(,R2)           POINT PAST DELIMITER
         BAL   LINK,CONVRT         GET THE YEAR
         CHI   R1,3                Is year length 4?          @D151392A
         BE    INDATEY2            ..Yes, check year values   @D151392A
         CHI   R1,1                Is year length 2?          @D151392A
         BNE   ERR101              .. No, error               @D151392A
         AH    R4,=H'2000'         .. Yes, Add default century@D151392C
         B     INDATEDC                    and branch         @D151392A
INDATEY2 DS    0H                                             @D151392A
         CHI   R4,1901             Is year less than 1901?    @D151392A
         BL    ERR101              ..Yes, error               @D151392A
         CHI   R4,2099             Is year greater than 2099? @D151392A
         BH    ERR101              ..Yes, error               @D151392A
***************************************************************    @01A
*     THE FOLLOWING CODE SETS THE NUMBER OF DAYS FOR FEBRUARY      @01A
*     BY CHECKING TO SEE IF THIS IS A LEAP YEAR OR NOT.            @01A
*     THE YEAR 2000 IS A LEAP YEAR SO THIS CHECK WILL BE           @01A
*     VALID UNTIL THE YEAR 2100.                                   @01A
***************************************************************    @01A
INDATEDC DS    0H                  DATE IS DECODED
         ZAP   MO2,=P'28'          INIT FEBRUARY DAYS              @01A
         LR    R0,R4               PLACE BINARY YEAR IN R0         @01A
         SRDA  R0,32               SET UP R0/R1 WITH YEAR          @01A
         D     R0,=F'4'            DIVIDE YEAR BY 4                @01A
         LTR   R0,R0               REMAINDER ZERO ?                @01A
         BNZ   INDATENL            .NO, BYPASS LEAP YEAR ADJUST    @01A
         AP    MO2,=P'1'           .YES, FEBRUARY HAS 29 DAYS      @01A
INDATENL DS    0H                                                  @01A
         SH    R4,=H'1900'         CONVERT YYYYDDD TO 0CYYDDD
         CVD   R4,DWDPRM           PACK THE YEAR
         L     R4,DWDPRM+4         GET PACKED INTO REGISTER        @P8C
         SRL   R4,4                PREP FOR FOLLOWING CODE
         SPACE 1
*  NOW CREATE A JULIAN DATE
         CVD   R5,DWDPRM           INIT ACCUMULATOR W/ ODD DAYS
         LR    R5,R6               MONTH INTO WORK REG
         BCTR  R5,0                CONVERT TO AN INDEX
         MH    R5,=Y(INDATEML)     GET OFFSET TO TABLE ENTRY
         LA    R5,INDATEMO(R5)     GET ADDRESS OF TABLE ENTRY
         CP    0(2,R5),DWDPRM      TOO MANY DAYS/MONTH ?
         BNL   INDATEDP            ..NO, DAYS PASSED EDIT
         BAL   R14,ERR101          ..YES, SIGNAL ERROR
INDATEDP DS    0H                  DAYS PER MONTH PASSED EDIT
         STCM  R4,B'0011',DWDPRM+4 STORE 0CYY INTO ACCUMULATOR     @P8C
         LA    R4,INDATEMO         POINT TO MONTH/DAY TABLE
         B     INDATETE            TEST FOR END OF TABLE SCAN
         SPACE 1
INDATEAD DS    0H                  ACCUMULATE DAYS
         AP    DWDPRM,0(2,R4)      ADD MONTHS WORTH OF DAYS
         LA    R4,INDATEML(,R4)    POINT TO NEXT ENTRY
INDATETE DS    0H                  TEST END OF MONTHS
         BCT   R6,INDATEAD         ADD MORE DAYS
         L     TIMEREG,DWDPRM+4    RETURN THE DATE IN TIMEREG
         L     LINK,EDITSAVE       RECOVER LINKAGE
         BR    LINK                RETURN TO CALLER
         SPACE 3
         TITLE 'DFH$MOL0   PROCESS PRINT CONTROL CARDS'
***********************************************************************
*                       PROCESS 'PRINT' CONTROL CARDS                 *
***********************************************************************
         SPACE
PRINTPRM DS    0H                  PRINT CONTROL CARD PROCESSING
         OI    PROCESSW,PRINTOPT   SET PRINT OPTION REQUESTED      @P8A
         NI    PRTSEL,255-PRTEXC-PRTPER-PRTRES-PRTIDN-PRTDIC       @LMC
*                                  RESET PRINT OPTION DEFAULTS
PRTPRML  DS    0H                  PRINT PARM PROCESS LOOP
         BAL   LINK,GETOPND        GET FIRST OPERAND
PRTPRM1  DS    0H
         CLC   PARMWORK,=CL8'LINECT'   IS IT LINE COUNT?
         BNE   LINECTBP            NO, BYPASS
         CLI   SCANSTOP,C'='       WAS IT A KEYWORD?
         BE    EQ2                 YES, PROCEED
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT
EQ2      DS    0H
         BAL   LINK,GETOPND        GET FIRST OPERAND
         LA    R2,PARMWORK         POINT TO NUMERIC FIELD
         BAL   LINK,CONVRT         CONVERT IT TO BINARY
         STH   R4,HDRLINES         SAVE IT
         B     PRTPRML             CONTINUE STATEMENT SCAN
         SPACE
LINECTBP DS    0H                  BYPASS LINE COUNT PROC
         CLI   SCANSTOP,C' '       SCAN ENDED BY BLANK
         BE    COMMA99             ..YES, OK
         CLI   SCANSTOP,C','       SCAN ENDED BY A COMMA
         BE    COMMA99             ..YES, OK
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT
COMMA99  DS    0H
         CLC   PARMWORK,=CL8'EXC'  PRINT MN EXCEPTION SMF RECORDS
         BE    PCTLEXC             YES,
         CLC   PARMWORK,=CL8'PER'  PRINT MN PERFORMANCE SMF RECORDS
         BE    PCTLPER             YES,
         CLC   PARMWORK,=CL8'RES'  PRINT MN RESOURCE SMF RECORDS   @LMC
         BE    PCTLRES             YES,                            @LMC
         CLC   PARMWORK,=CL8'IDN'  PRINT MN IDENTITY SMF RECORDS   @LMA
         BE    PCTLIDN             YES,                            @LMA
         CLC   PARMWORK,=CL8'DIC'  PRINT MN DICTIONARY SMF RECORDS @P8A
         BE    PCTLDIC             YES,                            @P8A
         CLC   PARMWORK,=CL8'ALL'  PRINT ALL CICS SMF 110 RECORDS
         BE    OKALL               ..YES, OK
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT
         SPACE
OKALL    DS    0H                  PRINT ALL TYPES OF MONITORING RECORD
         OI    PRTSEL,PRTEXC+PRTPER+PRTRES+PRTIDN+PRTDIC           @LMC
         B     PRTPRML             CONTINUE STATEMENT SCAN
PCTLEXC  OI    PRTSEL,PRTEXC       PRINT MONITORING EXCEPTION RECORDS
         B     PRTPRML             CONTINUE STATEMENT SCAN
PCTLPER  OI    PRTSEL,PRTPER       PRINT MONITORING PERFORMANCE RECORDSF
                                                                   @P8C
         B     PRTPRML             CONTINUE STATEMENT SCAN
PCTLRES  OI    PRTSEL,PRTRES       PRINT MONITORING RESOURCE RECORDS   F
                                                               @BA63143
         B     PRTPRML             CONTINUE STATEMENT SCAN     @BA63143
PCTLIDN  OI    PRTSEL,PRTIDN       PRINT MONITORING IDENTITY RECORDS   F
                                                                   @LMA
         B     PRTPRML             CONTINUE STATEMENT SCAN         @LMA
PCTLDIC  OI    PRTSEL,PRTDIC       PRINT MONITORING DICTIONARY RECORDS F
                                                                   @P8A
         B     PRTPRML             CONTINUE STATEMENT SCAN         @P8A
         TITLE 'DFH$MOL0   PROCESS RESOURCE CONTROL CARDS'         @06A
***************************************************************    @06A
*                   PROCESS 'RESOURCE' CONTROL CARDS               @06A
***************************************************************    @06A
         SPACE ,                                                   @06A
RESPTPRM DS    0H                  RESOURCE CONTROL CARD PROCES    @06A
         NI    PRTSEL2,255-PRTRESD-PRTRESF-PRTREST-PRTRESU-PRTRESW     F
                                                              @R146209C
*                                  RESET RESOURCE OPTION DEFAULT   @06A
RESPRML  DS    0H                  RESOURCE PARM PROCESS LOOP      @06A
         BAL   LINK,GETOPND        GET FIRST OPERAND               @06A
RESPRM1  DS    0H                                                  @06A
         CLI   SCANSTOP,C' '       SCAN ENDED BY BLANK             @06A
         BE    COMMA100            ..YES, OK                       @06A
         CLI   SCANSTOP,C','       SCAN ENDED BY A COMMA           @06A
         BE    COMMA100            ..YES, OK                       @06A
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT           @06A
COMMA100 DS    0H                                                  @06A
         CLC   PARMWORK,=CL8'DPL'      PRINT RESOURCE DPL          @DAA
         BE    RCTLDPL             YES,                            @DAA
         CLC   PARMWORK,=CL8'FILE'     PRINT RESOURCE FILE         @06A
         BE    RCTLFLE             YES,                            @06A
         CLC   PARMWORK,=CL8'TSQUEUE'  PRINT RESOURCE TSQUEUE      @06A
         BE    RCTLTSQ             YES,                            @06A
         CLC   PARMWORK,=CL8'URIMAP'   PRINT RESOURCE URIMAP  @R146209A
         BE    RCTLURI             YES,                       @R146209A
         CLC   PARMWORK,=CL8'WEBSERVC' PRINT RESOURCE WEBSVC  @R146209A
         BE    RCTLWEB             YES,                       @R146209A
         CLC   PARMWORK,=CL8'ALL'  PRINT ALL RESOURCE RECORDS      @06A
         BE    OKRESALL            ..YES, OK                       @06A
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT           @06A
         SPACE ,                                                   @06A
OKRESALL DS    0H                  PRINT ALL TYPES OF RESOURCE     @06A
         OI    PRTSEL2,PRTRESD+PRTRESF+PRTREST+PRTRESU+PRTRESW         F
                                                              @R146209C
         B     RESPRML             CONTINUE STATEMENT SCAN         @06A
RCTLDPL  OI    PRTSEL2,PRTRESD     PRINT RESOURCE DPL ENTRIES      @DAA
         B     RESPRML             CONTINUE STATEMENT SCAN         @DAA
RCTLFLE  OI    PRTSEL2,PRTRESF     PRINT RESOURCE FILE ENTRIES     @06A
         B     RESPRML             CONTINUE STATEMENT SCAN         @06A
RCTLTSQ  OI    PRTSEL2,PRTREST     PRINT RESOURCE TSQUEUE ENTRIES  @DAC
         B     RESPRML             CONTINUE STATEMENT SCAN         @06A
RCTLURI  OI    PRTSEL2,PRTRESU     PRINT RESOURCE URIMAP ENTR @R146209A
         B     RESPRML             CONTINUE STATEMENT SCAN    @R146209A
RCTLWEB  OI    PRTSEL2,PRTRESW     PRINT RESOURCE WEBSVC ENTR @R146209A
         B     RESPRML             CONTINUE STATEMENT SCAN    @R146209A
         TITLE 'DFH$MOL0   PROCESS CONTROL CONTROL CARD'
***********************************************************************
*                   PROCESS 'CONTROL' CONTROL CARDS                   *
***********************************************************************
         SPACE ,                                                   @06A
CNTRLPRM DS    0H                  CONTROL CONTROL CARD PROCESSING
         BAL   LINK,GETOPND        GET FIRST OPERAND
         CLI   SCANSTOP,C'='       WAS IT A KEYWORD
         BE    EQ4                 ..YES, OK                       @P8C
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT
         SPACE ,                                                   @P8A
EQ4      DS    0H
         CLC   PARMWORK,=CL8'STOPAFT'  IS IT STOPAFT?
         BE    STOPAFT             YES, HANDLE STOPAFT LIMIT
         BAL   R14,ERR101          NO, INVALID KEYWORD
         SPACE ,                                                   @P8A
STOPAFT  DS    0H
         OI    PROCESSW,SELSTOP    INDICATE STOPAFT ACTIVE
         BAL   LINK,GETOPND        GET NUMERIC FIELD
         LA    R2,PARMWORK         POINT TO NUMERIC FIELD
         BAL   LINK,CONVRT         CONVERT IT TO BINARY
         ST    R4,STOPFLD          SAVE STOPAFT LIMIT
         B     GETSYSIN            GET NEXT CONTROL CARD
         TITLE 'DFH$MOL0   PROCESS OPTION CONTROL CARD'            @LEA
***********************************************************************
*                   PROCESS 'OPTION' CONTROL CARDS                    *
***********************************************************************
         SPACE  ,                                                  @LEA
OPTNPRM  DS    0H                  OPTION CONTROL CARD PROCESSING  @LEA
         NI    PROCESSW,255-LOCALT RESET TO DEFAULT (GMT)          @LEA
OPTNPRML DS    0H                                                  @LEA
         BAL   LINK,GETOPND        GET FIRST OPERAND               @LEA
         CLI   SCANSTOP,C' '       SCAN ENDED BY BLANK             @LEA
         BE    COMMA98             ..YES, OK                       @LEA
         CLI   SCANSTOP,C','       SCAN ENDED BY A COMMA           @LEA
         BE    COMMA98             ..YES, OK                       @LEA
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT           @LEA
COMMA98  DS    0H                                                  @LEA
         CLC   PARMWORK,=CL8'GMT'  PRINT TIMESTAMPS IN GMT?        @LEA
         BE    OKGMT               ..YES, OK                       @LEA
         CLC   PARMWORK,=CL8'LOCAL'    PRINT IN LOCAL TIME?        @LEA
         BE    OKLOCAL             ..YES, OK                       @LEA
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT           @LEA
         SPACE  ,                                                  @LEA
OKGMT    DS    0H                                                  @LEA
         NI    PROCESSW,255-LOCALT PRINT TIMESTAMPS IN GMT         @LEA
         B     OPTNPRML            CONTINUE STATEMENT SCAN         @LEA
OKLOCAL  DS    0H                                                  @LEA
         OI    PROCESSW,LOCALT     PRINT TIMESTAMPS IN LOCAL TIME  @LEA
         B     OPTNPRML            CONTINUE STATEMENT SCAN         @LEA
         TITLE 'DFH$MOL0   PROCESS TIMEOFF CONTROL CARD'
***********************************************************************
*                   PROCESS 'TIMEOFF' CONTROL CARD                    *
***********************************************************************
         SPACE
STIMESW  DS    0H                  TIMEOFF CONTROL CARD PROCESSING
         B     GETSYSIN            GET NEXT CONTROL CARD
         TITLE 'DFH$MOL0   PROCESS UNLOAD CONTROL CARD'            @P8A
***********************************************************************
*                   PROCESS 'UNLOAD' CONTROL CARD                     *
***********************************************************************
         SPACE  ,                                                  @P8A
UNLDPRM  DS    0H                  UNLOAD CONTROL CARD PROCESSING  @P8A
         OI    SORTSW,UNLOAD       SET UNLOAD REQUESTED            @P8A
UNLDPRML DS    0H                                                  @P8A
         BAL   LINK,GETOPND        GET FIRST OPERAND               @P8A
         CLC   PARMWORK,=CL8'DDNAME'   IS IT DDNAME?               @P8A
         BNE   DDNAMEBP            NO, BYPASS                      @P8A
         CLI   SCANSTOP,C'='       WAS IT A KEYWORD                @P8A
         BE    UNLDPRM1            ..YES, OK PROCEED               @P8A
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT           @P8A
UNLDPRM1 DS    0H                                                  @P8A
         BAL   LINK,GETOPND        GET DDNAME FIELD                @P8A
         LA    R2,PARMWORK         POINT TO DDNAME FIELD           @P8A
         L     R4,SYSUT4R          GET DCB FOR SYSUT4              @P8A
         MVC   DCBDDNAM-IHADCB(8,R4),0(R2) MOVE DDNAME TO DCB      @P8A
         B     UNLDPRML            GET NEXT KEYWORD                @P8A
         SPACE ,                                                   @P8A
DDNAMEBP DS    0H                                                  @P8A
         CLI   SCANSTOP,C' '       SCAN ENDED BY BLANK             @P8A
         BE    UNLDPRM2            ..YES, OK                       @P8A
         CLI   SCANSTOP,C','       SCAN ENDED BY A COMMA           @P8A
         BE    UNLDPRM2            ..YES, OK                       @P8A
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT           @P8A
         SPACE ,                                                   @P8A
UNLDPRM2 DS    0H                                                  @P8A
         CLC   PARMWORK,=CL8'LOCAL'    UNLOAD IN LOCAL TIME?       @P8A
         BE    UNLDTIME            YES, OK                         @P8A
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT           @P8A
         SPACE ,                                                   @P8A
UNLDTIME DS    0H                                                  @P8A
         OI    SORTSW,UNLOADLT     SET UNLOAD IN LOCAL TIME REQUESTED  F
                                                                   @P8A
         B     UNLDPRML            GET NEXT KEYWORD                @P8A
         TITLE 'DFH$MOL0   PROCESS EXPAND CONTROL CARD'            @D5A
***********************************************************************
*                   PROCESS 'EXPAND' CONTROL CARD                     *
***********************************************************************
         SPACE  ,                                                  @D5A
XPNDPRM  DS    0H                  EXPAND CONTROL CARD PROCESSING  @D5A
         OI    SORTSW,EXPAND       SET EXPAND REQUESTED            @D5A
XPNDPRML DS    0H                                                  @D5A
         BAL   LINK,GETOPND        GET FIRST OPERAND               @D5A
         CLC   PARMWORK,=CL8'DDNAME'   IS IT DDNAME?               @D5A
         BNE   DDNAMBYP            NO, BYPASS                      @D5A
         CLI   SCANSTOP,C'='       WAS IT A KEYWORD                @D5A
         BE    XPNDPRM1            ..YES, OK PROCEED               @D5A
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT           @D5A
XPNDPRM1 DS    0H                                                  @D5A
         BAL   LINK,GETOPND        GET DDNAME FIELD                @D5A
         LA    R2,PARMWORK         POINT TO DDNAME FIELD           @D5A
         L     R4,SYSUT2R          GET DCB FOR SYSUT2              @D5A
         MVC   DCBDDNAM-IHADCB(8,R4),0(R2) MOVE DDNAME TO DCB      @D5A
         B     XPNDPRML            GET NEXT KEYWORD                @D5A
         SPACE ,                                                   @D5A
DDNAMBYP DS    0H                                                  @D5A
         CLI   SCANSTOP,C' '       SCAN ENDED BY BLANK             @D5A
         BE    XPNDPRM2            ..YES, OK                       @D5A
         CLI   SCANSTOP,C','       SCAN ENDED BY A COMMA           @D5A
         BE    XPNDPRM2            ..YES, OK                       @D5A
         BAL   R14,ERR101          ERROR - DUMP IT                 @D5A
         SPACE ,                                                   @D5A
XPNDPRM2 DS    0H                                                  @D5A
         CLC   PARMWORK,=CL8'NEWDCB'   EXPAND WITH NEWDCB?         @D5A
         BE    OPTNDCB             YES, OK                         @D5A
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT           @D5A
         SPACE ,                                                   @D5A
OPTNDCB  EQU   *                   NEWDCB                          @D5A
         OI    SORTSW,NEWDCB       'NEWDCB' SPECIFIED              @D5A
         B     XPNDPRML            GET NEXT KEYWORD                @D5A
         TITLE 'DFH$MOL0   PROCESS BREAK CONTROL CARDS'
***********************************************************************
*                       PROCESS 'BREAK' CONTROL CARDS                 *
***********************************************************************
         SPACE
BRKPRM   DS    0H                  BREAK CONTROL CARD PROCESSING
         L     R3,CURRBLK          GET ADDRESS OF CURRENT BLOCK
         USING SIBLOCK,R3
         GETMAIN EU,LV=SILEN,A=SIWORK2,SP=0,LOC=(BELOW,64)         @D7C
         L     R1,SIWORK2          POINT TO THE NEW AREA
         XC    0(SILEN,R1),0(R1)   ZERO THE AREA
         ST    R1,CURRBLK          THIS WILL BE CURRENT
         ST    R1,NEXTBLK          CHAIN LAST ONE TO IT
         LR    R3,R1               USE THIS AS CURRENT
         SR    R1,R1               CLEAR REG 1 FOR WORK
         L     R1,=X'FFFFFFFF'     USE FOR SOME DEFAULTS
         STC   R1,SAIDCHN
         STC   R1,IAIDCHN
         STC   R1,STRMCHN
         STC   R1,ITRMCHN
         STC   R1,STRNCHN
         STC   R1,ITRNCHN
         STC   R1,SUIDCHN
         STC   R1,IUIDCHN
         STC   R1,STSKCHN                                          @PNA
         STC   R1,ITSKCHN                                          @PNA
         STC   R1,SPSTCHN                                          @LEA
         STC   R1,IPSTCHN                                          @LEA
         ST    R1,SILAST
         B     GETSYSIN            GET NEXT CARD
         SPACE
         TITLE 'DFH$MOL0   PROCESS SELECT CONTROL CARDS'
***********************************************************************
*                       PROCESS 'SELECT' CONTROL CARDS                *
***********************************************************************
         SPACE
SELCTPRM DS    0H                  SELECT CONTROL CARD PROCESSING
         L     R3,CURRBLK          GET ADDRESS OF CURRENT BLOCK
         USING SIBLOCK,R3
         BAL   LINK,GETOPND        GET NEXT OPERAND
         OI    PROCESSW,SELECTFD   REMEMBER THERE ARE SOME SELECTS
         OI    SISW1,SELECTFD      REMEMBER WE ARE A SELECT
         CLI   SCANSTOP,C'='       = DELIMITER
         BE    EQ98                ..YES, PROCEED
         BAL   R14,ERR101          ..NO, ERROR - DUMP IT
EQ98     DS    0H
         CLC   PARMWORK,=CL8'APPLID'   IS IT APPLID SELECT ?
         BE    SELAPPLP                YES, PROCESS IT
         CLC   PARMWORK,=CL8'TERMID'   IS IT TERMINAL ID SELECT ?
         BE    SELTERMP                YES, PROCESS IT
         CLC   PARMWORK,=CL8'TRANID'   IS IT TRANSACTION ID SELECT ?
         BE    SELTRANP                YES, PROCESS IT
         CLC   PARMWORK,=CL8'USERID'   IS IT USER ID SELECT ?
         BE    SELUSIDP                YES, PROCESS IT
         CLC   PARMWORK,=CL8'TASKNO'   IS IT TASKNO SELECT ?       @PNA
         BE    SELTASKP                YES, PROCESS IT             @PNA
         CLC   PARMWORK,=CL8'PRCSTYPE' IS IT PROCESS TYPE SELECT ? @LEA
         BE    SELPRSTP                YES, PROCESS IT             @LEA
         BAL   R14,ERR101          INVALID
         SPACE
SELAPPLP DS    0H                  PROCESS APPLID SELECTION
         TM    SELSWTCH,IGNAPPL    IS APPLID IGNORE ACTIVE
         BZ    OKSELAPL            NO, OK
         BAL   R14,ERR101          YES, ERROR - DUMP IT
OKSELAPL DS    0H
         OI    SELSWTCH,SELAPPL    SET APPLID SELECTION ACTIVE
         LA    R4,SAIDCHN          POINT TO CHAIN OF APPLIDS
         MVC   OPNDLEN,=F'9'       MAXIMUM FIELD LENGTH
         B     CHAINSCN            FIND CURRENT END
SELTERMP DS    0H                  PROCESS TERMINAL SELECTION
         TM    SELSWTCH,IGNTERM    IS TERMID IGNORE ACTIVE
         BZ    OKSELTRM            NO, OK
         BAL   R14,ERR101          YES, ERROR - DUMP IT
OKSELTRM DS    0H
         OI    SELSWTCH,SELTERM    SET TERMID SELECTION ACTIVE
         LA    R4,STRMCHN          POINT TO CHAIN OF TERMIDS
         MVC   OPNDLEN,=F'5'       MAXIMUM FIELD LENGTH
         B     CHAINSCN            FIND CURRENT END
SELTRANP DS    0H                  PROCESS TRANSACTION SELECTION
         TM    SELSWTCH,IGNTRAN    IS TRANID IGNORE ACTIVE
         BZ    OKSELTRN            NO, OK
         BAL   R14,ERR101          YES, ERROR - DUMP IT
OKSELTRN DS    0H
         OI    SELSWTCH,SELTRAN    SET TRANID SELECTION ACTIVE
         LA    R4,STRNCHN          POINT TO CHAIN OF TRANID'S
         MVC   OPNDLEN,=F'5'       MAXIMUM FIELD LENGTH
         B     CHAINSCN            FIND CURRENT END
SELUSIDP DS    0H                  PROCESS USER SELECTION
         TM    SELSWTCH,IGNUSID    WAS IGNORE ALSO SPECIFIED ?
         BZ    OKSELUID            NO, OK
         BAL   R14,ERR101          YES, ERROR - DUMP IT
OKSELUID DS    0H
         OI    SELSWTCH,SELUSID    SET USERID SELECTION ACTIVE
         LA    R4,SUIDCHN          POINT TO CHAIN OF USERID'S
         MVC   OPNDLEN,=F'9'       MAXIMUM FIELD LENGTH
         B     CHAINSCN            FIND CURRENT END
SELTASKP DS    0H                  PROCESS TASKNO SELECTION        @PNA
         TM    SELSWTCH+1,IGNTASK  WAS IGNORE ALSO SPECIFIED ?     @PNA
         BZ    OKSELTSK            NO, OK                          @PNA
         BAL   R14,ERR101          YES, THAT'S NOT GOOD            @PNA
OKSELTSK DS    0H                  TASKNO IGNORE OK                @PNA
         OI    SELSWTCH+1,SELTASK  SET TASKNO SELECTION ACTIVE     @PNA
         LA    R4,STSKCHN          POINT TO CHAIN OF TASKNOS       @PNA
         MVC   OPNDLEN,=F'8'       MAXIMUM FIELD LENGTH            @PNA
         B     CHAINTSK            FIND CURRENT END                @PNA
SELPRSTP DS    0H                  PROCESS PROCESS TYPE SELECTION  @LEA
         TM    SELSWTCH+1,IGNPRST  WAS IGNORE ALSO SPECIFIED ?     @LEA
         BZ    OKSELPST            NO, OK                          @LEA
         BAL   R14,ERR101          YES, ERROR - DUMP IT            @LEA
OKSELPST DS    0H                                                  @LEA
         OI    SELSWTCH+1,SELPRST  SET PROCESS TYPE SELECTION ACTIVE   F
                                                                   @LEA
         LA    R4,SPSTCHN          POINT TO CHAIN OF PROCESS TYPE'S    F
                                                                   @LEA
         MVC   OPNDLEN,=F'9'       MAXIMUM FIELD LENGTH            @LEA
         B     CHAINSCN            FIND CURRENT END                @LEA
         TITLE 'DFH$MOL0   PROCESS IGNORE CONTROL CARDS'
***********************************************************************
*                       PROCESS 'IGNORE' CONTROL CARDS                *
***********************************************************************
         SPACE
IGNPRM   DS    0H                  IGNORE CONTROL CARD PROCESSING
         BAL   LINK,GETOPND        GET NEXT OPERAND
         L     R3,CURRBLK          GET ADDRESS OF SIBLOCK
         USING SIBLOCK,R3
         OI    PROCESSW,SELECTFD   REMEMBER THERE ARE SOME IGNORES
         OI    SISW1,IGNOREFD      REMEMBER WE ARE AN IGNORE
         CLI   SCANSTOP,C'='       = DELIMITER
         BE    EQ97                YES
         BAL   R14,ERR101          NO
EQ97     DS    0H
         CLC   PARMWORK,=CL8'APPLID'   IS IT APPLID SEL
         BE    IGNAPPLP            YES, PROCESS IT
         CLC   PARMWORK,=CL8'TERMID'   IS IT TERMINAL ID SEL
         BE    IGNTERMP            YES, PROCESS IT
         CLC   PARMWORK,=CL8'TRANID'   IS IT TRANSACTION ID SEL
         BE    IGNTRANP            YES, PROCESS IT
         CLC   PARMWORK,=CL8'USERID'  IS IT USER ID IGNORE ?
         BE    IGNUSIDP            YES, GO PROCESS
         CLC   PARMWORK,=CL8'TASKNO'   IS IT TASKNO IGNORE ?       @PNA
         BE    IGNTASKP                YES, PROCESS IT             @PNA
         CLC   PARMWORK,=CL8'PRCSTYPE'  IS IT PROCESS TYPEIGNORE ? @LEA
         BE    IGNPRSTP            YES, GO PROCESS                 @LEA
SIRTN    DS    0H
         BAL   R14,ERR101          INVALID
         SPACE
IGNAPPLP DS    0H                  BUILD APPLICATION IGNORE CHAIN
         TM    SELSWTCH,SELAPPL    IS APPLICATION SELECTION ACTIVE
         BZ    OKAPLIGN            NO
         BAL   R14,ERR101          YES
OKAPLIGN DS    0H
         OI    SELSWTCH,IGNAPPL    SET APPLICATION ID IGNORE ACTIVE
         LA    R4,IAIDCHN          POINT TO CHAIN OF APPLICATION ID'S
         MVC   OPNDLEN,=F'9'       MAXIMUM FIELD LENGTH
         B     CHAINSCN            FIND CURRENT END
IGNTERMP DS    0H                  BUILD TERMINAL IGNORE CHAIN
         TM    SELSWTCH,SELTERM    IS TERMID SELECTION ACTIVE
         BZ    OKTRMIGN            NO
         BAL   R14,ERR101          YES
OKTRMIGN DS    0H
         OI    SELSWTCH,IGNTERM    SET TERMINAL ID IGNORE ACTIVE
         LA    R4,ITRMCHN          POINT TO CHAIN OF TERMINAL ID'S
         MVC   OPNDLEN,=F'5'       MAXIMUM FIELD LENGTH
         B     CHAINSCN            FIND CURRENT END
IGNTRANP DS    0H                  BUILD TRANSACTION ID IGNORE CHAIN
         TM    SELSWTCH,SELTRAN    IS TRANID SELECTION ACTIVE
         BZ    OKTRNIGN            NO
         BAL   R14,ERR101          YES
OKTRNIGN DS    0H
         OI    SELSWTCH,IGNTRAN    SET TRANS IGNORE ACTIVE
         LA    R4,ITRNCHN          POINT TO CHAIN OF TRANSACTION IDS
         MVC   OPNDLEN,=F'5'       MAXIMUM FIELD LENGTH
         B     CHAINSCN            ADD THIS TO THE CHAIN
IGNUSIDP DS    0H                  PROCESS IGNORE USERID
         TM    SELSWTCH,SELUSID    IS USER ID SELECTION ACTIVE
         BZ    OKUIDIGN            NO, PASS THIS TEST
         BAL   R14,ERR101          YES, THAT'S NOT GOOD
OKUIDIGN DS    0H                  USERID IGNORE OK
         OI    SELSWTCH,IGNUSID    SET TO IGNORE USERID
         LA    R4,IUIDCHN          POINT TO CHAIN OF USERIDS
         MVC   OPNDLEN,=F'9'       MAXIMUM FIELD LENGTH
         B     CHAINSCN            ADD THIS TO THE CHAIN
IGNTASKP DS    0H                  PROCESS IGNORE TASKNO           @PNA
         TM    SELSWTCH+1,SELTASK  IS TASKNO SELECTION ACTIVE      @PNA
         BZ    OKTSKIGN            NO, PASS THIS TEST              @PNA
         BAL   R14,ERR101          YES, THAT'S NOT GOOD            @PNA
OKTSKIGN DS    0H                  TASKNO IGNORE OK                @PNA
         OI    SELSWTCH+1,IGNTASK  SET TO IGNORE TASKNO            @PNA
         LA    R4,ITSKCHN          POINT TO CHAIN OF TASKNOS       @PNA
         MVC   OPNDLEN,=F'8'       MAXIMUM FIELD LENGTH            @PNA
         B     CHAINTSK            ADD THIS TO THE CHAIN           @PNA
IGNPRSTP DS    0H                  PROCESS IGNORE USERID           @LEA
         TM    SELSWTCH+1,SELPRST  IS PROCESS TYPE SELECTION ACTIVE    F
                                                                   @LEA
         BZ    OKPSTIGN            NO, PASS THIS TEST              @LEA
         BAL   R14,ERR101          YES, THAT'S NOT GOOD            @LEA
OKPSTIGN DS    0H                  PROCESS TYPE IGNORE OK          @LEA
         OI    SELSWTCH+1,IGNPRST  SET TO IGNORE PROCESS TYPE      @LEA
         LA    R4,IPSTCHN          POINT TO CHAIN OF PROCESS TYPES @LEA
         MVC   OPNDLEN,=F'9'       MAXIMUM FIELD LENGTH            @LEA
         B     CHAINSCN            ADD THIS TO THE CHAIN           @LEA
         TITLE 'DFH$MOL0   PROCESS SORT CONTROL CARDS'
***********************************************************************
*                       PROCESS 'SORT' CONTROL CARDS                  *
***********************************************************************
         SPACE
SORTPPRM DS    0H                  SORT CONTROL CARD PROCESSING
SORTGET  DS    0H
         B     GETSYSIN            GET NEXT CARD
         TITLE 'DFH$MOL0   BUILD CHAIN FROM SEL/IGN OPERANDS'
***********************************************************************
*              BUILD CHAIN FROM SELECT/IGNORE OPERANDS                *
***********************************************************************
         SPACE
CHAINSCN OC    1(3,R4),1(R4)       IS IT END OF CHAIN
         BZ    BLDLST              YES BUILD NEW CHAIN ENTRIES
         L     R4,0(R4)            POINT TO NEXT BLOCK
         B     CHAINSCN            TEST FOR END
         SPACE
BLDLST   DS    0H                  BUILD LIST OF PARM ENTRIES
         BAL   LINK,FINDOPND       GET NEXT OPERAND
         SR    R6,R6               CLEAR WORK
         CLI   0(R4),16            IS CURRENT AREA FULL
         BL    BLDLST1             NO CONTINUE
         GETMAIN EU,LV=132,A=BLDWK,SP=0,LOC=(BELOW,64)             @D7C
         MVC   1(3,R4),BLDWK+1     CHAIN UP NEW AREA
         L     R4,BLDWK            POINT TO NEW AREA
         XC    0(4,R4),0(R4)       CLEAR FORWARD POINTER
BLDLST1  IC    R6,0(R4)            GET OPERAND COUNT
         LA    R6,1(R6)            BUMP BY ONE
         STC   R6,0(R4)            SAVE NEW COUNT
         BCTR  R6,0                REDUCE IT AGAIN
         SLL   R6,3                MULTIPLY BY 8 (OPERAND LENGTH)
         AR    R6,R4               POINT TO NEW OPERAND
         MVC   4(8,R6),PARMWORK    SAVE NEW OPERAND
         B     BLDLST              LOOP TO END OF STATEMENT
         TITLE 'DFH$MOL0   BUILD CHAIN FROM SEL/IGN TASKNO OPERANDS'   F
                                                                   @PNA
***********************************************************************
*              BUILD CHAIN FROM SELECT/IGNORE TASKNO OPERANDS         *
***********************************************************************
         SPACE  ,                                                  @PNA
CHAINTSK OC    1(3,R4),1(R4)       IS IT END OF CHAIN              @PNA
         BZ    BLDLST3             YES, BUILD NEW CHAIN OF ENTRIES @PNA
         L     R4,0(R4)            POINT TO NEXT BLOCK             @PNA
         B     CHAINTSK            TEST FOR END                    @PNA
         SPACE  ,                                                  @PNA
BLDLST3  DS    0H                  BUILD LIST OF PARM ENTRIES      @PNA
         BAL   LINK,FINDOPND       GET NEXT OPERAND                @PNA
BLDLST3A DS    0H                  ISOLATE FIRST NUMBER AND JUSTIFY    F
                                                                   @PNA
         CLI   PARMWORK+7,C' '     IS IT JUSTIFIED                 @PNA
         BNE   BLDLST3B            BR IF SO                        @PNA
         MVI   SIWORK,C'0'         PUT IN A ZERO FOR PADDING       @PNA
         MVC   SIWORK+1(7),PARMWORK    SHIFT IT RIGHT ONE          @PNA
         MVC   PARMWORK,SIWORK                                     @PNA
         B     BLDLST3A            CONTINUE JUSTIFY                @PNA
         SPACE ,                                                   @PNA
BLDLST3B DS    0H                                                  @PNA
         TRT   PARMWORK,NUMERICS   CHECK FOR NUMERICS              @PNA
         BZ    BLDLST3C            BR IF OK                        @PNA
         BAL   R14,ERR101          NO, THAT'S AN ERROR             @PNA
         SPACE ,                                                   @PNA
BLDLST3C DS    0H                                                  @PNA
         PACK  SIWORK,PARMWORK     PACK THE TASK NUMBER            @PNA
         NI    SIWORK+7,X'FC'      ENSURE CORRECT TASKNO SIGN 'C'  @PNA
         MVC   PARMWORK,SIWORK     AND SAVE IT                     @PNA
         SPACE ,                                                   @PNA
         SR    R6,R6               CLEAR WORK                      @PNA
         CLI   0(R4),16            IS CURRENT AREA FULL            @PNA
         BL    BLDLST4             NO CONTINUE                     @PNA
         GETMAIN EU,LV=132,A=BLDWK,SP=0,LOC=(BELOW,64)             @D7C
         MVC   1(3,R4),BLDWK+1     CHAIN UP NEW AREA               @PNA
         L     R4,BLDWK            POINT TO NEW AREA               @PNA
         XC    0(4,R4),0(R4)       CLEAR FORWARD POINTER           @PNA
BLDLST4  IC    R6,0(R4)            GET OPERAND COUNT               @PNA
         LA    R6,1(R6)            BUMP BY ONE                     @PNA
         STC   R6,0(R4)            SAVE NEW COUNT                  @PNA
         BCTR  R6,0                REDUCE IT AGAIN                 @PNA
         SLL   R6,3                MULTIPLY BY 8 (OPERAND LENGTH)  @PNA
         AR    R6,R4               POINT TO NEW OPERAND            @PNA
         MVC   4(8,R6),PARMWORK    SAVE NEW OPERAND                @PNA
         B     BLDLST3             LOOP TO END OF STATEMENT        @PNA
         SPACE ,                                                   @PNC
         DROP  R3
         TITLE 'DFH$MOL0   CONVERT TO BINARY RTN'
***********************************************************************
*             CONVERT TO BINARY ROUTINE                              **
***********************************************************************
         SPACE
CONVRT   SR    R1,R1               SET COUNTER
CONAGN   DS    0H
         CLI   0(R2),X'F0'         IS FIELD NUMERIC
         BL    CONOUT              NO-CONVERT WHAT 'S THERE
         CLI   0(R2),X'F9'         IS FIELD NUMERIC
         BH    CONOUT              NO CONVERT WHAT'S THERE
         LA    R1,1(R1)            COUNT DIGITS
         LA    R2,1(R2)            POINT TO NEXT CHARACTER
         B     CONAGN              LOOP TILL NO MORE
CONOUT   LTR   R1,R1               ARE THERE ANY DIGITS
         BNZ   DIGSOK              YES , PROCEED
         BAL   R14,ERR101          NO, DUMP IT
DIGSOK   DS    0H
         SR    R2,R1               RESTORE REG 2
         BCTR  R1,0                LESS 1 FOR EXECUTE
         EX    R1,PACK1            PACK DIGITS
         CVB   R4,DWDPRM           CONVERT TO BINARY
         LTR   R4,R4               CHECK FOR MINIMUM
         BNMR  LINK                ALL IS OK  (ZERO NOW ALLOWED)
         BAL   R14,ERR101          LESS THAN MINIMUM
         TITLE 'DFH$MOL0   GET AN OPERAND ROUTINE - COMMON'
***********************************************************************
*   LOCATE A CONTROL CARD OPERATION KEYWORD. THE KEYWORD IS PADDED TO *
* 8 CHARS IN 'PARMWORK'. EXITS TO ERR101, END OF CARD, OR LINK REG.   *
***********************************************************************
         SPACE
GETOPND  LM    R6,R7,CTLPOINT          GET OPERAND START AND END ADDR
         CLI   0(R7),C' '              NEXT OPERAND BLANK
         BE    ENDSCAN                 YES - ALL DONE
         MVC   PARMWORK,=CL8' '        CLEAR WORK AREA
         LR    R1,R6                   DEFAULT TO LAST CHAR
         LA    R2,64                   DEFAULT TO A BLANK
         SR    R6,R7                   CALC LTH TO SCAN
         BNP   ENDSCAN                 END GO TO END ROUTINE
         EX    R6,TRTINST              FIND LTH OF FIELD
         STC   R2,SCANSTOP             SAVE THE STOP CHARACTER
         LA    R6,1(R1)                CALCULATE AND
         ST    R6,CTLPOINT+4           SAVE THE RESTART POINT
         SR    R1,R7                   CALC LTH OF FIELD
         BNP   PRMDLM                  DELIMITER ONLY
         CH    R1,=H'8'                FIELD GT 8
         BNH   OK67                    ITS VALID
         BAL   R14,ERR101              INVALID - DUMP IT
OK67     DS    0H
         BCTR  R1,0                    REDUCE LTH
         EX    R1,MVCPARM              MOVE IT
         CLI   SCANSTOP,C','           IS DELIM A COMMA
         BNE   *+16                    NO
         CLI   0(R6),C' '              NEXT PARM A BLANK FIELD
         BNE   *+8                     NO
         BAL   R14,ERR101              CONTINUATION NOT ALLOWED
         BR    LINK                    RETURN
         SPACE
***********************************************************************
*              FIND THE FIRST NON-BLANK CHAR IN A CONTROL CARD        *
***********************************************************************
         SPACE
FNDNBLK  ST    R6,CTLPOINT             SAVE END ADDRESS
         SH    R6,=H'9'         STOP SCAN AT COL 72
         SR    R6,R7                   GET LENGHT OF CONTROL CARD
         CLI   0(R7),C' '              IS IT BLANK
         BNE   *+14                    NO
         LA    R7,1(R7)                BUMP
         BCT   R6,*-12                 LOOK FOR MORE
         BCTR  R7,0                    BACK UP POINTER
         ST    R7,CTLPOINT+4           SAVE ADDRESS OF OPERATION FLD
         BR    LINK                    RETURN TO CALLER
         TITLE 'DFH$MOL0   FIND OPERAND IN LIST - COMMON'
***********************************************************************
*        LOCATE OPERANDS IN A LIST INCLUDING SPECIAL CHARACTERS       *
***********************************************************************
         SPACE
FINDOPND DS    0H                      FIND THE NEXT OPERAND IN LIST
         LM    R6,R7,CTLPOINT          PICK OPERAND START AND END PTRS
         MVC   PARMWORK,=CL8' '        CLEAR OUT OPERAND AREA
         CLI   0(R7),C' '              END OF OPERAND LIST
         BE    OPNDEND                 YES
         L     R2,OPNDLEN              GET MAXIMUM FIELD LENGTH
         SR    R6,R7                   CALCULATE REMAINING FIELD LTH
         BNP   OPNDEND                 NONE REMAINING
         LA    R5,PARMWORK             POINT TO BUILDING AREA
         B     *+12                    DON'T BUMP
OPNDLOOP LA    R7,1(R7)                BUMP INPUT POINTER
         LA    R5,1(R5)                BUMP PARMWORK POINTER
         CLI   0(R7),C' '              IS IT BLANK DELIMITER
         BE    OPNDFND                 YES
         CLI   0(R7),C','              IS IT COMMA DELIMITER
         BE    OPNDFND                 YES
         BCT   R2,*+8                  ALL CHARACTERS PROCESSED
         BAL   R14,ERR101              YES
         MVC   0(1,R5),0(R7)           MOVE A BYTE OF OPERAND
         BCT   R6,OPNDLOOP             LOOK FOR MORE
         BAL   R14,ERR101              NO ENDING DELIMITER
         SPACE  ,                                                  @P8A
OPNDFND  DS    0H                      FINAL CLEANUP
         C     R7,CTLPOINT+4           DID SCAN GET BUMPED
         BNE   OK77                    YES
         BAL   R14,ERR101              NO OPND LTH = 0
         SPACE  ,                                                  @P8A
OK77     DS    0H
         MVC   SCANSTOP,0(R7)          SAVE DELIMITER
         LA    R7,1(R7)                BUMP TO NEXT OPERAND
         ST    R7,CTLPOINT+4           SAVE IT
         BR    LINK                    RETURN
         SPACE
ENDSCAN  DS    0H                      END OF OPERAND FIELD SUBLIST
OPNDEND  B     GETSYSIN                GET NEXT CONTROL CARD
         SPACE  ,                                                  @P8A
PRMDLM   BAL   R14,ERR101              INVALID
         EJECT  ,                                                  @P8A
***********************************************************************
*        LOCATE DATE OPERANDS IN A LIST INCLUDING SPECIAL CHARACTERS  *
***********************************************************************
         SPACE  ,                                                  @P8A
FINDDATE DS    0H                      FIND THE DATE OPERAND IN LIST   F
                                                                   @P8A
         LM    R6,R7,CTLPOINT          PICK OPERAND START AND END PTRS F
                                                                   @P8A
         MVC   PARMWRK1,=CL10' '       CLEAR OUT OPERAND AREA      @P8A
         CLI   0(R7),C' '              END OF OPERAND LIST         @P8A
         BE    OPNDEND                 YES                         @P8A
         L     R2,OPNDLEN              GET MAXIMUM FIELD LENGTH    @P8A
         SR    R6,R7                   CALCULATE REMAINING FIELD LTH   F
                                                                   @P8A
         BNP   OPNDEND                 NONE REMAINING              @P8A
         LA    R5,PARMWRK1             POINT TO BUILDING AREA      @P8A
         B     *+12                    DON'T BUMP                  @P8A
DATELOOP LA    R7,1(R7)                BUMP INPUT POINTER          @P8A
         LA    R5,1(R5)                BUMP PARMWORK POINTER       @P8A
         CLI   0(R7),C' '              IS IT BLANK DELIMITER       @P8A
         BE    OPNDFND                 YES                         @P8A
         CLI   0(R7),C','              IS IT COMMA DELIMITER       @P8A
         BE    OPNDFND                 YES                         @P8A
         BCT   R2,*+8                  ALL CHARACTERS PROCESSED    @P8A
         BAL   R14,ERR101              YES                         @P8A
         MVC   0(1,R5),0(R7)           MOVE A BYTE OF OPERAND      @P8A
         BCT   R6,DATELOOP             LOOK FOR MORE               @P8A
         BAL   R14,ERR101              NO ENDING DELIMITER         @P8A
         TITLE 'DFH$MOL0   DATA AREAS'
***********************************************************************
*                       DATA AREAS                                    *
***********************************************************************
         SPACE ,                                               @BA63143
MOL0_STATIC DS 0F                  DFH$MOL0 STATIC DATA        @BA63143
         SPACE  ,                                              @BA63143
EREGSAVE DC    18F'0'              ERROR REGISTER SAVE AREA    @BA63143
EDITSAVE DC    F'0'                EDIT SAVE AREA              @BA63143
         SPACE ,                                               @BA63143
*  MONTH/DAY CORRELATION TABLE                                 @BA63143
INDATEMO EQU   *                   TABLE STARTS HERE           @BA63143
         DC    P'31'               JANUARY                     @BA63143
INDATEML EQU   *-INDATEMO          LENGTH OF ONE TABLE ENTRY   @BA63143
MO2      DC    P'99'               FEBRUARY (BUILT DYNAMICALLY)@BA63143
         DC    P'31'               MARCH                       @BA63143
         DC    P'30'               APRIL                       @BA63143
         DC    P'31'               MAY                         @BA63143
         DC    P'30'               JUNE                        @BA63143
         DC    P'31'               JULY                        @BA63143
         DC    P'31'               AUGUST                      @BA63143
         DC    P'30'               SEPTEMBER                   @BA63143
         DC    P'31'               OCTOBER                     @BA63143
         DC    P'30'               NOVEMBER                    @BA63143
         DC    P'31'               DECEMBER                    @BA63143
         SPACE  ,                                              @BA63143
SIWORK2  DC    A(0)                ADDRESS RETURNED HERE BY GETMAIN    F
                                                               @BA63143
BLDWK    DC    F'0'                BUILD LIST WORK AREA        @BA63143
         SPACE  ,                                              @BA63143
PACK1    PACK  DWDPRM,0(1,R2)      PACK NUMERIC FIELD          @BA63143
         SPACE  ,                                              @BA63143
TRTINST  TRT   0(1,R7),TRTFIELD    SCAN FOR DELIMITER          @BA63143
MVCPARM  MVC   PARMWORK(1),0(R7)   CREATE PARM WORKAREA        @BA63143
         SPACE ,                                               @BA63143
TRTFIELD EQU   *                       TRANSLATE AND TEST AREA
         DC    64X'FF'                 INVALID DATA
         DC    C' '                    BLANK
         DC    10X'FF'                 INVALID DATA
         DC    C'.'                    PERIOD
         DC    X'FF'                   INVALID DATA
         DC    C'('                    LEFT PAREN
         DC    15X'FF'                 INVALID DATA
         DC    C')'                    RIGHT PAREN
         DC    13X'FF'                 INVALID DATA
         DC    C','                    COMMA
         DC    17X'FF'                 INVALID DATA
         DC    C''''                   APOSTRIPHY
         DC    C'='                    EQUAL SIGN
         DC    66X'FF'                 INVALID DATA
         DC    9X'00'                  A TO I
         DC    7X'FF'                  INVALID DATA
         DC    9X'00'                  J TO R
         DC    8X'FF'                  INVALID DATA
         DC    8X'00'                  S TO Z
         DC    6X'FF'                  INVALID DATA
         DC    10X'00'                 0 TO 9
         DC    6X'FF'                  INVALID DATA
         SPACE ,                                                   @PNA
NUMERICS DC    256X'FF'                                            @PNA
         ORG   NUMERICS+C'0'                                       @PNA
         DC    10X'00'                 0-9 RE VALID                @PNA
         ORG   ,                                                   @PNA
         SPACE
SCANSTOP DC    C' '                CHAR THAT END LAST CTL STMT
CTLPOINT DC    A(0)                CURRENT CTL STMT SCAN POINTER
         DC    A(0)                END OF CONTROL STMT
PARMWORK DC    CL8' '              RETURN AREA FOR CTRL STMT WORD
PARMWRK1 DC    CL10' '             RETURN AREA FOR DATE STMT WORD  @P8A
OPNDLEN  DC    F'0'                MAXIMUM FIELD LENGTH
DWDPRM   DC    2D'0'               WORK AREA
CTRLSAVE DC    18F'0'              CONTROL CARD RTN SAVE AREA
         SPACE
MSG101   DC    CL133' '
         ORG   MSG101+1
         DC    C'ERROR - INVALID, DUPLICATE, OR MISSING CONTROL'
         DC    C' CARD INFORMATION'
         ORG   ,
MSG102   DC    CL133' '
         ORG   MSG102+1
         DC    C'ERROR - INCOMPATIBLE CONTROL CARD '
         DC    C'OPTIONS REQUESTED'
         ORG   ,
MSG115   DC    CL133' '                                            @P8A
         ORG   MSG115+1                                            @P8A
         DC    C'ERROR - INCOMPATIBLE CONTROL CARD '               @P8A
         DC    C'OPTIONS REQUESTED'                                @P8A
         ORG   ,                                                   @P8A
         EJECT
***********************************************************************
* A macro is used here to allow the version number to be moved into   *
* the heading from the GBLC &VER. This is needed because the CICS     *
* assembly process inserts a COPY DFHGDEFS at the start of the module,*
* which is not present if the module is assembled separately from     *
* CICS. The macro allows both methods of assembly.                    *
***********************************************************************
HEADER1  DC    CL133' '            PAGE HEADINGS
         ORG   HEADER1
         DC    C'1'                ASA EJECT CONTROL
         DC    C'***  DFH$MOLS - '                                 @L9C
         DC    C'CICS '                                            @04C
*************************                                          @04A
         MACRO                                                     @04A
&LABEL   LVER ,                                                    @04A
         GBLC  &VER                                                @04A
&LABEL   DC    CL5'&VER'                                           @04A
         MEND  ,                                                   @04A
HDR1VER  LVER                                                      @04A
*************************                                          @04A
         DC    C' -'                                               @04A
         DC    C' MONITORING DATA LISTING PROGRAM  '               @PDA
         DC    C'***      DATE '                                   @L9C
HDR1JDTE DC    C'YYYY/DDD'                                         @P8C
         DC    C'  '                                               @P8A
HDR1DATE DC    C'DD/MM/YYYY'                                       @P8C
         DC    C'   TIME '                                         @L9C
HDR1TIME DC    C'HH:MM:SS'
         DC    C'        '                                         @L9C
         DC    CL5'PAGE '
PG1COUNT DC    XL7'4020206B202120' PAGE COUNT
         ORG   ,
         SPACE ,                                                   @Q1C
CARDLST  DS    0CL133                  LIST CONTROL STATEMENT AREA
         DC    C'0 '                   ASA SPACE 2 LINES CONTROL
CARDA    DC    CL80' '                 CARD READIN AREA
         DC    CL51' '                 FILLER
         EJECT ,                                                   @Q1C
SYSIN    DCB   DSORG=PS,MACRF=GM,EODAD=EODAD,LRECL=80,RECFM=FB,        C
               DDNAME=SYSIN
         EJECT
SELHIT   EQU   X'01'       HIT ON SELECT CRITERIA
SELMIS   EQU   X'02'       MISS ON SELECT CRITERIA
IGNHIT   EQU   X'04'       HIT ON IGNORE CRITERIA
IGNMIS   EQU   X'08'       MISS ON IGNORE CRITERIA
SELECTFD EQU   X'10'       IDENTIFIES THAT FIELD IS A SELECT FIELD
IGNOREFD EQU   X'20'       IDENTIFIES THAT FIELD IS A IGNORE FIELD
         SPACE
         LTORG ,                                                   @08A
         SPACE ,                                                   @08A
SIBLOCK  DS    0D          USED AS A DSECT AFTER FIRST SELECT BLOCK
*                           SO DON'T INSERT ANYTHING BETWEEN HERE
*                           AND SILEN. ALSO DON'T ADD AFTER THIS
*                           UNLESS YOU PROVIDE ADDRESSIBILITY
NEXTBLK  DC    A(0)   ADDRESS OF NEXT SELECT IGNORE BLOCK
SAIDCHN  DC    AL1(255)            SELECT APPLID CHAIN
         DC    AL3(0)
IAIDCHN  DC    AL1(255)            IGNORE APPLID CHAIN
         DC    AL3(0)
STRMCHN  DC    AL1(255)            SELECT TERMID CHAIN
         DC    AL3(0)
ITRMCHN  DC    AL1(255)            IGNORE TERMID CHAIN
         DC    AL3(0)
STRNCHN  DC    AL1(255)            SELECT TRANID CHAIN
         DC    AL3(0)
ITRNCHN  DC    AL1(255)            IGNORE TRANID CHAIN
         DC    AL3(0)
SUIDCHN  DC    AL1(255)            SELECT USERID CHAIN
         DC    AL3(0)
IUIDCHN  DC    AL1(255)            IGNORE USERID CHAIN
         DC    AL3(0)
STSKCHN  DC    AL1(255)            SELECT TASKNO CHAIN             @PNA
         DC    AL3(0)                                              @PNA
ITSKCHN  DC    AL1(255)            IGNORE TASKNO CHAIN             @PNA
         DC    AL3(0)                                              @PNA
SPSTCHN  DC    AL1(255)            SELECT PROCESS TYPE CHAIN       @LEA
         DC    AL3(0)                                              @LEA
IPSTCHN  DC    AL1(255)            IGNORE PROCESS TYPE CHAIN       @LEA
         DC    AL3(0)                                              @LEA
SELSWTCH DC    F'0'
SISW1    DC    F'0'
SISW2    DC    F'0'
*        FOLLOWING HERE ARE THE NEW SELECT/IGNORE FIELDS
SILAST   DC    X'FFFFFFFF'
SILEN    EQU   *-SIBLOCK
         SPACE ,                                               @BA63143
         LTORG ,                                                   @Q1C
         SPACE ,                                                   @06A
         DFHEND DFH$MONA
