      CBL CICS('COBOL3,SP') APOST
PROCESS MAP,XREF
      *****************************************************************
      *                                                               *
      * MODULE NAME = DFH0CNA4                                        *
      *                                                               *
      * DESCRIPTIVE NAME = CICS TS  (NACT) NACT SAMPLE                *
      *                                                               *
      *                                                               *
      *                                                               *
      *     Licensed Materials - Property of IBM                      *
      *                                                               *
      *     "Restricted Materials of IBM"                             *
      *                                                               *
      *     5655-Y04                                                  *
      *                                                               *
      *     (C) Copyright IBM Corp. 2001"                             *
      *                                                               *
      *                                                               *
      *                                                               *
      *                                                               *
      * STATUS = 7.2.0                                                *
      *                                                               *
      *****************************************************************
      *                                                               *
      * DESCRIPTION                                                   *
      *                                                               *
      * This program provides the error and ABEND handling logic      *
      * for CICS Application Design and Programming book sample       *
      * application. It issues several CICS commands which are        *
      * classified as being part of the System Programming Interface  *
      * (SPI); as a result it needs to be transalated with the 'SP'   *
      * option which can be specified as an input parameter to the    *
      * translator or specified in the source code by                 *
      * including a 'CBL CICS(SP)' statement beginning in column 8    *
      * of the first line. Note that this program can have control    *
      * control transferred to it (via a CICS XCTL command), called   *
      * (via a CICS LINK or a COBOL Dynamic CALL) or entered as a     *
      * result of CICS System Recovery processing. The program needs  *
      * to distinguish between these different possibilities.         *
      *                                                               *
      * CHANGE ACTIVITY :                                             *
      *                                                               *
      * $MOD(DFH0CNA4),COMP(SAMPLES),PROD(CICS TS ):                  *
      *                                                               *
      * PN= REASON REL YYMMDD HDXXIII : REMARKS                       *
      * $P0= D02652 620 011003 HDFXAB  : Install Nact                 *
      *                                                               *
      *****************************************************************
       IDENTIFICATION DIVISION.
       PROGRAM-ID. DFH0CNA4.
       INSTALLATION. IBM HURSLEY.
       DATE-WRITTEN. AUGUST 1999.
       DATE-COMPILED.
      *
      ***************************************************************
      *     FILES
      *
      ***************************************************************
      *     CICS RESOURCES
      *
      *     TD QUEUE - QUEUE(WS-LITS-ERROR-QUEUE)
      *           WRITEQ TD
      *
      ***************************************************************
      *     UTILITIES
      *
      ***************************************************************
      *     COPYBOOKS
      *
      *     DFH0CNAC - Common working storage.
      *     DFH0CNAM - The mapsets.
      *     DFH0CNAE - The commarea layout of the data passed to
      *                this program from the other programs in the
      *                suite.
      *
      ***************************************************************
      *
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       DATA DIVISION.
      *
       WORKING-STORAGE SECTION.
      *
      *    Store eye catcher details to aid dump reading
      *
       01  WS-DEBUG-DETAILS.
           05  FILLER              PIC X(32)
                 VALUE 'DFH0CNA4-----WORKING STORAGE  '.
           05  DEBUG-EYE.
               10  DEBUG-TRANID    PIC X(4) VALUE SPACES.
               10  DEBUG-TERMID    PIC X(4) VALUE SPACES.
               10  DEBUG-TASKNO    PIC 9(7) VALUE ZERO.
           05  FILLER              PIC X    VALUE SPACE.
           05  DEBUG-COMMAREA-ADDR USAGE IS POINTER.
      *
      * The following fields contain data obtained from CICS. Some of
      * these are used to determine the type of actions that the logic
      * needs to perform under the various conditions. However,
      * several are not actually used but are included to illustrate
      * some additional data that may be useful in an ABEND/Error
      * handling program.
      *
       01  AA-ASSIGN-AREAS.
           05  AA-ABCODE.
               10  FILLER          PIC X(01) VALUE SPACES.
               10  AA-AC234        PIC X(03) VALUE SPACES.
                   88  AA-DO-NOT-SEND        VALUE 'TNI'
                                                   'TND'
                                                   'KCT'.
                   88  AA-TO-DISCONNECT      VALUE 'KCT'.
           05  AA-ABPROGRAM        PIC X(08) VALUE SPACES.
           05  AA-ASRAINTRPT.
               10  AA-AI-LTH       PIC S9(4) COMP VALUE ZERO.
               10  AA-AI-IC        PIC S9(4) COMP VALUE ZERO.
               10  FILLER REDEFINES AA-AI-IC.
                   15  FILLER      PIC X(01).
                   15  AA-AI-IC-LO PIC X(01).
               10  FILLER          PIC X(04) VALUE SPACES.
           05  AA-ASRAKEY          PIC S9(8) COMP VALUE ZERO.
           05  AA-ASRAPSW.
               10  FILLER          PIC X(04) VALUE SPACES.
               10  AA-ASRAPSW-NSI  PIC S9(8) COMP VALUE ZERO.
               10  AA-AP-NSI REDEFINES AA-ASRAPSW-NSI.
                   15  AA-AP-HIGH  PIC X(01).
                   15  FILLER      PIC X(03).
           05  AA-ASRAREGS.
               10  AA-REG          PIC X(04) OCCURS 16
                                   INDEXED BY AA-REG-IX.
           05  AA-ASRASPC          PIC S9(8) COMP VALUE ZERO.
           05  AA-ASRASTG          PIC S9(8) COMP VALUE ZERO.
           05  AA-FCI              PIC X(01) VALUE SPACE.
               88  AA-TERM-STARTED VALUE X'01'.
           05  AA-INVOKINGPROG     PIC X(08) VALUE SPACES.
           05  AA-NETNAME          PIC X(08) VALUE SPACES.
           05  AA-PROGRAM          PIC X(08) VALUE SPACES.
           05  AA-RETURNPROG       PIC X(08) VALUE SPACES.
           05  AA-STARTCODE        PIC X(02) VALUE SPACES.
           05  AA-TERMCODE         PIC X(01) VALUE SPACES.
           05  AA-USERID           PIC X(08) VALUE SPACES.
           05  AA-USERNAME         PIC X(20) VALUE SPACES.
      *
      * For program interrupts and operating system ABENDs, the logic
      * calculates the offset into the program where the error was
      * encountered in order to expedite problem analysis. This can
      * be used to relate the problem back to the source code of the
      * program in error without needing to examine a dump. These
      * fields are used in this calculation process.
      *
       01  FILLER                  PIC X(36) VALUE
               '********  WF-WORK-FIELDS    ********'.
      *
       01  WF-WORK-FIELDS.
           05  WF-ENTRY-POINT      PIC S9(8) COMP VALUE ZERO.
           05  FILLER REDEFINES WF-ENTRY-POINT.
               10  WF-EP-HIGH      PIC X(01).
               10  FILLER          PIC X(03).
           05  WF-LOAD-POINT       PIC S9(8) COMP VALUE ZERO.
           05  WF-LENGTH           PIC S9(8) COMP VALUE ZERO.
           05  WF-END-POINT        PIC S9(8) COMP VALUE ZERO.
           05  WF-AP-HALF          PIC S9(4) COMP VALUE ZERO.
           05  FILLER REDEFINES WF-AP-HALF.
               10  WF-AP-HIGH      PIC X(01).
               10  WF-AP-LOW       PIC X(01).
           05  WF-ABSTIME          PIC X(08) VALUE SPACES.
           05  WF-ERRH-NUMBER      PIC 9(04) VALUE ZERO.
      *
      * Various indices are required during message output building.
      *
       01  FILLER                  PIC X(36) VALUE
               '********  WS-INDEXES        ********'.
      *
       01  WS-INDEXES.
           05  WS-IX               PIC S9(4) COMP VALUE ZERO.
           05  WS-IH               PIC S9(4) COMP VALUE ZERO.
           05  WS-IL               PIC S9(4) COMP VALUE ZERO.
      *
      * A dump is produced in case further anlysis of the problem is
      * required. The code used is based on the CICS or application
      * problem encountered.
      *
       01  DUMP-CODE.
           05  DUMP-CODE-PREFIX    PIC X(01) VALUE SPACES.
           05  DUMP-CODE-SUFFIX    PIC X(03) VALUE SPACES.
      *
      * The following areas are used to create the
      * messages documenting the problem.
      *
       01  FILLER                  PIC X(36) VALUE
               '********  MA-MESSAGE-AREA   ********'.
      *
       01  MA-MESSAGE-AREA.
           05  MA-STD-INFO.
               10  MA-SI-ID        PIC X(03) VALUE SPACES.
               10  FILLER          PIC X(06) VALUE 'EH001'.
               10  MA-SI-DATE      PIC X(10) VALUE SPACES.
               10  FILLER          PIC X(01) VALUE SPACE.
               10  MA-SI-TIME      PIC X(08) VALUE SPACES.
               10  MA-SI-SCREEN.
                   15  FILLER      PIC X(22) VALUE
                       ' Error in transaction'.
                   15  MA-TRANSID  PIC X(04) VALUE SPACES.
                   15  FILLER      PIC X(10) VALUE
                       ', program'.
                   15  MA-ABPROGRAM PIC X(08) VALUE SPACES.
                   15  FILLER      PIC X(01) VALUE '.'.
           05  MA-XTR-INFO.
               10  MA-XI-ID        PIC X(03) VALUE SPACES.
               10  FILLER          PIC X(06) VALUE 'EH002'.
               10  MA-XI-DATE      PIC X(10) VALUE SPACES.
               10  FILLER          PIC X(01) VALUE SPACE.
               10  MA-XI-TIME      PIC X(08) VALUE SPACES.
               10  MA-XI-SCREEN.
                   15  FILLER      PIC X(09) VALUE ' Type is '.
                   15  MA-XI-VAR   PIC X(70) VALUE SPACES.
           05  FILLER.
               10  MA-AB.
                   15  MA-AB-TYPE  PIC X(05) VALUE SPACES.
                   15  FILLER      PIC X(10) VALUE '. Code is '.
                   15  MA-ABCODE   PIC X(04) VALUE SPACES.
                   15  FILLER      PIC X(51) VALUE '.'.
               10  MA-TR.
                   15  MA-TR-TYPE  PIC X(04) VALUE SPACES.
                   15  FILLER      PIC X(14) VALUE
                       '. Response is '.
                   15  MA-RESP     PIC X(12) VALUE SPACES.
                   15  FILLER      PIC X(12) VALUE
                       ', Reason is '.
                   15  MA-REAS     PIC X(04) VALUE SPACES.
                   15  FILLER      PIC X(03) VALUE ' - '.
                   15  MA-CMD      PIC X(20) VALUE SPACES.
                   15  FILLER      PIC X(01) VALUE '.'.
      *
           05  MA-ASRA-DATA.
               10  MA-AD-ID        PIC X(03) VALUE SPACES.
               10  FILLER          PIC X(06) VALUE 'EH003'.
               10  MA-AD-DATE      PIC X(10) VALUE SPACES.
               10  FILLER          PIC X(01) VALUE SPACE.
               10  MA-AD-TIME      PIC X(08) VALUE SPACES.
               10  MA-AD-SCREEN.
                   15  FILLER      PIC X(22) VALUE
                       ' Problem is at offset'.
                   15  MA-AD-OFF   PIC X(09) VALUE SPACES.
                   15  FILLER      PIC X(12) VALUE
                       '. Exception'.
                   15  MA-AD-IC    PIC 9(04) VALUE ZERO.
                   15  FILLER      PIC X(03) VALUE ' - '.
                   15  MA-AD-EXPLAIN
                                   PIC X(21) VALUE SPACES.
      *
      * For program interrupts, the logic includes an analysis of
      * the type of error and includes it in the output messages.
      *
       01  EXCEPTION-EXPLANATIONS.
           05  FILLER              PIC X(21) VALUE
               'Operation'.
           05  FILLER              PIC X(21) VALUE
               'Privileged-operation'.
           05  FILLER              PIC X(21) VALUE
               'Execute'.
           05  FILLER              PIC X(21) VALUE
               'Protection'.
           05  FILLER              PIC X(21) VALUE
               'Addressing'.
           05  FILLER              PIC X(21) VALUE
               'Specification'.
           05  FILLER              PIC X(21) VALUE
               'Data'.
           05  FILLER              PIC X(21) VALUE
               'Fixed-point overflow'.
           05  FILLER              PIC X(21) VALUE
               'Fixed-point divide'.
           05  FILLER              PIC X(21) VALUE
               'Decimal-overflow'.
           05  FILLER              PIC X(21) VALUE
               'Decimal-divide'.
           05  FILLER              PIC X(21) VALUE
               'Exponent-overflow'.
           05  FILLER              PIC X(21) VALUE
               'Exponent-underflow'.
           05  FILLER              PIC X(21) VALUE
               'Significance'.
           05  FILLER              PIC X(21) VALUE
               'Floating-point divide'.
       01  FILLER REDEFINES EXCEPTION-EXPLANATIONS.
           05  EXC-EXPLAIN         PIC X(21) OCCURS 15.
      *
      * The offset calculated needs to be expressed in hexadecimal
      * format in order to make it useful for relating back to source
      * code. These definitions provide the necessary conversion table
      * for that process.
      *
       01  HEX-TABLE               PIC X(16) VALUE
           '0123456789ABCDEF'.
       01  FILLER REDEFINES HEX-TABLE.
           05  HEX-CHAR            PIC X(01) OCCURS 16.
      *
      * For unexpected exceptional condition handling, the output
      * messages include an explanation of the problem in words
      * rather than in codes wherever possible. These definitions
      * provide the words for the codes which are converted.
      *
       01  RESPONSE-TABLE.
           05  RESP01              PIC X(12)     VALUE 'ERROR'.
           05  RESP02              PIC X(12)     VALUE 'RDATT'.
           05  RESP03              PIC X(12)     VALUE 'WRBRK'.
           05  RESP04              PIC X(12)     VALUE 'EOF'.
           05  RESP05              PIC X(12)     VALUE 'EODS'.
           05  RESP06              PIC X(12)     VALUE 'EOC'.
           05  RESP07              PIC X(12)     VALUE 'INBFMH'.
           05  RESP08              PIC X(12)     VALUE 'ENDINPT'.
           05  RESP09              PIC X(12)     VALUE 'NONVAL'.
           05  RESP10              PIC X(12)     VALUE 'NOSTART'.
           05  RESP11              PIC X(12)     VALUE 'TERMIDERR'.
           05  RESP12              PIC X(12)     VALUE 'FILENOTFOUND'.
           05  RESP13              PIC X(12)     VALUE 'NOTFND'.
           05  RESP14              PIC X(12)     VALUE 'DUPREC'.
           05  RESP15              PIC X(12)     VALUE 'DUPKEY'.
           05  RESP16              PIC X(12)     VALUE 'INVREQ'.
           05  RESP17              PIC X(12)     VALUE 'IOERR'.
           05  RESP18              PIC X(12)     VALUE 'NOSPACE'.
           05  RESP19              PIC X(12)     VALUE 'NOTOPEN'.
           05  RESP20              PIC X(12)     VALUE 'ENDFILE'.
           05  RESP21              PIC X(12)     VALUE 'ILLOGIC'.
           05  RESP22              PIC X(12)     VALUE 'LENGERR'.
           05  RESP23              PIC X(12)     VALUE 'QZERO'.
           05  RESP24              PIC X(12)     VALUE 'SIGNAL'.
           05  RESP25              PIC X(12)     VALUE 'QBUSY'.
           05  RESP26              PIC X(12)     VALUE 'ITEMERR'.
           05  RESP27              PIC X(12)     VALUE 'PGMIDERR'.
           05  RESP28              PIC X(12)     VALUE 'TRANSIDERR'.
           05  RESP29              PIC X(12)     VALUE 'ENDDATA'.
           05  RESP30              PIC X(12)     VALUE 'INVTSREQ'.
           05  RESP31              PIC X(12)     VALUE 'EXPIRED'.
           05  RESP32              PIC X(12)     VALUE 'RETPAGE'.
           05  RESP33              PIC X(12)     VALUE 'RTEFAIL'.
           05  RESP34              PIC X(12)     VALUE 'RTESOME'.
           05  RESP35              PIC X(12)     VALUE 'TSIOERR'.
           05  RESP36              PIC X(12)     VALUE 'MAPFAIL'.
           05  RESP37              PIC X(12)     VALUE 'INVERRTERM'.
           05  RESP38              PIC X(12)     VALUE 'INVMPSZ'.
           05  RESP39              PIC X(12)     VALUE 'IGREQID'.
           05  RESP40              PIC X(12)     VALUE 'OVERFLOW'.
           05  RESP41              PIC X(12)     VALUE 'INVLDC'.
           05  RESP42              PIC X(12)     VALUE 'NOSTG'.
           05  RESP43              PIC X(12)     VALUE 'JIDERR'.
           05  RESP44              PIC X(12)     VALUE 'QIDERR'.
           05  RESP45              PIC X(12)     VALUE 'NOJBUFSP'.
           05  RESP46              PIC X(12)     VALUE 'DSSTAT'.
           05  RESP47              PIC X(12)     VALUE 'SELNERR'.
           05  RESP48              PIC X(12)     VALUE 'FUNCERR'.
           05  RESP49              PIC X(12)     VALUE 'UNEXPIN'.
           05  RESP50              PIC X(12)     VALUE 'NOPASSBKRD'.
           05  RESP51              PIC X(12)     VALUE 'NOPASSBKWR'.
           05  RESP52              PIC X(12)     VALUE '*NOT VALID*'.
           05  RESP53              PIC X(12)     VALUE 'SYSIDERR'.
           05  RESP54              PIC X(12)     VALUE 'ISCINVREQ'.
           05  RESP55              PIC X(12)     VALUE 'ENQBUSY'.
           05  RESP56              PIC X(12)     VALUE 'ENVDEFERR'.
           05  RESP57              PIC X(12)     VALUE 'IGREQCD'.
           05  RESP58              PIC X(12)     VALUE 'SESSIONERR'.
           05  RESP59              PIC X(12)     VALUE 'SYSBUSY'.
           05  RESP60              PIC X(12)     VALUE 'SESSBUSY'.
           05  RESP61              PIC X(12)     VALUE 'NOTALLOC'.
           05  RESP62              PIC X(12)     VALUE 'CBIDERR'.
           05  RESP63              PIC X(12)     VALUE 'INVEXITREQ'.
           05  RESP64              PIC X(12)     VALUE 'INVPARTNSET'.
           05  RESP65              PIC X(12)     VALUE 'INVPARTN'.
           05  RESP66              PIC X(12)     VALUE 'PARTNFAIL'.
           05  RESP67              PIC X(12)     VALUE '*NOT VALID*'.
           05  RESP68              PIC X(12)     VALUE '*NOT VALID*'.
           05  RESP69              PIC X(12)     VALUE 'USERIDERR'.
           05  RESP70              PIC X(12)     VALUE 'NOTAUTH'.
           05  RESP71              PIC X(12)     VALUE 'VOLIDERR'.
           05  RESP72              PIC X(12)     VALUE 'SUPPRESSED'.
           05  RESP73              PIC X(12)     VALUE '*NOT VALID*'.
           05  RESP74              PIC X(12)     VALUE '*NOT VALID*'.
           05  RESP75              PIC X(12)     VALUE 'RESIDERR'.
           05  RESP76              PIC X(12)     VALUE '*NOT VALID*'.
           05  RESP77              PIC X(12)     VALUE '*NOT VALID*'.
           05  RESP78              PIC X(12)     VALUE '*NOT VALID*'.
           05  RESP79              PIC X(12)     VALUE '*NOT VALID*'.
           05  RESP80              PIC X(12)     VALUE 'NOSPOOL'.
           05  RESP81              PIC X(12)     VALUE 'TERMERR'.
           05  RESP82              PIC X(12)     VALUE 'ROLLEDBACK'.
           05  RESP83              PIC X(12)     VALUE 'END'.
           05  RESP84              PIC X(12)     VALUE 'DISABLED'.
           05  RESP85              PIC X(12)     VALUE 'ALLOCERR'.
           05  RESP86              PIC X(12)     VALUE 'STRELERR'.
           05  RESP87              PIC X(12)     VALUE 'OPENERR'.
           05  RESP88              PIC X(12)     VALUE 'SPOLBUSY'.
           05  RESP89              PIC X(12)     VALUE 'SPOLERR'.
           05  RESP90              PIC X(12)     VALUE 'NODEIDER'.
           05  RESP91              PIC X(12)     VALUE 'TASKIDERR'.
           05  RESP92              PIC X(12)     VALUE 'TCIDERR'.
           05  RESP93              PIC X(12)     VALUE 'DSNNOTFOUND'.
           05  RESP94              PIC X(12)     VALUE 'LOADING'.
           05  RESP95              PIC X(12)     VALUE 'MODELIDERR'.
           05  RESP96              PIC X(12)     VALUE 'OUTDESCRERR'.
           05  RESP97              PIC X(12)     VALUE 'PARTNERIDERR'.
           05  RESP98              PIC X(12)     VALUE 'PROFILEIDERR'.
           05  RESP99              PIC X(12)     VALUE 'NETNAMEIDERR'.
           05  RESP100             PIC X(12)     VALUE 'LOCKED'.
           05  RESP101             PIC X(12)     VALUE 'RECORDBUSY'.
       01  FILLER                  REDEFINES RESPONSE-TABLE.
           05  RESPONSE-VALUE      OCCURS 101
                                   PIC X(12).
      *
       01  FILLER.
           05  MAXIMUM-RESPONSE    PIC 9(4)      VALUE 0101.
           05  NOTPOSS-RESPONSE    PIC 9(4)      VALUE 0255.
           05  NOTPOSS-RESP-VAL    PIC X(12)     VALUE 'NOTPOSS'.
           05  BAD-RESPONSE-VALUE  PIC X(12)     VALUE '**INVALID**'.
      *
      * For unexpected exceptional condition handling, the output
      * messages include an explanation of the problem in words
      * rather than in codes wherever possible. These definitions
      * provide the words for the functions which are converted.
      *
       01  VAL-COMMAND-VALUES.
           05  VAL-0202        PIC 9(5) VALUE 00514.
           05  VAL-0204        PIC 9(5) VALUE 00516.
           05  VAL-0206        PIC 9(5) VALUE 00518.
           05  VAL-0208        PIC 9(5) VALUE 00520.
           05  VAL-020A        PIC 9(5) VALUE 00522.
           05  VAL-020C        PIC 9(5) VALUE 00524.
           05  VAL-020E        PIC 9(5) VALUE 00526.
           05  VAL-0210        PIC 9(5) VALUE 00528.
           05  VAL-0402        PIC 9(5) VALUE 01026.
           05  VAL-0404        PIC 9(5) VALUE 01028.
           05  VAL-0406        PIC 9(5) VALUE 01030.
           05  VAL-0408        PIC 9(5) VALUE 01032.
           05  VAL-040A        PIC 9(5) VALUE 01034.
           05  VAL-040C        PIC 9(5) VALUE 01036.
           05  VAL-040E        PIC 9(5) VALUE 01038.
           05  VAL-0410        PIC 9(5) VALUE 01040.
           05  VAL-0412        PIC 9(5) VALUE 01042.
           05  VAL-0414        PIC 9(5) VALUE 01044.
           05  VAL-0416        PIC 9(5) VALUE 01046.
           05  VAL-0418        PIC 9(5) VALUE 01048.
           05  VAL-041A        PIC 9(5) VALUE 01050.
           05  VAL-041C        PIC 9(5) VALUE 01052.
           05  VAL-041E        PIC 9(5) VALUE 01054.
           05  VAL-0420        PIC 9(5) VALUE 01056.
           05  VAL-0422        PIC 9(5) VALUE 01058.
           05  VAL-0424        PIC 9(5) VALUE 01060.
           05  VAL-0426        PIC 9(5) VALUE 01062.
           05  VAL-0428        PIC 9(5) VALUE 01064.
           05  VAL-042A        PIC 9(5) VALUE 01066.
           05  VAL-042C        PIC 9(5) VALUE 01068.
           05  VAL-042E        PIC 9(5) VALUE 01070.
           05  VAL-0430        PIC 9(5) VALUE 01072.
           05  VAL-0432        PIC 9(5) VALUE 01074.
           05  VAL-0434        PIC 9(5) VALUE 01076.
           05  VAL-0436        PIC 9(5) VALUE 01078.
           05  VAL-0438        PIC 9(5) VALUE 01080.
           05  VAL-043A        PIC 9(5) VALUE 01082.
           05  VAL-043C        PIC 9(5) VALUE 01084.
           05  VAL-043E        PIC 9(5) VALUE 01086.
           05  VAL-0602        PIC 9(5) VALUE 01538.
           05  VAL-0604        PIC 9(5) VALUE 01540.
           05  VAL-0606        PIC 9(5) VALUE 01542.
           05  VAL-0608        PIC 9(5) VALUE 01544.
           05  VAL-060A        PIC 9(5) VALUE 01546.
           05  VAL-060C        PIC 9(5) VALUE 01548.
           05  VAL-060E        PIC 9(5) VALUE 01550.
           05  VAL-0610        PIC 9(5) VALUE 01552.
           05  VAL-0612        PIC 9(5) VALUE 01554.
           05  VAL-0614        PIC 9(5) VALUE 01556.
           05  VAL-0802        PIC 9(5) VALUE 02050.
           05  VAL-0804        PIC 9(5) VALUE 02052.
           05  VAL-0806        PIC 9(5) VALUE 02054.
           05  VAL-0A02        PIC 9(5) VALUE 02562.
           05  VAL-0A04        PIC 9(5) VALUE 02564.
           05  VAL-0A06        PIC 9(5) VALUE 02566.
           05  VAL-0C02        PIC 9(5) VALUE 03074.
           05  VAL-0C04        PIC 9(5) VALUE 03076.
           05  VAL-0E02        PIC 9(5) VALUE 03586.
           05  VAL-0E04        PIC 9(5) VALUE 03588.
           05  VAL-0E06        PIC 9(5) VALUE 03590.
           05  VAL-0E08        PIC 9(5) VALUE 03592.
           05  VAL-0E0A        PIC 9(5) VALUE 03594.
           05  VAL-0E0C        PIC 9(5) VALUE 03596.
           05  VAL-0E0E        PIC 9(5) VALUE 03598.
           05  VAL-1002        PIC 9(5) VALUE 04098.
           05  VAL-1004        PIC 9(5) VALUE 04100.
           05  VAL-1006        PIC 9(5) VALUE 04102.
           05  VAL-1008        PIC 9(5) VALUE 04104.
           05  VAL-100A        PIC 9(5) VALUE 04106.
           05  VAL-100C        PIC 9(5) VALUE 04108.
           05  VAL-1202        PIC 9(5) VALUE 04610.
           05  VAL-1204        PIC 9(5) VALUE 04612.
           05  VAL-1206        PIC 9(5) VALUE 04614.
           05  VAL-1208        PIC 9(5) VALUE 04616.
           05  VAL-1402        PIC 9(5) VALUE 05122.
           05  VAL-1404        PIC 9(5) VALUE 05124.
           05  VAL-1406        PIC 9(5) VALUE 05126.
           05  VAL-1408        PIC 9(5) VALUE 05128.
           05  VAL-1602        PIC 9(5) VALUE 05634.
           05  VAL-1604        PIC 9(5) VALUE 05636.
           05  VAL-1802        PIC 9(5) VALUE 06146.
           05  VAL-1804        PIC 9(5) VALUE 06148.
           05  VAL-1806        PIC 9(5) VALUE 06150.
           05  VAL-1808        PIC 9(5) VALUE 06152.
           05  VAL-180A        PIC 9(5) VALUE 06154.
           05  VAL-180C        PIC 9(5) VALUE 06156.
           05  VAL-180E        PIC 9(5) VALUE 06158.
           05  VAL-1810        PIC 9(5) VALUE 06160.
           05  VAL-1812        PIC 9(5) VALUE 06162.
           05  VAL-1C02        PIC 9(5) VALUE 07170.
           05  VAL-1E02        PIC 9(5) VALUE 07682.
           05  VAL-1E04        PIC 9(5) VALUE 07684.
           05  VAL-1E06        PIC 9(5) VALUE 07686.
           05  VAL-1E08        PIC 9(5) VALUE 07688.
           05  VAL-1E0A        PIC 9(5) VALUE 07690.
           05  VAL-1E0C        PIC 9(5) VALUE 07692.
           05  VAL-1E0E        PIC 9(5) VALUE 07694.
           05  VAL-1E10        PIC 9(5) VALUE 07696.
           05  VAL-1E12        PIC 9(5) VALUE 07698.
           05  VAL-1E14        PIC 9(5) VALUE 07700.
           05  VAL-2002        PIC 9(5) VALUE 08194.
           05  VAL-2202        PIC 9(5) VALUE 08706.
           05  VAL-2204        PIC 9(5) VALUE 08708.
           05  VAL-2206        PIC 9(5) VALUE 08710.
           05  VAL-3002        PIC 9(5) VALUE 12290.
           05  VAL-3004        PIC 9(5) VALUE 12292.
           05  VAL-3006        PIC 9(5) VALUE 12294.
           05  VAL-3008        PIC 9(5) VALUE 12296.
           05  VAL-300A        PIC 9(5) VALUE 12298.
           05  VAL-300C        PIC 9(5) VALUE 12300.
           05  VAL-300E        PIC 9(5) VALUE 12302.
           05  VAL-3010        PIC 9(5) VALUE 12304.
           05  VAL-3012        PIC 9(5) VALUE 12306.
           05  VAL-3014        PIC 9(5) VALUE 12308.
           05  VAL-3016        PIC 9(5) VALUE 12310.
           05  VAL-3018        PIC 9(5) VALUE 12312.
           05  VAL-301A        PIC 9(5) VALUE 12314.
           05  VAL-301C        PIC 9(5) VALUE 12316.
           05  VAL-301E        PIC 9(5) VALUE 12318.
           05  VAL-3020        PIC 9(5) VALUE 12320.
           05  VAL-3022        PIC 9(5) VALUE 12322.
           05  VAL-3024        PIC 9(5) VALUE 12324.
           05  VAL-3026        PIC 9(5) VALUE 12326.
           05  VAL-3028        PIC 9(5) VALUE 12328.
           05  VAL-302A        PIC 9(5) VALUE 12330.
           05  VAL-302C        PIC 9(5) VALUE 12332.
           05  VAL-302E        PIC 9(5) VALUE 12334.
           05  VAL-3030        PIC 9(5) VALUE 12336.
           05  VAL-3A02        PIC 9(5) VALUE 14850.
           05  VAL-4202        PIC 9(5) VALUE 16898.
           05  VAL-4210        PIC 9(5) VALUE 16912.
           05  VAL-4402        PIC 9(5) VALUE 17410.
           05  VAL-4410        PIC 9(5) VALUE 17424.
           05  VAL-4602        PIC 9(5) VALUE 17922.
           05  VAL-4610        PIC 9(5) VALUE 17936.
           05  VAL-4802        PIC 9(5) VALUE 18434.
           05  VAL-4804        PIC 9(5) VALUE 18436.
           05  VAL-4A02        PIC 9(5) VALUE 18946.
           05  VAL-4A04        PIC 9(5) VALUE 18948.
           05  VAL-4C02        PIC 9(5) VALUE 19458.
           05  VAL-4C04        PIC 9(5) VALUE 19460.
           05  VAL-4C10        PIC 9(5) VALUE 19472.
           05  VAL-4E02        PIC 9(5) VALUE 19970.
           05  VAL-4E04        PIC 9(5) VALUE 19972.
           05  VAL-4E10        PIC 9(5) VALUE 19984.
           05  VAL-5002        PIC 9(5) VALUE 20482.
           05  VAL-5004        PIC 9(5) VALUE 20484.
           05  VAL-5010        PIC 9(5) VALUE 20496.
           05  VAL-5202        PIC 9(5) VALUE 20994.
           05  VAL-5204        PIC 9(5) VALUE 20996.
           05  VAL-5206        PIC 9(5) VALUE 20998.
           05  VAL-5208        PIC 9(5) VALUE 21000.
           05  VAL-5210        PIC 9(5) VALUE 21008.
           05  VAL-5212        PIC 9(5) VALUE 21010.
           05  VAL-5214        PIC 9(5) VALUE 21012.
           05  VAL-5216        PIC 9(5) VALUE 21014.
           05  VAL-5402        PIC 9(5) VALUE 21506.
           05  VAL-5404        PIC 9(5) VALUE 21508.
           05  VAL-5602        PIC 9(5) VALUE 22018.
           05  VAL-5604        PIC 9(5) VALUE 22020.
           05  VAL-5606        PIC 9(5) VALUE 22022.
           05  VAL-5610        PIC 9(5) VALUE 22032.
           05  VAL-5802        PIC 9(5) VALUE 22530.
           05  VAL-5804        PIC 9(5) VALUE 22532.
           05  VAL-5806        PIC 9(5) VALUE 22534.
           05  VAL-5810        PIC 9(5) VALUE 22544.
           05  VAL-5A02        PIC 9(5) VALUE 23042.
           05  VAL-5A04        PIC 9(5) VALUE 23044.
           05  VAL-5C02        PIC 9(5) VALUE 23554.
           05  VAL-5C04        PIC 9(5) VALUE 23556.
           05  VAL-5C10        PIC 9(5) VALUE 23568.
           05  VAL-5E02        PIC 9(5) VALUE 24066.
           05  VAL-5E04        PIC 9(5) VALUE 24068.
           05  VAL-5E06        PIC 9(5) VALUE 24070.
           05  VAL-5E08        PIC 9(5) VALUE 24072.
           05  VAL-5E12        PIC 9(5) VALUE 24082.
           05  VAL-5E14        PIC 9(5) VALUE 24084.
           05  VAL-5E18        PIC 9(5) VALUE 24088.
           05  VAL-5E1A        PIC 9(5) VALUE 24090.
           05  VAL-5E1C        PIC 9(5) VALUE 24092.
           05  VAL-5E22        PIC 9(5) VALUE 24098.
           05  VAL-5E32        PIC 9(5) VALUE 24114.
           05  VAL-6002        PIC 9(5) VALUE 24578.
           05  VAL-6004        PIC 9(5) VALUE 24580.
           05  VAL-6010        PIC 9(5) VALUE 24592.
           05  VAL-6012        PIC 9(5) VALUE 24594.
           05  VAL-6014        PIC 9(5) VALUE 24596.
           05  VAL-6202        PIC 9(5) VALUE 25090.
           05  VAL-6204        PIC 9(5) VALUE 25092.
           05  VAL-6402        PIC 9(5) VALUE 25602.
           05  VAL-6602        PIC 9(5) VALUE 26114.
           05  VAL-6604        PIC 9(5) VALUE 26116.
           05  VAL-6612        PIC 9(5) VALUE 26130.
           05  VAL-6614        PIC 9(5) VALUE 26132.
           05  VAL-6622        PIC 9(5) VALUE 26146.
           05  VAL-6624        PIC 9(5) VALUE 26148.
           05  VAL-6802        PIC 9(5) VALUE 26626.
           05  VAL-6804        PIC 9(5) VALUE 26628.
           05  VAL-6812        PIC 9(5) VALUE 26642.
           05  VAL-6814        PIC 9(5) VALUE 26644.
           05  VAL-6822        PIC 9(5) VALUE 26658.
           05  VAL-6824        PIC 9(5) VALUE 26660.
           05  VAL-6826        PIC 9(5) VALUE 26662.
           05  VAL-6A02        PIC 9(5) VALUE 27138.
           05  VAL-6C02        PIC 9(5) VALUE 27650.
           05  VAL-6C12        PIC 9(5) VALUE 27666.
           05  VAL-6E02        PIC 9(5) VALUE 28162.
           05  VAL-6E04        PIC 9(5) VALUE 28164.
           05  VAL-7002        PIC 9(5) VALUE 28674.
           05  VAL-7004        PIC 9(5) VALUE 28676.
           05  VAL-7006        PIC 9(5) VALUE 28678.
           05  VAL-7008        PIC 9(5) VALUE 28680.
           05  VAL-7012        PIC 9(5) VALUE 28690.
           05  VAL-7014        PIC 9(5) VALUE 28692.
           05  VAL-7202        PIC 9(5) VALUE 29186.
           05  VAL-7402        PIC 9(5) VALUE 29698.
           05  VAL-7404        PIC 9(5) VALUE 29670.
           05  VAL-7406        PIC 9(5) VALUE 29672.
           05  VAL-7408        PIC 9(5) VALUE 29674.
           05  VAL-7602        PIC 9(5) VALUE 30210.
           05  VAL-7802        PIC 9(5) VALUE 30722.
           05  VAL-7804        PIC 9(5) VALUE 30724.
           05  VAL-7812        PIC 9(5) VALUE 30738.
           05  VAL-7814        PIC 9(5) VALUE 30740.
           05  VAL-7822        PIC 9(5) VALUE 30754.
           05  VAL-7824        PIC 9(5) VALUE 30756.
           05  VAL-7A02        PIC 9(5) VALUE 31234.
           05  VAL-7A04        PIC 9(5) VALUE 31236.
           05  VAL-7C02        PIC 9(5) VALUE 31746.
           05  VAL-7E02        PIC 9(5) VALUE 32258.
           05  VAL-7E04        PIC 9(5) VALUE 32260.
           05  VAL-8002        PIC 9(5) VALUE 32770.
           05  VAL-8004        PIC 9(5) VALUE 32772.
           05  VAL-8012        PIC 9(5) VALUE 32786.
           05  VAL-8014        PIC 9(5) VALUE 32788.
           05  VAL-801A        PIC 9(5) VALUE 32794.
           05  VAL-8022        PIC 9(5) VALUE 32802.
           05  VAL-8030        PIC 9(5) VALUE 32816.
           05  VAL-8602        PIC 9(5) VALUE 34306.
       01  FILLER              REDEFINES VAL-COMMAND-VALUES.
           05  COMMAND-VAL     PIC 9(5) OCCURS 239.
      *
       01  FILLER.
           05  MAX-COMMANDS    PIC 9(4) COMP VALUE 239.
      *
       01  NAME-COMMAND-NAMES.
           05  NAME-0202       PIC X(20) VALUE 'ADDRESS'.
           05  NAME-0204       PIC X(20) VALUE 'HANDLE CONDITION'.
           05  NAME-0206       PIC X(20) VALUE 'HANDLE AID'.
           05  NAME-0208       PIC X(20) VALUE 'ASSIGN'.
           05  NAME-020A       PIC X(20) VALUE 'IGNORE CONDITION'.
           05  NAME-020C       PIC X(20) VALUE 'PUSH'.
           05  NAME-020E       PIC X(20) VALUE 'POP'.
           05  NAME-0210       PIC X(20) VALUE 'ADDRESS SET'.
           05  NAME-0402       PIC X(20) VALUE 'RECEIVE'.
           05  NAME-0404       PIC X(20) VALUE 'SEND'.
           05  NAME-0406       PIC X(20) VALUE 'CONVERSE'.
           05  NAME-0408       PIC X(20) VALUE 'ISSUE EODS'.
           05  NAME-040A       PIC X(20) VALUE 'ISSUE COPY'.
           05  NAME-040C       PIC X(20) VALUE 'WAIT TERMINAL'.
           05  NAME-040E       PIC X(20) VALUE 'ISSUE LOAD'.
           05  NAME-0410       PIC X(20) VALUE 'WAIT SIGNAL'.
           05  NAME-0412       PIC X(20) VALUE 'ISSUE RESET'.
           05  NAME-0414       PIC X(20) VALUE 'ISSUE DISCONNECT'.
           05  NAME-0416       PIC X(20) VALUE 'ISSUE ENDOUTPUT'.
           05  NAME-0418       PIC X(20) VALUE 'ISSUE ERASEUP'.
           05  NAME-041A       PIC X(20) VALUE 'ISSUE ENDFILE'.
           05  NAME-041C       PIC X(20) VALUE 'ISSUE PRINT'.
           05  NAME-041E       PIC X(20) VALUE 'ISSUE SIGNAL'.
           05  NAME-0420       PIC X(20) VALUE 'ALLOCATE'.
           05  NAME-0422       PIC X(20) VALUE 'FREE'.
           05  NAME-0424       PIC X(20) VALUE 'POINT'.
           05  NAME-0426       PIC X(20) VALUE 'BUILD ATTACH'.
           05  NAME-0428       PIC X(20) VALUE 'EXTRACT ATTACH'.
           05  NAME-042A       PIC X(20) VALUE 'EXTRACT TCT'.
           05  NAME-042C       PIC X(20) VALUE 'WAIT CONVID'.
           05  NAME-042E       PIC X(20) VALUE 'EXTRACT PROCESS'.
           05  NAME-0430       PIC X(20) VALUE 'ISSUE ABEND'.
           05  NAME-0432       PIC X(20) VALUE 'CONNECT PROCESS'.
           05  NAME-0434       PIC X(20) VALUE 'ISSUE CONFIRMATION'.
           05  NAME-0436       PIC X(20) VALUE 'ISSUE ERROR'.
           05  NAME-0438       PIC X(20) VALUE 'ISSUE PREPARE'.
           05  NAME-043A       PIC X(20) VALUE 'ISSUE PASS'.
           05  NAME-043C       PIC X(20) VALUE 'EXTRACT LOGONMSG'.
           05  NAME-043E       PIC X(20) VALUE 'EXTRACT ATTRIBUTES'.
           05  NAME-0602       PIC X(20) VALUE 'READ'.
           05  NAME-0604       PIC X(20) VALUE 'WRITE'.
           05  NAME-0606       PIC X(20) VALUE 'REWRITE'.
           05  NAME-0608       PIC X(20) VALUE 'DELETE'.
           05  NAME-060A       PIC X(20) VALUE 'UNLOCK'.
           05  NAME-060C       PIC X(20) VALUE 'STARTBR'.
           05  NAME-060E       PIC X(20) VALUE 'READNEXT'.
           05  NAME-0610       PIC X(20) VALUE 'READPREV'.
           05  NAME-0612       PIC X(20) VALUE 'ENDBR'.
           05  NAME-0614       PIC X(20) VALUE 'RESETBR'.
           05  NAME-0802       PIC X(20) VALUE 'WRITEQ TD'.
           05  NAME-0804       PIC X(20) VALUE 'READQ TD'.
           05  NAME-0806       PIC X(20) VALUE 'DELETEQ TD'.
           05  NAME-0A02       PIC X(20) VALUE 'WRITEQ TS'.
           05  NAME-0A04       PIC X(20) VALUE 'READQ TS'.
           05  NAME-0A06       PIC X(20) VALUE 'DELETEQ TS'.
           05  NAME-0C02       PIC X(20) VALUE 'GETMAIN'.
           05  NAME-0C04       PIC X(20) VALUE 'FREEMAIN'.
           05  NAME-0E02       PIC X(20) VALUE 'LINK'.
           05  NAME-0E04       PIC X(20) VALUE 'XCTL'.
           05  NAME-0E06       PIC X(20) VALUE 'LOAD'.
           05  NAME-0E08       PIC X(20) VALUE 'RETURN'.
           05  NAME-0E0A       PIC X(20) VALUE 'RELEASE'.
           05  NAME-0E0C       PIC X(20) VALUE 'ABEND'.
           05  NAME-0E0E       PIC X(20) VALUE 'HANDLE ABEND'.
           05  NAME-1002       PIC X(20) VALUE 'ASKTIME'.
           05  NAME-1004       PIC X(20) VALUE 'DELAY'.
           05  NAME-1006       PIC X(20) VALUE 'POST'.
           05  NAME-1008       PIC X(20) VALUE 'START'.
           05  NAME-100A       PIC X(20) VALUE 'RETRIEVE'.
           05  NAME-100C       PIC X(20) VALUE 'CANCEL'.
           05  NAME-1202       PIC X(20) VALUE 'WAIT EVENT'.
           05  NAME-1204       PIC X(20) VALUE 'ENQ'.
           05  NAME-1206       PIC X(20) VALUE 'DEQ'.
           05  NAME-1208       PIC X(20) VALUE 'SUSPEND'.
           05  NAME-1402       PIC X(20) VALUE 'WRITE JOURNALNUM'.
           05  NAME-1404       PIC X(20) VALUE 'WAIT JOURNALNUM'.
           05  NAME-1406       PIC X(20) VALUE 'WRITE JOURNALNAME'.
           05  NAME-1408       PIC X(20) VALUE 'WAIT JOURNALNAME'.
           05  NAME-1602       PIC X(20) VALUE 'SYNCPOINT'.
           05  NAME-1604       PIC X(20) VALUE 'RESYNC ENTRYNAME'.
           05  NAME-1802       PIC X(20) VALUE 'RECEIVE MAP'.
           05  NAME-1804       PIC X(20) VALUE 'SEND MAP'.
           05  NAME-1806       PIC X(20) VALUE 'SEND TEXT'.
           05  NAME-1808       PIC X(20) VALUE 'SEND PAGE'.
           05  NAME-180A       PIC X(20) VALUE 'PURGE MESSAGE'.
           05  NAME-180C       PIC X(20) VALUE 'ROUTE'.
           05  NAME-180E       PIC X(20) VALUE 'RECEIVE PARTN'.
           05  NAME-1810       PIC X(20) VALUE 'SEND PARTNSET'.
           05  NAME-1812       PIC X(20) VALUE 'SEND CONTROL'.
           05  NAME-1C02       PIC X(20) VALUE 'DUMP'.
           05  NAME-1E02       PIC X(20) VALUE 'ISSUE ADD'.
           05  NAME-1E04       PIC X(20) VALUE 'ISSUE ERASE'.
           05  NAME-1E06       PIC X(20) VALUE 'ISSUE REPLACE'.
           05  NAME-1E08       PIC X(20) VALUE 'ISSUE ABORT'.
           05  NAME-1E0A       PIC X(20) VALUE 'ISSUE QUERY'.
           05  NAME-1E0C       PIC X(20) VALUE 'ISSUE END'.
           05  NAME-1E0E       PIC X(20) VALUE 'ISSUE RECEIVE'.
           05  NAME-1E10       PIC X(20) VALUE 'ISSUE NOTE'.
           05  NAME-1E12       PIC X(20) VALUE 'ISSUE WAIT'.
           05  NAME-1E14       PIC X(20) VALUE 'ISSUE SEND'.
           05  NAME-2002       PIC X(20) VALUE 'BIF DEEDIT'.
           05  NAME-2202       PIC X(20) VALUE 'ENABLE PROGRAM'.
           05  NAME-2204       PIC X(20) VALUE 'DISABLE PROGRAM'.
           05  NAME-2206       PIC X(20) VALUE 'EXTRACT EXIT'.
           05  NAME-3002       PIC X(20) VALUE 'CREATE PROGRAM'.
           05  NAME-3004       PIC X(20) VALUE 'CREATE MAPSET'.
           05  NAME-3006       PIC X(20) VALUE 'CREATE PARTITIONSET'.
           05  NAME-3008       PIC X(20) VALUE 'CREATE TRANSACTION'.
           05  NAME-300A       PIC X(20) VALUE 'CREATE PROFILE'.
           05  NAME-300C       PIC X(20) VALUE 'CREATE TYPETERM'.
           05  NAME-300E       PIC X(20) VALUE 'CREATE CONNECTION'.
           05  NAME-3010       PIC X(20) VALUE 'CREATE TERMINAL'.
           05  NAME-3012       PIC X(20) VALUE 'CREATE SESSIONS'.
           05  NAME-3014       PIC X(20) VALUE 'CREATE FILE'.
           05  NAME-3016       PIC X(20) VALUE 'CREATE LSRPOOL'.
           05  NAME-3018       PIC X(20) VALUE 'CREATE PARTNER'.
           05  NAME-301A       PIC X(20) VALUE 'CREATE TRANCLASS'.
           05  NAME-301C       PIC X(20) VALUE 'CREATE TDQUEUE'.
           05  NAME-301E       PIC X(20) VALUE 'CREATE JOURNALMODEL'.
           05  NAME-3020       PIC X(20) VALUE 'CREATE DB2CONN'.
           05  NAME-3022       PIC X(20) VALUE 'CREATE DB2ENTRY'.
           05  NAME-3024       PIC X(20) VALUE 'CREATE DB2TRAN'.
           05  NAME-3026       PIC X(20) VALUE 'CREATE PROCESSTYPE'.
           05  NAME-3028       PIC X(20) VALUE 'CREATE TSMODEL'.
           05  NAME-302A       PIC X(20) VALUE 'CREATE ENQMODEL'.
           05  NAME-302E       PIC X(20) VALUE 'CREATE DOCTEMPLATE'.
           05  NAME-3030       PIC X(20) VALUE 'CREATE TCPIPSERVICE'.
           05  NAME-3A02       PIC X(20) VALUE 'INQUIRE RRMS'.
           05  NAME-4202       PIC X(20) VALUE 'INQUIRE AUTINSTMODEL'.
           05  NAME-4210       PIC X(20) VALUE 'DISCARD AUTINSTMODEL'.
           05  NAME-4402       PIC X(20) VALUE 'INQUIRE PARTNER'.
           05  NAME-4410       PIC X(20) VALUE 'DISCARD PARTNER'.
           05  NAME-4602       PIC X(20) VALUE 'INQUIRE PROFILE'.
           05  NAME-4610       PIC X(20) VALUE 'DISCARD PROFILE'.
           05  NAME-4802       PIC X(20) VALUE 'ENTER TRACENUM'.
           05  NAME-4804       PIC X(20) VALUE 'MONITOR POINT'.
           05  NAME-4A02       PIC X(20) VALUE 'ASKTIME ABSTIME'.
           05  NAME-4A04       PIC X(20) VALUE 'FORMATTIME'.
           05  NAME-4C02       PIC X(20) VALUE 'INQUIRE FILE'.
           05  NAME-4C04       PIC X(20) VALUE 'SET FILE'.
           05  NAME-4C10       PIC X(20) VALUE 'DISCARD FILE'.
           05  NAME-4E02       PIC X(20) VALUE 'INQUIRE PROGRAM'.
           05  NAME-4E04       PIC X(20) VALUE 'SET PROGRAM'.
           05  NAME-4E10       PIC X(20) VALUE 'DISCARD PROGRAM'.
           05  NAME-5002       PIC X(20) VALUE 'INQUIRE TRANSACTION'.
           05  NAME-5004       PIC X(20) VALUE 'SET TRANSACTION'.
           05  NAME-5010       PIC X(20) VALUE 'DISCARD TRANSACTION'.
           05  NAME-5202       PIC X(20) VALUE 'INQUIRE TERMINAL'.
           05  NAME-5204       PIC X(20) VALUE 'SET TERMINAL'.
           05  NAME-5206       PIC X(20) VALUE 'INQUIRE NETNAME'.
           05  NAME-5208       PIC X(20) VALUE 'SET NETNAME'.
           05  NAME-5210       PIC X(20) VALUE 'DISCARD TERMINAL'.
           05  NAME-5212       PIC X(20) VALUE 'INQUIRE TERMINAL'.
           05  NAME-5214       PIC X(20) VALUE 'SET TERMINAL'.
           05  NAME-5216       PIC X(20) VALUE 'INQUIRE NETNAME'.
           05  NAME-5402       PIC X(20) VALUE 'INQUIRE SYSTEM'.
           05  NAME-5404       PIC X(20) VALUE 'SET SYSTEM'.
           05  NAME-5602       PIC X(20) VALUE 'SPOOLOPEN'.
           05  NAME-5604       PIC X(20) VALUE 'SPOOLREAD'.
           05  NAME-5606       PIC X(20) VALUE 'SPOOLWRITE'.
           05  NAME-5610       PIC X(20) VALUE 'SPOOLCLOSE'.
           05  NAME-5802       PIC X(20) VALUE 'INQUIRE CONNECTION'.
           05  NAME-5804       PIC X(20) VALUE 'SET CONNECTION'.
           05  NAME-5806       PIC X(20) VALUE 'PERFORM ENDAFFINITY'.
           05  NAME-5810       PIC X(20) VALUE 'DISCARD CONNECTION'.
           05  NAME-5A02       PIC X(20) VALUE 'INQUIRE MODENAME'.
           05  NAME-5A04       PIC X(20) VALUE 'SET MODENAME'.
           05  NAME-5C02       PIC X(20) VALUE 'INQUIRE TDQUEUE'.
           05  NAME-5C04       PIC X(20) VALUE 'SET TDQUEUE'.
           05  NAME-5C10       PIC X(20) VALUE 'DISCARD TDQUEUE'.
           05  NAME-5E02       PIC X(20) VALUE 'INQUIRE TASK'.
           05  NAME-5E04       PIC X(20) VALUE 'SET TASK'.
           05  NAME-5E06       PIC X(20) VALUE 'CHANGE TASK'.
           05  NAME-5E08       PIC X(20) VALUE 'INQUIRE STORAGE'.
           05  NAME-5E12       PIC X(20) VALUE 'INQUIRE TCLASS'.
           05  NAME-5E14       PIC X(20) VALUE 'SET TCLASS'.
           05  NAME-5E18       PIC X(20) VALUE 'DISCARD TRANCLASS'.
           05  NAME-5E1A       PIC X(20) VALUE 'INQUIRE TRANCLASS'.
           05  NAME-5E1C       PIC X(20) VALUE 'SET TRANCLASS'.
           05  NAME-5E22       PIC X(20) VALUE 'WAIT EXTERNAL'.
           05  NAME-5E32       PIC X(20) VALUE 'WAITCICS'.
           05  NAME-6002       PIC X(20) VALUE 'INQUIRE JOURNALNUM'.
           05  NAME-6004       PIC X(20) VALUE 'SET JOURNALNUM'.
           05  NAME-6010       PIC X(20) VALUE 'DISCARD JOURNALNAME'.
           05  NAME-6012       PIC X(20) VALUE 'INQUIRE JOURNALNAME'.
           05  NAME-6014       PIC X(20) VALUE 'SET JOURNALNAME'.
           05  NAME-6202       PIC X(20) VALUE 'INQUIRE VOLUME'.
           05  NAME-6204       PIC X(20) VALUE 'SET VOLUME'.
           05  NAME-6402       PIC X(20) VALUE 'PERFORM SECURITY'.
           05  NAME-6602       PIC X(20) VALUE 'INQUIRE DUMPDS'.
           05  NAME-6604       PIC X(20) VALUE 'SET DUMPDS'.
           05  NAME-6612       PIC X(20) VALUE 'INQUIRE TRANDUMPCODE'.
           05  NAME-6614       PIC X(20) VALUE 'SET TRANDUMPCODE'.
           05  NAME-6622       PIC X(20) VALUE 'INQUIRE SYSDUMPCODE'.
           05  NAME-6624       PIC X(20) VALUE 'SET SYSDUMPCODE'.
           05  NAME-6802       PIC X(20) VALUE 'INQUIRE VTAM'.
           05  NAME-6804       PIC X(20) VALUE 'SET VTAM'.
           05  NAME-6812       PIC X(20) VALUE 'INQUIRE AUTOINSTALL'.
           05  NAME-6814       PIC X(20) VALUE 'SET AUTOINSTALL'.
           05  NAME-6822       PIC X(20) VALUE 'INQUIRE DELETSHIPPED'.
           05  NAME-6824       PIC X(20) VALUE 'SET DELETSHIPPED'.
           05  NAME-6826       PIC X(20) VALUE 'PERFORM DELETSHIPPED'.
           05  NAME-6A02       PIC X(20) VALUE 'QUERY SECURITY'.
           05  NAME-6C02       PIC X(20) VALUE 'WRITE OPERATOR'.
           05  NAME-6C12       PIC X(20) VALUE 'ISSUE DFHWTO'.
           05  NAME-6E02       PIC X(20) VALUE 'INQUIRE IRC'.
           05  NAME-6E04       PIC X(20) VALUE 'SET IRC'.
           05  NAME-7002       PIC X(20) VALUE 'INQUIRE STATISTICS'.
           05  NAME-7004       PIC X(20) VALUE 'SET STATISTICS'.
           05  NAME-7006       PIC X(20) VALUE 'PERFORM STATISTICS'.
           05  NAME-7008       PIC X(20) VALUE 'COLLECT STATISTICS'.
           05  NAME-7012       PIC X(20) VALUE 'INQUIRE MONITOR'.
           05  NAME-7014       PIC X(20) VALUE 'SET MONITOR'.
           05  NAME-7202       PIC X(20) VALUE 'PERFORM RESETTIME'.
           05  NAME-7402       PIC X(20) VALUE 'SIGNON'.
           05  NAME-7404       PIC X(20) VALUE 'SIGNOFF'.
           05  NAME-7406       PIC X(20) VALUE 'VERIFY PASSWORD'.
           05  NAME-7408       PIC X(20) VALUE 'CHANGE PASSWORD'.
           05  NAME-7602       PIC X(20) VALUE 'PERFORM SHUTDOWN'.
           05  NAME-7802       PIC X(20) VALUE 'INQUIRE TRACEDEST'.
           05  NAME-7804       PIC X(20) VALUE 'SET TRACEDEST'.
           05  NAME-7812       PIC X(20) VALUE 'INQUIRE TRACEFLAG'.
           05  NAME-7814       PIC X(20) VALUE 'SET TRACEFLAG'.
           05  NAME-7822       PIC X(20) VALUE 'INQUIRE TRACETYPE'.
           05  NAME-7824       PIC X(20) VALUE 'SET TRACETYPE'.
           05  NAME-7A02       PIC X(20) VALUE 'INQUIRE DSNAME'.
           05  NAME-7A04       PIC X(20) VALUE 'SET DSNAME'.
           05  NAME-7C02       PIC X(20) VALUE 'INQUIRE EXCI'.
           05  NAME-7E02       PIC X(20) VALUE 'DUMP TRANSACTION'.
           05  NAME-7E04       PIC X(20) VALUE 'PERFORM DUMP'.
           05  NAME-8002       PIC X(20) VALUE 'INQUIRE TSQUEUE'.
           05  NAME-8004       PIC X(20) VALUE 'SET TSQUEUE'.
           05  NAME-8012       PIC X(20) VALUE 'INQUIRE TSQNAME'.
           05  NAME-8014       PIC X(20) VALUE 'SET TSQNAME'.
           05  NAME-801A       PIC X(20) VALUE 'INQUIRE TSPOOL'.
           05  NAME-8022       PIC X(20) VALUE 'INQUIRE TSMODEL'.
           05  NAME-8030       PIC X(20) VALUE 'DISCARD TSMODEL'.
           05  NAME-8602       PIC X(20) VALUE 'ACQUIRE TERMINAL'.
       01  FILLER              REDEFINES NAME-COMMAND-NAMES.
           05  COMMAND-NAME    PIC X(20) OCCURS 239.
      *
       01  FILLER.
           05  UNKNOWN-COMMAND PIC X(20) VALUE '**UNKNOWN COMMAND**'.
      *
      * Various values which you might wish to modify are placed in one
      * copy book in order to make those sorts of changes more easily.
      *
       01  FILLER.
           05  FILLER          PIC X(36) VALUE
               '********  DFH0CNAC COPYBOOK ********'.
           COPY DFH0CNAC.
      *
      * The generated symbolic map must be included in the program.
      *
       01  FILLER.
           05  FILLER          PIC X(36) VALUE
               '********  DFH0CNAM COPYBOOK  *******'.
           COPY DFH0CNAM.
      *
       01  FILLER              PIC X(36) VALUE
               '********  LINKAGE SECTION   ********'.
       EJECT.
      *
       LINKAGE SECTION.
      *
      * The interface to this program is described in
      * a copy book in order to ensure consistency.
      *
       01  DFHCOMMAREA.
           COPY DFH0CNAE.
      *
       EJECT.
      *
       PROCEDURE DIVISION.
      *
      * First we obtain various information from CICS about the
      * environment and the problem. We use this to determine
      * what actions to take and whether the program was entered
      * via CICS ABEND handling or whether an application program
      * transferred control to it (via a CICS XCTL) or called it
      * (via a CICS LINK or COBOL Dynamic CALL).
      *
       NACT04-MAIN SECTION.
      *
       NACT04-010.
      *
      *  Set up values in the eye-catcher
      *
           MOVE EIBTRNID TO DEBUG-TRANID.
           MOVE EIBTRMID TO DEBUG-TERMID.
           MOVE EIBTASKN TO DEBUG-TASKNO.
      *
      *  Set up the commarea address
      *
           SET DEBUG-COMMAREA-ADDR TO ADDRESS OF DFHCOMMAREA.
      *
       NACT04-020.
           EXEC CICS ASSIGN NOHANDLE
                     ABCODE(AA-ABCODE)
                     ABPROGRAM(AA-ABPROGRAM)
                     ASRAINTRPT(AA-ASRAINTRPT)
                     ASRAKEY(AA-ASRAKEY)
                     ASRAPSW(AA-ASRAPSW)
                     ASRAREGS(AA-ASRAREGS)
                     ASRASPC(AA-ASRASPC)
                     ASRASTG(AA-ASRASTG)
                     FCI(AA-FCI)
                     INVOKINGPROG(AA-INVOKINGPROG)
                     NETNAME(AA-NETNAME)
                     PROGRAM(AA-PROGRAM)
                     RETURNPROG(AA-RETURNPROG)
                     STARTCODE(AA-STARTCODE)
                     TERMCODE(AA-TERMCODE)
           END-EXEC.
      *
       NACT04-030.
      *
      * A maximum of 16 parameters can be specified on one
      * ASSIGN command, so we need to issue two.
      *
           EXEC CICS ASSIGN NOHANDLE
                     USERID(AA-USERID)
                     USERNAME(AA-USERNAME)
           END-EXEC.
      *
       NACT04-040.
      *
      * Here we initialize various fields, primarily from the constant
      * values included in the common copy book set up for this purpose.
      *
           MOVE LOW-VALUES           TO ACCTERRO.
           MOVE WS-LITS-DUMP-PREFIX  TO DUMP-CODE-PREFIX.
           MOVE WS-LITS-ERROR-PREFIX TO MA-SI-ID.
           MOVE WS-LITS-ERROR-PREFIX TO MA-XI-ID.
           MOVE WS-LITS-ERROR-PREFIX TO MA-AD-ID.
           MOVE EIBTRNID             TO MA-TRANSID.
      *
       NACT04-050.
      *
      * If there is no ABEND code, then this program was invoked
      * by either a CICS XCTL, a CICS LINK or a COBOL Dynamic CALL.
      *
           IF  AA-ABCODE = SPACES
               PERFORM A-FIRST-ABEND
               PERFORM C-NORMAL-STUFF
           ELSE
               IF  AA-ABCODE NOT = WS-LITS-SPECIAL
                   PERFORM B-SECOND-ABEND
                   PERFORM C-NORMAL-STUFF
               END-IF
           END-IF.
      *
       NACT04-060.
      *
      * If the return program identified by CICS contains spaces,
      * that means we have come all the way up the LINK chain (if
      * there was one) and so we should simply return to CICS.
      * If the return and invoking program identified by CICS
      * are the same, then that means this program was LINKed to
      * and so we should simply return to it.
      *
           IF  AA-RETURNPROG = SPACES
           OR  AA-RETURNPROG = AA-INVOKINGPROG
               EXEC CICS RETURN
               END-EXEC
      *
      * If the return program identified by CICS did not contain
      * spaces and the invoking program identified by CICS is not
      * the same, then that means this program is executing at a
      * lower logical level and the invoker does not expect to be
      * returned to. (Either this was transferred control to (via a
      * CICS XCTL) or entered via CICS ABend Handling.) So we should
      * propagate the ABEND up the LINK chain with the special code.
      *
           ELSE
               EXEC CICS ABEND
                         ABCODE(WS-LITS-SPECIAL)
               END-EXEC
           END-IF.
      *
       END-NACT04-MAIN.
           EXIT.
           EJECT.
      *
       A-FIRST-ABEND SECTION.
      *
      * When the program is not entered as a result of CICS ABEND
      * handling, we expect an interface area of a particular size
      * and format. If it is not, then we have no option but to
      * ABEND ourselves.
      *
       A-010.
           IF  (EIBCALEN NOT = LENGTH OF DFHCOMMAREA)
           OR  (NOT CA-ERRH-CORRECT-VERSION)
               EXEC CICS ABEND
                         ABCODE(WS-LITS-ABEND-ERRH-IF)
               END-EXEC
           END-IF.
      *
       A-020.
      * Now we set up the message fields, etc., to indicate that
      * the error was trapped by the application program logic.
      *
           MOVE SPACES             TO MA-ASRA-DATA.
           MOVE CA-ERRH-PROGRAM    TO MA-ABPROGRAM.
           MOVE CA-ERRH-ERROR(2:3) TO DUMP-CODE-SUFFIX.
           MOVE 'TRAP'             TO MA-TR-TYPE.
           MOVE CA-ERRH-REASON-X   TO MA-REAS.
      *
       A-030.
      * If the passed error code is numeric, then it is one
      * originally from CICS, so we need to set up the message
      * wording based on the error trapped. However we must also
      * allow for the fact that the interface to this was not
      * correctly constructed by the calling program.
      *
           IF  CA-ERRH-ERROR-X IS NUMERIC
               IF  CA-ERRH-ERROR > 0000
               AND CA-ERRH-ERROR <= MAXIMUM-RESPONSE
                   MOVE RESPONSE-VALUE(CA-ERRH-ERROR) TO MA-RESP
               ELSE
                   IF  CA-ERRH-ERROR = NOTPOSS-RESPONSE
                       MOVE NOTPOSS-RESP-VAL TO MA-RESP
                   ELSE
                       MOVE BAD-RESPONSE-VALUE TO MA-RESP
                   END-IF
               END-IF
               PERFORM TEST BEFORE VARYING WS-IX FROM 1 BY 1
                UNTIL  CA-ERRH-CICS-FUNCTION = COMMAND-VAL(WS-IX)
                 OR    WS-IX > MAX-COMMANDS
               END-PERFORM
               IF  WS-IX > MAX-COMMANDS
                   MOVE UNKNOWN-COMMAND  TO MA-CMD
               ELSE
                   MOVE COMMAND-NAME(WS-IX) TO MA-CMD
               END-IF
      *
      * If the passed error code is not numeric, then it is one
      * generated by the internal application logic.
      *
           ELSE
               MOVE CA-ERRH-ERROR-X TO MA-RESP
               MOVE 'INTERNAL'      TO MA-CMD
           END-IF.
      *
      * Repeat some common information and complete the error
      * messages and output them as appropriate to the environment.
      *
           MOVE MA-TR          TO MA-XI-VAR.
      *
       END-A-FIRST-ABEND.
           EXIT.
           EJECT.
      *
       B-SECOND-ABEND SECTION.
      *
      * If there is an ABEND code, then this program was invoked
      * by CICS ABEND Handling.
      * In order to ensure that the quiesce of the task after handling
      * an ABEND does not produce erroneous results, the ABEND must be
      * propagated up the LINK chain (if any). Because we only wish to
      * perform the various error handling actions once per ABENDing
      * task, we need to identify that we have entered this logic
      * previously for the same task. This is done by using a special
      * ABEND code when terminating the handler at lower logical levels
      * of a LINK chain via a propagating ABEND. We now check for that.
      * If that is the case we discover, we bypass all of the error
      * processing actions, otherwise we take actions specific to the
      * type of ABEND encountered.
      *
       B-010.
           MOVE AA-ABPROGRAM TO MA-ABPROGRAM.
      *
      * There are a series of System Recovery ABENDs which must all
      * be handled in a similar manner. This involves identifying
      * the program in error and calculating an offset into it for
      * rapid relating to source code.
      *
           IF  AA-ABCODE(1:3) = 'ASR'
               PERFORM BA-ADDITIONAL-ASR-PROCESS
      *
      * If the ABEND is not one of the System Recovery ones,
      * then we produce a different type of message.
      *
           ELSE
               MOVE SPACES TO MA-ASRA-DATA
           END-IF.
      *
       B-020.
      *
      * We then finish off the variable part of the messages
      * and output them as appropriate to the environment.
      *
           MOVE AA-ABCODE(2:3) TO DUMP-CODE-SUFFIX.
           MOVE 'ABEND'        TO MA-AB-TYPE.
           MOVE AA-ABCODE      TO MA-ABCODE.
           MOVE MA-AB          TO MA-XI-VAR.
      *
       END-B-SECOND-ABEND.
           EXIT.
           EJECT.
      *
       BA-ADDITIONAL-ASR-PROCESS SECTION.
      *
      * Because a COBOL Dynamic CALL employs COBOL (LE) services to
      * transfer control from the calling program to the called program,
      * CICS is unaware of its involvement in the task as an executable
      * module. To allow for this possibility we need to determine if
      * the error actually occurred in the module CICS thinks it did.
      * We do this by testing the Program Status Word (PSW) Next
      * Sequential Instruction (NSI) address (the point of interrupt)
      * is in the range of the program CICS has identified as the one
      * in error. If it is not, then we need to search for the program
      * in which the PSW NSI refers.
      *
       BA-010.
           EXEC CICS INQUIRE
                     PROGRAM(AA-ABPROGRAM)
                     ENTRYPOINT(WF-ENTRY-POINT)
                     LOADPOINT(WF-LOAD-POINT)
                     LENGTH(WF-LENGTH)
                     NOHANDLE
           END-EXEC.
      *
           ADD WF-LENGTH TO WF-LOAD-POINT
                     GIVING WF-END-POINT.
      *
       BA-020.
      *
      * Note that the PSW NSI contains an indicator in the high-order
      * bit along with a 31-bit address. If on, the high-order bit
      * would cause the PSW NSI to be treated as a negative number
      * (an impossibility for an address). So we need to manipulate
      * the high-order byte of the PSW NSI in order to eliminate this
      * possibility. Since COBOL has no bit manipulation capabilities
      * the code to do this is a bit convoluted.
      *
           MOVE AA-AP-HIGH TO WF-AP-LOW.
      *
           IF  WF-AP-HALF >= 128
               SUBTRACT 128  FROM WF-AP-HALF
           END-IF.
      *
           MOVE WF-AP-LOW  TO AA-AP-HIGH
      *
           IF  AA-ASRAPSW-NSI > WF-END-POINT
           OR  AA-ASRAPSW-NSI < WF-LOAD-POINT
               MOVE '*UNKNOWN'     TO MA-ABPROGRAM
      *
      * In the event that the error is not in the program CICS has
      * identified as being in error, we need to browse all of the
      * programs known to CICS. We initiate this process by an
      * INQUIRE PROGRAM START command followed by a loop containing
      * an INQUIRE PROGRAM( ) NEXT command until we exhaust the list
      * or we find the program with the problem.
      *
               EXEC CICS INQUIRE PROGRAM START
                                    NOHANDLE
               END-EXEC
               PERFORM UNTIL (MA-ABPROGRAM NOT = '*UNKNOWN')
                       OR   (EIBRESP = DFHRESP(END))
                  EXEC CICS INQUIRE
                            PROGRAM(AA-ABPROGRAM) NEXT
                            ENTRYPOINT(WF-ENTRY-POINT)
                            LOADPOINT(WF-LOAD-POINT)
                            LENGTH(WF-LENGTH)
                            NOHANDLE
                  END-EXEC
                  ADD WF-LENGTH TO     WF-LOAD-POINT
                                GIVING WF-END-POINT
                  IF  AA-ASRAPSW-NSI < WF-END-POINT
                  AND AA-ASRAPSW-NSI > WF-LOAD-POINT
                      MOVE AA-ABPROGRAM   TO MA-ABPROGRAM
                  END-IF
              END-PERFORM
      *
      * When we have exhausted the list or have found the program
      * with the problem, we need to terminate the browse.
      *
              EXEC CICS INQUIRE PROGRAM END
                                NOHANDLE
              END-EXEC
           ELSE
              MOVE AA-ABPROGRAM   TO MA-ABPROGRAM
           END-IF.
      *
       BA-030.
      *
      * Next we need to convert the calculated offset to hexadecimal
      * display data. We initialize fields for this purpose to contain
      * the value in the form "X'nnnnnn'".
      *
           MOVE 'X'   TO MA-AD-OFF(1:1)
           MOVE X'7D' TO MA-AD-OFF(2:1)
           MOVE X'7D' TO MA-AD-OFF(9:1)
      *
           IF  MA-ABPROGRAM = '*UNKNOWN'
               MOVE 'FFFFFF' TO MA-AD-OFF(3:6)
           ELSE
      *
      * The architecture of the System/390 means that the PSW NSI
      * usually identifies the instruction after the one in error,
      * so we need to subtract the instruction length from it first.
      *
               SUBTRACT AA-AI-LTH FROM AA-ASRAPSW-NSI
      *
      * Note that like the PSW NSI, the ENtry Point contains an
      * indicator in the high-order bit along with a 31-bit address.
      * If on, the high-order bit would cause the Entry Point to be
      * treated as a negative number (an impossibility for an address).
      * So we need to manipulate the high-order byte of the Entry
      * Point in order to eliminate this possibility. Since COBOL
      * has no bit manipulation capabilities the code to do this is
      * a bit convoluted.
      *
               MOVE WF-EP-HIGH TO WF-AP-LOW
               IF  WF-AP-HALF >= 128
                   SUBTRACT 128  FROM WF-AP-HALF
               END-IF
               MOVE WF-AP-LOW  TO WF-EP-HIGH
      *
      * Finally we can calculate the offset of the error instruction.
      *
               SUBTRACT WF-ENTRY-POINT
                 FROM   AA-ASRAPSW-NSI
      *
      * Then we can convert it to hexadecimal display format.
      * We convert the last 3 bytes of the value only since
      * no offset can exceed that size.
      *
               PERFORM TEST BEFORE
                       VARYING WS-IX FROM 2 BY 1 UNTIL WS-IX > 4
                   MOVE AA-AP-NSI(WS-IX:1) TO WF-AP-LOW
                   MOVE LOW-VALUE       TO WF-AP-HIGH
                   MOVE ZERO            TO WS-IH
                   MOVE WF-AP-HALF      TO WS-IL
                   PERFORM UNTIL WS-IL < 16
                       SUBTRACT 16 FROM WS-IL
                       ADD       1  TO  WS-IH
                   END-PERFORM
                   ADD 1 TO WS-IH
                   ADD 1 TO WS-IL
                   MOVE HEX-CHAR(WS-IH)
                     TO  MA-AD-OFF(((WS-IX - 2) * 2) + 3:1)
                   MOVE HEX-CHAR(WS-IL)
                     TO  MA-AD-OFF(((WS-IX - 2) * 2) + 4:1)
               END-PERFORM
           END-IF.
      *
       BA-040.
      *
      * Next we put in the interrupt code and an explanation of it.
      *
           MOVE AA-AI-IC    TO MA-AD-IC.
           MOVE AA-AI-IC-LO TO WF-AP-LOW.
           MOVE LOW-VALUE   TO WF-AP-HIGH.
      *
           IF  WF-AP-HALF > 0
           AND WF-AP-HALF < 16
               MOVE EXC-EXPLAIN(WF-AP-HALF)
                TO  MA-AD-EXPLAIN
           END-IF.
      *
       END-BA-ADDITIONAL-ASR-PROCESS.
           EXIT.
           EJECT.
      *
       C-NORMAL-STUFF SECTION.
      *
      * When no ABEND handler is active, CICS performs some default
      * actions when an ABEND is encountered. If an ABEND handler is
      * active, then CICS leaves all of these actions up to the handler.
      * The default actions are to: (1) record information about the
      * problem via a dump; (2) backout any changes made in the current
      * Unit Of Work (UOW); (3) send messages to the user (if associated
      * with a terminal), to transient data and (optionally) to the
      * machine operator; and (4) terminate the task. As a result we
      * perform similar actions in this program.
      *
      *
      * We take a dump but with a code based on the type of error we
      * have encountered. This way we ensure we do not conflict with
      * any CICS dump codes. Note that if these are not desired, they
      * can be suppressed by operational procedures.
      *
       C-010.
           EXEC CICS DUMP TRANSACTION
                     DUMPCODE(DUMP-CODE)
                     NOHANDLE
           END-EXEC.
      *
      * We backout by instructing CICS to roll the current UOW back.
      *
           EXEC CICS SYNCPOINT ROLLBACK
           END-EXEC.
      *
       C-020.
      *
      * We want to include a date and time in our messages so we get
      * CICS to tell us the current time and ask it to format it.
      *
           EXEC CICS ASKTIME
                     ABSTIME(WF-ABSTIME)
           END-EXEC.
      *
           EXEC CICS FORMATTIME
                     ABSTIME(WF-ABSTIME)
                     DDMMYYYY(MA-SI-DATE)
                     DATESEP
                     TIME(MA-SI-TIME)
                     TIMESEP
           END-EXEC.
      *
           MOVE MA-SI-DATE TO MA-XI-DATE
                              DATEEO.
           MOVE MA-SI-TIME TO MA-XI-TIME
                              TIMEEO.
      *
       C-030.
      *
      * By default we produce two message to transient data.
      * We also want to display these at the terminal if we have one.
      *
           MOVE 2 TO WF-ERRH-NUMBER.
      *
           EXEC CICS WRITEQ TD
                     QUEUE(WS-LITS-ERROR-QUEUE)
                     FROM(MA-STD-INFO)
                     NOHANDLE
           END-EXEC.
      *
           EXEC CICS WRITEQ TD
                     QUEUE(WS-LITS-ERROR-QUEUE)
                     FROM(MA-XTR-INFO)
                     NOHANDLE
           END-EXEC.
      *
       C-040.
      *
      * By writing these messages out to the operator, we enable
      * automated operations policies to be implemented.
      * You might not want to do this.
      *
           EXEC CICS WRITE OPERATOR
                     TEXT(MA-STD-INFO)
           END-EXEC.
      *
           EXEC CICS WRITE OPERATOR
                     TEXT(MA-XTR-INFO)
           END-EXEC.
      *
       C-050.
      *
      * If this was a System Recovery type of problem,
      * there is a third message to output.
      *
           IF  MA-ASRA-DATA NOT = SPACES
               MOVE MA-SI-DATE TO MA-AD-DATE
               MOVE MA-SI-TIME TO MA-AD-TIME
               EXEC CICS WRITEQ TD
                         QUEUE(WS-LITS-ERROR-QUEUE)
                         FROM(MA-ASRA-DATA)
                         NOHANDLE
               END-EXEC
               MOVE 3            TO WF-ERRH-NUMBER
               EXEC CICS WRITE OPERATOR
                         TEXT(MA-ASRA-DATA)
               END-EXEC
           END-IF.
      *
       C-060.
      *
      * Only set values in the commarea when the commarea is
      * the correct length.
      *
           IF  EIBCALEN = LENGTH OF DFHCOMMAREA
               MOVE WF-ERRH-NUMBER TO CA-ERRH-NUMBER
               MOVE MA-STD-INFO    TO CA-ERRH-MESSAGE(1)
               MOVE MA-XTR-INFO    TO CA-ERRH-MESSAGE(2)
               MOVE MA-ASRA-DATA   TO CA-ERRH-MESSAGE(3)
           END-IF.
      *
       C-070.
      *
      * If there is a terminal associated with this task,
      * we want to inform the end-user of the problem as well.
      *
           IF  AA-TERM-STARTED
      *
      * However there are some conditions where the terminal is
      * unusable, so we don't want to send anything to it under
      * those circumstances.
      *
               IF  NOT AA-DO-NOT-SEND
                   MOVE MA-SI-SCREEN TO MSGEO(1)
                   MOVE MA-XI-SCREEN TO MSGEO(2)
                   MOVE MA-AD-SCREEN TO MSGEO(3)
                   EXEC CICS SEND
                             MAP('ACCTERR')
                             MAPSET(WS-LITS-MAPSET)
                             FREEKB
                             ERASE
                             NOHANDLE
                   END-EXEC
               END-IF
      *
      * There is one condition where we need to drop
      * the session with the end user's terminal.
      *
               IF  AA-TO-DISCONNECT
                   EXEC CICS ISSUE
                             DISCONNECT
                             NOHANDLE
                   END-EXEC
               END-IF
           END-IF.
      *
       END-C-NORMAL-STUFF.
           EXIT.
