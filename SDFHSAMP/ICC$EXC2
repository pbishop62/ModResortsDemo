//*******************************************************************
//
// Module Name: ICC$EXC2
//
// Description:
//    This sample program demonstrates how to use the C++ exception
//    handling model with the CICS Foundation classes.
//
//
//
//     Licensed Materials - Property of IBM
//
//     "Restricted Materials of IBM"
//
//     5655-Y04
//
//     (C) Copyright IBM Corp. 1998, 2004"
//
//
//
//
// Status = %SP00
//
//-------------------------------------------------------------------
//
// Change Activity:
//
//   $MOD(ICC$EXC2),COMP(CEZANNE),PROD(CICS TS ):
//
//   PN= REASON REL YYMMDD HDXIII : REMARKS
//  $P0= M30492 530 981106 HDGYBS : Creation
//  $P1= M30696 530 981218 HDGYBS : Fix sample c++ programs
//  $P2= D12734 640 041230 HD6KRAH: Language Level
//
//*******************************************************************
#include "icceh.hpp"  //CICS C++ Foundation Classes header files
#include "iccmain.hpp"  //CICS C++ Foundation Classes main() stub

void IccUserControl::run()
{
  IccTerminal* term = terminal();  //Access terminal
  term->erase();  //Clear terminal
  term->sendLine("This is program 'icc$exc2'...");

  try  //Start of C++ TRY block: any exceptions thrown by a method
  {    // called within this try block will result in a 'jump' in the
       // program execution flow to the end of the the try block
       // and a search for a suitable catch block....
    term->sendLine( "Creating IccTermId id1..." );
    IccTermId id1( "1234" );  //Ok File Identifier
    term->sendLine( "Creating IccTermId id2..." );
    IccTermId id2( "12345");  //Invalid File Identifier: exception

  }  //End of TRY block

  catch( IccException& exception )
  {  // Start of C++ CATCH block. We will enter this code block
     // if any method in the above TRY block causes an exception
     // of type IccException to be thrown.  All exceptions thrown
     // by the CICS Foundation Classes are of type IccException.
    term->send( 21, 1, exception.summary() );
  }

  //After CATCH block, execution resumes here...
  term->send( 24,1,"Program 'icc$exc2' complete: Hit PF12 to End" );
  term->waitForAID( IccTerminal::PF12 );
  term->erase();
  term->freeKeyboard();

  return;
}
