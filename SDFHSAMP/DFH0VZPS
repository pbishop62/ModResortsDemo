 CBL CICS('FEPI,COBOL3')
 CBL MAP,OBJ,RENT,NODYNAM,OPT,LIB,DATA(31),LIST,APOST
      *****************************************************************
       IDENTIFICATION DIVISION.
      *****************************************************************
       PROGRAM-ID.                      DFH0VZPS .
       DATE-COMPILED.
      *REMARKS.
      *****************************************************************
      *                                                               *
      * MODULE NAME = DFH0VZPS                                        *
      *                                                               *
      * DESCRIPTIVE NAME = CICS TS  (FEPI) - Sample program:          *
      *                    SLU P, one-out one-in.                     *
      *                    COBOL version                              *
      *                                                               *
      *                                                               *
      *                                                               *
      *       Licensed Materials - Property of IBM                    *
      *                                                               *
      *       "Restricted Materials of IBM"                           *
      *                                                               *
      *       5655-Y04                                                *
      *                                                               *
      *       (C) Copyright IBM Corp. 1993, 2001"                     *
      *                                                               *
      *                                                               *
      *                                                               *
      *                                                               *
      * FUNCTION = This sample program demonstrates using FEPI to     *
      *            obtain information from a back-end IMS system,     *
      *            using SLU P mode and the FEPI CONVERSE command     *
      *            with the POOL option.                              *
      *                                                               *
      * TRANSACTION NAME = CZPS                                       *
      *                                                               *
      * MAP NAME = DFH0MZ4                                            *
      *                                                               *
      *****************************************************************
      *                                                               *
      * OVERVIEW                                                      *
      *                                                               *
      * On the first invocation of the program, a map is sent to the  *
      * front-end terminal.                                           *
      *                                                               *
      * When there is input from the front-end terminal, CICS         *
      * reinvokes the program.  A simple inquiry is made to the       *
      * back-end system - for illustration purposes, it asks the time *
      * - and the answer is displayed on the front-end terminal.      *
      * Because the inquiry requires only a one-out one-in exchange   *
      * with the back-end system, a temporary conversation can be     *
      * used, so the FEPI CONVERSE command with the POOL option is    *
      * used.                                                         *
      *                                                               *
      * When PF3 or CLEAR is received from the front-end terminal,    *
      * the transaction ends.  If there is an error, the front-end    *
      * map is reset.  These situations are detected using HANDLE     *
      * CONDITION.                                                    *
      *                                                               *
      * If the back-end system sends an IMS message, it is sent on    *
      * to the front-end terminal and the transaction ends.           *
      *                                                               *
      * For clarity, error checking is minimal except for the FEPI    *
      * commands.                                                     *
      *                                                               *
      *****************************************************************
      *                                                               *
      * PROGRAM LOGIC                                                 *
      *                                                               *
      *   MAIN procedure:                                             *
      *                                                               *
      *     Test COMMAREA                                             *
      *     If transaction not previously invoked                     *
      *         Call SEND-NEW-MAP                                     *
      *                                                               *
      *     Set up exceptional condition handling:                    *
      *         Map error - SEND-NEW-MAP                              *
      *         CLEAR/PF3 - END-PROG                                  *
      *                                                               *
      *     RECEIVE MAP from front-end terminal                       *
      *                                                               *
      *     Build SLU P data stream to request time from back-end IMS *
      *         system                                                *
      *                                                               *
      *     FEPI CONVERSE to send data stream to the back-end and get *
      *         the message containing the time                       *
      *                                                               *
      *     If IMS message received from back-end system              *
      *         SEND message to front-end terminal                    *
      *         RETURN                                                *
      *                                                               *
      *     Build data for front-end terminal map                     *
      *     SEND map data to front-end terminal                       *
      *     RETURN TRANSID(CZPS) with COMMAREA                        *
      *                                                               *
      *   SEND-NEW-MAP routine:                                       *
      *                                                               *
      *     SEND new map                                              *
      *     RETURN TRANSID(CZPS) with COMMAREA                        *
      *                                                               *
      *   END-PROG routine:                                           *
      *                                                               *
      *     Clear front-end terminal                                  *
      *     RETURN                                                    *
      *                                                               *
      *****************************************************************
      *                                                               *
      * CHANGE ACTIVITY :                                             *
      *                                                               *
      *      $MOD(DFH0VZPS),COMP(MARY),PROD(CICS TS ):                *
      *                                                               *
      *   PN= REASON REL YYMMDD HDXIII : REMARKS                      *
      * $D1= I07206 620 010430 HD7OPJW : Remove support for old compi *
      *   P0= MARY   SP  910911 HDBYAMW: MODULE CREATION              *
      *  $P1= M81655 410 930217 HDDFJLW: Init. Map area with X'00'    *
      *                                                               *
      *****************************************************************
      *
      *
      *****************************************************************
       ENVIRONMENT DIVISION.
      *****************************************************************
      *
      *
      *****************************************************************
       DATA DIVISION.
      *****************************************************************
      *
      *===============================================================*
       WORKING-STORAGE SECTION.
      *===============================================================*
      *
       01  W00-EYECATCHER          PIC X(32)   VALUE
                 '* ***** WORKING STORAGE ***** *'.
      *
       01  W01-PROGID               PIC X(8) VALUE 'DFH0VZPS'.
       01  W01-MAPNAME              PIC X(7) VALUE 'DFH0MZ4'.
      *
       01  W01-UTIME                PIC 9(8) COMP-3.
       01  W01-FTIME                PIC X(8) VALUE SPACES.
       01  W01-FDATE                PIC X(8) VALUE SPACES.
       01  W01-TIME                 PIC X(8) VALUE SPACES.
       01  W01-DATE                 PIC X(8) VALUE SPACES.
       01  W01-TIME-FORMATTED.
           03  W01-TIME-HH          PIC X(2) VALUE SPACES.
           03  FILLER               PIC X    VALUE ':'.
           03  W01-TIME-MM          PIC X(2) VALUE SPACES.
           03  FILLER               PIC X    VALUE ':'.
           03  W01-TIME-SS          PIC X(2) VALUE SPACES.
       01  W01-DATE-FORMATTED.
           03  W01-DATE-DD          PIC X(2) VALUE SPACES.
           03  FILLER               PIC X    VALUE '/'.
           03  W01-DATE-MM          PIC X(2) VALUE SPACES.
           03  FILLER               PIC X    VALUE '/'.
           03  W01-DATE-YY          PIC X(2) VALUE SPACES.
      *
      * W02 holds the data streams for the IMS system.
      *
      * The following data stream is used to run the back-end
      * transaction.
      *
       01  W02-DATASTREAM-OUT.
           05  W02-HEADER-LENGTH    PIC S9(4) COMP VALUE 40.
           05  FILLER               PIC S9(4) COMP VALUE ZEROES.
           05  W02-IMS-TRANSACTION  PIC X(8).
           05  W02-DATE-DDMMYY      PIC X(6)       VALUE SPACES.
           05  W02-TIME-HHMMSS      PIC X(6)       VALUE SPACES.
           05  W02-STATUS           PIC X(8).
           05  FILLER               PIC X(8)       VALUE SPACES.
      *
      * The following area is used to hold the returned data stream.
      *
       01  W02-DATASTREAM-IN1.
           05  W02-IN1-FMH.
               07  FILLER           PIC 9(2).
               07  W02-IMS-MSG-BYTE PIC X.
                   88  W02-GOOD-DATA               VALUE X'00'.
               07  FILLER           PIC 9(2).
           05  W02-IN1-IMS-TRAN     PIC X(8)       VALUE SPACES.
           05  W02-IN1-DATE-DDMMYY.
               07  W02-IN1-DATE-DD  PIC X(2)       VALUE SPACES.
               07  W02-IN1-DATE-MM  PIC X(2)       VALUE SPACES.
               07  W02-IN1-DATE-YY  PIC X(2)       VALUE SPACES.
           05  W02-IN1-TIME-HHMMSS.
               07  W02-IN1-TIME-HH  PIC X(2)       VALUE SPACES.
               07  W02-IN1-TIME-MM  PIC X(2)       VALUE SPACES.
               07  W02-IN1-TIME-SS  PIC X(2)       VALUE SPACES.
           05  W02-IN1-STATUS       PIC X(8).
           05  FILLER               PIC X(8)       VALUE SPACES.
      *
       01  W02-DATASTREAM-IN2 REDEFINES W02-DATASTREAM-IN1.
           05  W02-IN2-FMH.
               07  FILLER           PIC 9(6).
           05  W02-IN2-DATA.
               07  FILLER           PIC X(80).
      *
      * W03 holds the values for CICS commands.
      *
       01  W03-RESP                 PIC S9(8) COMP.
       01  W03-LENGTHRETD           PIC S9(8) COMP.
       01  W03-LENGTHSENT           PIC S9(8) COMP.
       01  W03-SPACE                PIC X VALUE SPACE.
      *
      * W04 determines if there has been a problem.
      *
       01  W04-PROBLEM-FLAG         PIC 9.
       01  W04-NO-PROBLEM           PIC 9 VALUE 0.
       01  W04-PROBLEM              PIC 9 VALUE 1.
      *
      * DFH0BZ4O defines the layout of the front-end terminal map.
      *
       COPY DFH0BZ4O.
      *
      *
      *===============================================================*
      *=       Constants                                             =*
      *===============================================================*
      *
      * DFH0BZCO defines the customizable constants used by the
      * FEPI sample programs.
      *
       COPY DFH0BZCO.
      *
      * DFH0BZMO defines the messages and other text used by the
      * FEPI sample programs.
      *
       COPY DFH0BZMO.
      *
      * DFHSZAPO defines the FEPI RESP2 values.
      *
       COPY DFHSZAPO.
      *
      * DFHAID defines the standard attention identifiers (AIDs).
      *
       COPY DFHAID.
      *
      * DFHBMSCA defines the standard BMS attributes.
      *
       COPY DFHBMSCA.
      *
      *
      *===============================================================*
       LINKAGE SECTION.
      *===============================================================*
      *
      * The COMMAREA is used to pass the transaction ID between
      * invocations of the transaction.
      *
       01  DFHCOMMAREA.
           03  COMMAREA-TRANSID       PIC X(4).
      *
      *
      *****************************************************************
       PROCEDURE DIVISION.
      *****************************************************************
      *
      *===============================================================*
      *=       Main Procedure                                        =*
      *===============================================================*
      *
      * This section controls processing.  Depending on information
      * in the COMMAREA, it sends a new map to the front-end terminal
      * to get input, or it processes that input, building data stream
      * to send to the back-end.  Data is extracted from the returned
      * data stream to send to the front-end terminal.
      *
      * It sets up exceptional condition handling for common errors.
      *
       A-MAIN SECTION.
       A-010.
      *
      * Set flag to show no problems.
      *
           MOVE W04-NO-PROBLEM TO W04-PROBLEM-FLAG.
      *
      * Get front-end date and time.
      *
           EXEC CICS ASKTIME ABSTIME(W01-UTIME)
           END-EXEC.
      *
      * If this transaction has not previously been invoked
      * (no COMMAREA, implying no transaction in progress),
      * send a new map to the front-end terminal and exit.
      *
           IF EIBCALEN IS ZERO
           OR DFH0BZCO-SIMPLE-LUP-TRANSID IS NOT = COMMAREA-TRANSID
               GO TO Z-SEND-NEW-MAP
           END-IF
      *
      * Set up exceptional condition handling for maps.
      *
           EXEC CICS HANDLE CONDITION
               MAPFAIL(Z-SEND-NEW-MAP)
           END-EXEC.
      *
           EXEC CICS HANDLE AID
               PF3(Z-END-PROG)
               CLEAR(Z-END-PROG)
           END-EXEC.
      *
      * RECEIVE map from front-end terminal.
      *
           EXEC CICS RECEIVE MAP(W01-MAPNAME)
               INTO(DFH0MZ4I)
           END-EXEC.
      *
      * Send inquiry to the back-end system.
      * In a more typical case, data from the map would be used
      * in the inquiry.  However, in this illustration,
      * no data is needed.
      *
           PERFORM B-BUILD-DATASTREAM-CONVERSE.
           IF W04-PROBLEM-FLAG = W04-PROBLEM
               GO TO A-099
           END-IF.
      *
      * Extract results from the returned data stream.
      *
           MOVE EIBTRNID               TO LUPTRANO.
           MOVE W02-IN1-TIME-HH        TO W01-TIME-HH.
           MOVE W02-IN1-TIME-MM        TO W01-TIME-MM.
           MOVE W02-IN1-TIME-SS        TO W01-TIME-SS.
           MOVE W01-TIME-FORMATTED     TO LUPTIMEO.
           MOVE W02-IN1-DATE-DD        TO W01-DATE-DD.
           MOVE W02-IN1-DATE-MM        TO W01-DATE-MM.
           MOVE W02-IN1-DATE-YY        TO W01-DATE-YY.
           MOVE W01-DATE-FORMATTED     TO LUPDATEO.
           MOVE W02-IN1-STATUS         TO LUPSTATEO.
      *
      * Send map (with results or message) to the front-end terminal.
      *
       A-099.
           EXEC CICS SEND MAP(W01-MAPNAME)
               FROM(DFH0MZ4O)
               ERASE
           END-EXEC.
      *
      * Exit - with own transaction ID to continue the transaction
      * when the user responds.
      *
           EXEC CICS RETURN
               TRANSID(DFH0BZCO-SIMPLE-LUP-TRANSID)
               COMMAREA(DFH0BZCO-SIMPLE-LUP-TRANSID)
           END-EXEC.
      *
       A-EXIT.
           EXIT.
      *
      *
      *===============================================================*
      *=       Build data stream and CONVERSE routine                =*
      *===============================================================*
      *
      * This section builds the data stream which asks the time from
      * the back-end IMS transaction.  It then performs the FEPI
      * CONVERSE to get the resulting data stream.
      *
       B-BUILD-DATASTREAM-CONVERSE SECTION.
       B-010.
      *
      * Complete the data stream with the front-end time and the
      * back-end transaction name.
      *
           EXEC CICS FORMATTIME ABSTIME(W01-UTIME)
               TIME(W01-TIME)
               DDMMYY(W01-DATE)
           END-EXEC.
           MOVE W01-TIME TO W02-TIME-HHMMSS.
           MOVE W01-DATE TO W02-DATE-DDMMYY.
           MOVE DFH0BZCO-IMS-TRANSID TO W02-IMS-TRANSACTION.
           MOVE DFH0BZMO-STARTED-LITERAL TO W02-STATUS.
      *
      * The FEPI CONVERSE POOL command is used to communicate with the
      * back-end IMS system.
      * The options used are individually discussed in the order they
      * appear in the command.
      *
      * Basic command, specifying that data stream is used.
      *    EXEC CICS FEPI CONVERSE DATASTREAM
      *
      * If TIMEOUT is zero, the command will not time-out.
      * Because this could lead to queueing problems, a
      * suitable application- and system-dependent value should be set.
      * For this sample, the value 20 seconds is used.
      *        TIMEOUT(DFH0BZCO-TIMEOUT)
      *
      * POOL indicates that FEPI is to use a temporary conversation,
      * allocated from the pool indicated to the target named.
      *        POOL(DFH0BZCO-LUP-POOL)
      *        TARGET(DFH0BZCO-TARGET-IMS)
      *
      * The FROM area is where the SEND part of the command obtains its
      * data to transmit.  In this case it is an area initialized with
      * the data stream.
      *        FROM(W02-DATASTREAM-OUT)
      *
      * The FROMLENGTH option is the length of the data area
      * to be transmitted.
      *        FROMFLENGTH(W03-LENGTHSENT)
      *
      * The INTO area is where the data returned by the command is
      * placed.  MAXFLENGTH need not be specified:  it defaults to the
      * declared length of the INTO area.
      *        INTO(W02-DATASTREAM-IN1)
      *
      * And TOFLENGTH is where its length is put.
      *        TOFLENGTH(W03-LENGTHRETD)
      *
      * The RESP option returns DFHRESP(NORMAL) or DFHRESP(INVREQ).
      * In the latter case, further
      * information can be obtained from the RESP2 option.
      *        RESP(W03-RESP)
      *        RESP2(DFHSZ-RESP2)
      *
           MOVE LENGTH OF W02-DATASTREAM-OUT TO W03-LENGTHSENT.
           MOVE LENGTH OF W02-DATASTREAM-IN1 TO W03-LENGTHRETD.
           EXEC CICS FEPI CONVERSE DATASTREAM
               TIMEOUT(DFH0BZCO-TIMEOUT)
               POOL(DFH0BZCO-LUP-POOL)
               TARGET(DFH0BZCO-TARGET-IMS)
               FROM(W02-DATASTREAM-OUT)
               FROMFLENGTH(W03-LENGTHSENT)
               INTO(W02-DATASTREAM-IN1)
               TOFLENGTH(W03-LENGTHRETD)
               RESP(W03-RESP)
               RESP2(DFHSZ-RESP2)
           END-EXEC.
      *
      * Check the response - exit with message if error.
      *
           IF NOT DFHSZ-RESPX-OK
               MOVE W04-PROBLEM TO W04-PROBLEM-FLAG
               MOVE DFH0BZMO-MSG2 TO MMSGO
               GO TO B-099
           END-IF.
      *
      * Check for normal response by testing byte 3 of the output.
      * If non-zero, the FMH is 6 bytes long and the data is an IMS
      * system message - display it and exit.
      *
           IF NOT W02-GOOD-DATA
               MOVE W02-IN2-DATA TO MMSGO
               MOVE W04-PROBLEM TO W04-PROBLEM-FLAG
           END-IF.
      *
       B-099.
           EXIT.
      *
      *
      *===============================================================*
      *=       End program routine                                   =*
      *===============================================================*
      *
      * This section gets control if PF3 or CLEAR is input at the
      * front-end terminal.
      *
      * The program exits after clearing the screen.
      *
       Z-END-PROG SECTION.
      *
       Z-B10.
           EXEC CICS SEND FROM(W03-SPACE)
               LENGTH(0)
               ERASE
           END-EXEC.
      *
           EXEC CICS RETURN
           END-EXEC.
      *
       Z-B99.
           EXIT.
      *
      *
      *===============================================================*
      *=       Send new map routine                                  =*
      *===============================================================*
      *
      * This section gets control if the MAPFAIL condition is raised
      * or if the transaction has not previously been invoked.
      *
      * It sends a new map to the front-end terminal and returns to
      * CICS to await the user input.
      *
       Z-SEND-NEW-MAP SECTION.
       Z-C10.
      *
      * Build map data and send map.
      *                                                         @P1
           MOVE LOW-VALUES TO DFH0MZ4O
      *                                                         @P1
           MOVE EIBTRNID TO LUPTRANO
           EXEC CICS FORMATTIME ABSTIME(W01-UTIME)
                TIME(W01-FTIME) TIMESEP
                DDMMYY(W01-FDATE) DATESEP
           END-EXEC.
           MOVE W01-FTIME        TO LUPTIMEO.
           MOVE DFHBMPRF         TO LUPTIMEA.
           MOVE W01-FDATE        TO LUPDATEO
           MOVE DFHBMPRF         TO LUPDATEA.
           MOVE DFH0BZMO-NOTSTARTED-LITERAL TO LUPSTATEO.
      *
       Z-C20.
           EXEC CICS SEND MAP(W01-MAPNAME)
               FROM(DFH0MZ4O)
               ERASE
           END-EXEC.
      *
           EXEC CICS RETURN
               TRANSID(DFH0BZCO-SIMPLE-LUP-TRANSID)
               COMMAREA(DFH0BZCO-SIMPLE-LUP-TRANSID)
           END-EXEC.
      *
       Z-C99.
           EXIT.
      *
      *
      *****************************************************************
      *        End of program DFH0VZPS                                *
      *****************************************************************
