***********************************************************************
*                                                                     *
*                                                                     *
*            Licensed Materials - Property of IBM                     *
*                                                                     *
*            "Restricted Materials of IBM"                            *
*                                                                     *
*            5655-Y04                                                 *
*                                                                     *
*            (C) Copyright IBM Corp. 1987, 2014"                      *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*   MODULE NAME = DFH$ADSP                                            *
*                                                                     *
* DESCRIPTIVE NAME = CICS/MVS ....                                    *
**       Sample cics xrf overseer routine to display the status       *
**       of cics xrf systems on the mvs console                       *
*                                                                     *
* TRANSACTION NAME = Cxxx                                             *
**       this is not a cics transaction                               *
*                                                                     *
*                                                                     *
*                                                                     *
*        Licensed Materials - Property of IBM                         *
*                                                                     *
*        "Restricted Materials of IBM"                                *
*                                                                     *
*        5655-Y04                                                     *
*                                                                     *
*        (C) Copyright IBM Corp. 1987, 2014"                          *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* STATUS = 7.2.0                                                      *
**       Code separated into separate source  at  2.2.0               *
**       SEE ALSO DFH$AXRO DFH$AGCB DFH$ARES                          *
*                                                                     *
* FUNCTION =                                                          *
**       Sample cics xrf overseer routine to display the status       *
**       of cics xrf systems on the mvs console                       *
*                                                                     *
*      DFH$ADSP CSECT                                                 *
*                                                                     *
*      DFHDSPNA is the entry point. Control comes here when the       *
*      DISPLAY    command is entered. Using information extracted and *
*      Saved in the main CSECT (DFH$AXRO) in the GENDS and EXTDS      *
*      control blocks, a multiline WTO (MLWTO)is built to display the *
*      status of each generic pair of XRF systems.                    *
*      A header line and title line are built and then an information *
*      line for each system is constructed using the DSECT DFHDSP.    *
*      As many of these MLWTOs as necessary, are built to display     *
*      the status of those systems known to the program.              *
*      Control is retuned to the caller (DFH$AXRO).                   *
* NOTES :                                                             *
*    DEPENDENCIES = S/370                                             *
**         MVS/XA only                                                *
*    RESTRICTIONS =                                                   *
**         none                                                       *
*    REGISTER CONVENTIONS =                                           *
**        see the module register equates for a full description      *
**       r9 is used to address the RABDS                              *
**       r12 is used as a base register                               *
*    MODULE TYPE = Executable                                         *
*    PROCESSOR = Assembler                                            *
*    ATTRIBUTES = Read only                                           *
*                                                                     *
*------------------------------------------------------------------ *
*                                                                     *
* ENTRY POINT = DFHDSPNA                                              *
*                                                                     *
*     PURPOSE =                                                       *
**        This is the only entry point                                *
*                                                                     *
*     LINKAGE =                                                       *
**        Called from DFh$AXRO, the main overseer sample csect        *
**        when a DISPLAY has been requested                           *
*                                                                     *
*     INPUT =                                                         *
**        R9 addresses the RABDS                                      *
**        No specific parameters passed                               *
*                                                                     *
*     OUTPUT =                                                        *
**        No return code is set from this routine                     *
*                                                                     *
*     EXIT-NORMAL =                                                   *
**        return to the caller dfh$axro                               *
*        the only WTO output is the Multiline WTO that forms the      *
*        display                                                      *
*     EXIT-ERROR =                                                    *
**        return to the caller dfh$axro                               *
*                                                                     *
*------------------------------------------------------------------ *
*                                                                     *
* EXTERNAL REFERENCES =                                               *
**        none                                                        *
*                                                                     *
*     ROUTINES =                                                      *
**        none                                                        *
*                                                                     *
*     DATA AREAS =                                                    *
**        none                                                        *
*                                                                     *
*     CONTROL BLOCKS =                                                *
**       The internal RABDS and GENDS/EXTDS control blocks are        *
**        referenced, to build the output display.                    *
*                                                                     *
*     GLOBAL VARIABLES =                                              *
**        none                                                        *
*                                                                     *
* TABLES =                                                            *
**        none                                                        *
*                                                                     *
* MACROS =                                                            *
**        none                                                        *
*                                                                     *
*------------------------------------------------------------------ *
*                                                                     *
* DESCRIPTION                                                         *
**        This section should identify the major code elements in     *
**        the module, and describe their purpose. If there is a bug   *
**        in part of the module, this section should enable you to    *
**        quickly find the piece of code responsible for the          *
**        erroneous function.                                         *
**        Major code elements are identified by:                      *
**          a) The names and functions of all internal procedures     *
**          b) Each major block of in line code should be 'labeled'   *
**             with a 'label' in the block comment preceding that    *
**             code element.                                          *
*      DFH$ADSP CSECT                                                 *
*                                                                     *
*      DFHDSPNA is the entry point. Control comes here when the       *
*      DISPLAY    command is entered. Using information extracted and *
*      Saved in the main CSECT (DFH$AXRO) in the GENDS and EXTDS      *
*      control blocks, a multiline WTO (MLWTO)is built to display the *
*      status of each generic pair of XRF systems.                    *
*      A header line and title line are built and then an information *
*      line for each system is constructed using the DSECT DFHDSP.    *
*      As many of these MLWTOs as necessary, are built to display     *
*      the status of those systems known to the program.              *
*      Control is retuned to the caller (DFH$AXRO).                   *
*                                                                     *
*                                                                     *
*------------------------------------------------------------------ *
*                                                                     *
* CHANGE ACTIVITY :                                                   *
**                                                                    *
*        $MOD(DFH$ADSP),COMP(XRF),PROD(CICS TS ):                     *
*                                                                     *
*     PN= REASON REL YYMMDD HDXIII : REMARKS                          *
*     P0= REASON REL YYMMDD HDXIII : Implicit flag.                   *
**        This flag should be defined when the module is created.    **
**        Lines with no flags will be assumed to belong to this      **
**        reason code. 'P' will usually be 'L' but may be 'D','H'etc.**
*    $01= A28493 210 881130 HD1HSS : MIGRATE APAR PL28493             *
*    $02  Reserved for APAR fix                                       *
*    $03  Reserved for APAR fix                                       *
*    $D1  Reserved for DCR                                            *
*    $D2  Reserved for DCR                                            *
*    $D3  Reserved for DCR                                            *
*    $H1  Reserved for hardware support                               *
*    $H2  Reserved for hardware support                               *
*    $H3  Reserved for hardware support                               *
*    $L1  Reserved for line item                                      *
*    $L2  Reserved for line item                                      *
*    $L3  Reserved for line item                                      *
*     P0= REASON REL YYMMDD HDXIII : Implicit flag.                   *
*    $P1= M51001 310 870830 HD1HSS : SEPARATE OVERSEER CODE           *
*    $P2  Reserved for PTM                                            *
*    $P3  Reserved for PTM                                            *
*                                                                     *
***********************************************************************
*        COPY DSECTS
         COPY DFH$XRDS                  CICS/XRF OVERSEER SAMPLE
R0       EQU   0
R1       EQU   1
R2       EQU   2                   WORK REG
R3       EQU   3                   WORK REG
R4       EQU   4                   WORK REG
R5       EQU   5                   WORK REG
R6       EQU   6                   WORK REG
R7       EQU   7
OSDBAR   EQU   7                   BASE REG FOR OSD ENTRY
GENBAR   EQU   8                   BASE REG FOR GEN ENTRY
RABBAR   EQU   9                   BASE REG FOR RAB
R10      EQU   10                  CODE BASE REG1 FOR MAIN MODULE
R11      EQU   11                  CODE BASE REG2 FOR MAIN MODULE
R12      EQU   12                  BASE REG FOR THIS (SUB) ROUTINE
R13      EQU   13
R14      EQU   14
R15      EQU   15
DFH$ADSP CSECT
***********************************************************************
*
*        DISPLAY CURRENT STATUS OF (OPENED) GENERIC SYSTEMS
*
*        THIS CODE WILL FORM A MULTI-LINE WTO TO DISPLAY THE
*        STATUS OF EACH OPENED GENERIC SYSTEM. THE OUTPUT IS BUILT AS
*        BLOCKS OF 10 LINES (THE MAX ALLOWED) UNTIL ALL GENERIC
*        ENTRIES HAVE BEEN DISPLAYED.
*
***********************************************************************
         ENTRY DFHDSPNA
         DFHVM $ADSP,ENTRY=DFHDSPNA
DFHDSPNA DS    0H
         SAVE  (14,12)
         BALR  R12,0
         USING *,R12
         USING RABDS,RABBAR     ADDRESS THE RAB
         USING GENDS,GENBAR     ADDRESS THE GEN SYSTEM
         LA    R1,RABSAV2          ADDRESS SAVE AREA FOR THIS CODE
         ST    R1,8(,R13)          FWD PTR
         ST    R13,4(,R1)          BKWD POINTER
         LR    R13,R1              POINT AT OUR SAVE AREA
*--------------------------------------
*        DISPLAY THE STATUS OF EACH GEN SYSTEM
*
*        R3 IS USED TO ADDRESS THE WTO BUFFER AS IT IS BUILT
*        R6 IS USED TO ENSURE WE ONLY BUILD 10 LINES PER WTO
*        INCLUDING HEAD AND TAIL
*        R2  IS USED TO COUNT THE ACTUAL NUMBER OF LINES BUILT
*        INCLUDING HEAD AND TAIL
*        GENBAR ADDRESSES THE CURRENT GENERIC SYSTEM
*        R7 IS USED TO ADDRESS THE EXTRACTED DATA FROM DFHWOS
DISP     DS    0H
         L     GENBAR,RABGENF      ADDRESS THE FIRST GEN SYSTEM
FRSTLINE DS    0H
         SR    R2,R2               USE R2 TO COUNT THE NO OF LINES
         LA    R3,RABWTORA          ADDRESS WTO/WTOR BUFFER
         MVC   0(LENHDR,R3),HDRWTO     MOVE IN HDR WTO BITS
         LA    R2,1(0,R2)          COUNT IT
         MVC   CECIDOFF(4,R3),RABSMID  MOVE THIS CECS ID TO MSG
         LA    R3,MIDOFFS(0,R3)    ADDRESS THE FIRST DATA PORTION
         LA    R6,8(0,0)          MAX COUNT 8+2 FOR MLWTO
NEXTLINE DS    0H
         LTR   GENBAR,GENBAR       IS IT THE LAST ONE ?
         BZ    LASTLINE            YES, PUT OUT THE LAST LINE
         MVC   0(LENMID,R3),HDRWTO+MIDOFFS     MOVE IN MIDDLE WTO BITS
         LA    R3,4(0,R3)          POINT AT THE DATA PORTION OF THE WTO
*                                  BUILD MESSAGE
         USING DSPDS,R3
         L     R7,GENEXDTP         POINT AT THE EXTRACTED DATA
         USING EXTDS,R7
         MVC   DSPGEN,GENNAME      MOVE IN GENNAME
*        ANY ACTIVE DATA
         TM    GENSTAT1,GENACTDT   ANY ACTIVE DATA ?
         BNO   DSPBK               CHECK FOR BACKUP DATA
         XC    DSPACT,DSPACT
         MVC   DSPJOBA,EXAJOBN     MOVE IN JOBNAME
         MVC   DSPAPPA,EXASAPPL    MOVE IN APPLID
         MVC   DSPCPUA,EXASMID     MOVE IN SMF ID
         MVC   DSPSTATA,EXASTAT    MOVE IN STATUS OF GEN SYS
         TM    GENCJSA,GENJESX   ACTIVE UNDER JES?
         BNO   DSPBK               NO
         MVC   DSPJSXA,=C'X'       YES INDICATE IT
*        ANY BACKUP DATA
DSPBK    DS    0H
         TM    GENSTAT1,GENBKPDT   ANY BACKUP DATA ?
         BNO   DSPNO               NOTHING TO DISPLAY
         XC    DSPBKP,DSPBKP
         MVC   DSPJOBB,EXBJOBN     MOVE IN JOBNAME
         MVC   DSPAPPB,EXBSAPPL    MOVE IN APPLID
         MVC   DSPCPUB,EXBSMID     MOVE IN SMF ID
         MVC   DSPSTATB,EXBSTAT    MOVE IN STATUS OF GEN SYS
         TM    GENCJSB,GENJESX   ACTIVE UNDER JES?
         BNO   TKOVCHK             NO, BUT STILL DO TKOVCHK
         MVC   DSPJSXB,=C'X'       YES INDICATE IT
TKOVCHK  DS    0H
         CLC   EXBJOBN,EXAJOBN     ACTIVE NAME=BACKUP NAME         @01C
         BNE   DSPNORM             NO,  CONTINUE NORMALLY          @01C
         CLC   EXBJESJ,EXAJESJ     ACTIVE JOBID=BACKUP JOBID       @01C
         BNE   DSPNORM             NO,  CONTINUE NORMALLY          @01C
         MVC   DSPJSXB,=C' '       YES, ENSURE DISPLAY IS BLANK    @01C
         MVC   DSPSTATB,=C'OLD '   AND MANIPULATE TO 'OLD' STATUS  @01C
DSPNORM  DS    0H                  BACK TO MAINLINE                @01C
DSPNO    DS    0H
         DROP  R3
         DROP  R7
         LA    R2,1(0,R2)          COUNT IT
         L     GENBAR,GENNXGEN            ADDRESS NEXT ONE IN CHAIN
         LA    R3,LENMID-4(0,R3)          BUMP TO NEXT WTO SLOT
*                                         ALLOW FOR 4 ADDED EARLIER
         BCT   R6,NEXTLINE
LASTLINE DS    0H
*        R3 POINTS TO WHERE THE LAST WTO BITS SHOULD GO
         MVC   0(LENLAST,R3),HDRWTO+LASTOFFS    MOVE IN LAST WTO BITS
         LA    R2,1(0,R2)          COUNT IT
         STC   R2,RABWTORA+NLOFFS SAVE THE TOTAL NUMBER OF LINES
         SR    R0,R0               CLEAR R0 FOR MLWTO
         WTO   ,                                                       *
               MF=(E,RABWTORA)     PUT IT OUT
         LTR   GENBAR,GENBAR       ARE WE FINISHED?  LAST IN CHAIN ?
         BZ    DSPRET              YES, RETURN
         B     FRSTLINE            NO, BUILD NEXT DISPLAY
*
*        END OF DISPLAY
*
DSPRET   DS    0H                  YES RETURN TO THE MAIN CODE
         L     R13,RABSAV2+4       RESTORE CALLERS SAVE AREA
         RETURN (14,12)            RESTORE CALLERS REGS
*
*        MLWTO SKELETONS
*
HDRWTO   WTO   ('OVERSEER:CPU SSSS DISPLAY ',C),                       *
               ('GEN-APP  ACT-JOB  ACT-APP  ACPU A-ST  BKP-JOB  BKP-APP*
                 BCPU B-ST ',L),                                       *
               ('          ------NO ACTIVE DATA------  ------NO BACKUP *
                DATA-----  ',D),                                       *
               (,E),                                                   *
               ROUTCDE=(1),                                            *
               MF=L
LENHDR   EQU   108                 LENGTH OF THE HDR BITS
NLOFFS   EQU   37                  OFFSET TO THE NUMBER OF LINES
LENMID   EQU   70                  LENGTH OF MIDDLE BITS
MIDOFFS  EQU   LENHDR              OFFSET OF MIDDLE BITS
LENLAST  EQU   4                   LENGTH OF LAST BITS
LASTOFFS EQU   LENHDR+LENMID       OFFSET OF LAST BIT
CECIDOFF EQU   17                  OFFSET TO CEC ID
         LTORG
         DROP  R12
         END
