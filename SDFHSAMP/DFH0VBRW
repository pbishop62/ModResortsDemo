       CBL CICS('COBOL3')
      *****************************************************************
      *                                                               *
      * MODULE NAME = DFH0VBRW                                        *
      *                                                               *
      * DESCRIPTIVE NAME = Browse Handler for Sample Application      *
      *                                                               *
      *                                                               *
      *                                                               *
      *     Licensed Materials - Property of IBM                      *
      *                                                               *
      *     "Restricted Materials of IBM"                             *
      *                                                               *
      *     5655-Y04                                                  *
      *                                                               *
      *     (C) Copyright IBM Corp. 1990, 1991"                       *
      *                                                               *
      *                                                               *
      *                                                               *
      *                                                               *
      * STATUS = 7.2.0                                                *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      * DESCRIPTION :                                                 *
      *                                                               *
      *  This module performs the processing when a user wants to     *
      *  BROWSE a particular record or when a user accessing a list   *
      *  only retrieves a single record with the supplied criteria    *
      *  It is initiated via a transfer control either from the       *
      *  DFH0VOPN popup module or the DFH0VLST base module.           *
      *                                                               *
      *  For a full description of the program operation see the      *
      *  CICS/ESA Book entitled "Sample Applications Guide" Version 3 *
      *  Release 2, Document Number SC33-0731.                        *
      *                                                               *
      *---------------------------------------------------------------*
      *                                                               *
      * CHANGE ACTIVITY :                                             *
      *                                                               *
      *     $MOD(DFH0VBRW),COMP(SAMPLES),PROD(CICS TS ):              *
      *                                                               *
      *     PN= REASON REL YYMMDD HDXIII : REMARKS                    *
      *    $P0= .      320 900906        : Created.                   *
      *    $P1= M90474 330 910807 HDBWSH : Prologue fixed.            *
      *                                                               *
      *****************************************************************
       IDENTIFICATION DIVISION.
       PROGRAM-ID. DFH0VBRW.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       77  ONX                             PIC X          VALUE '1'.
       77  OFFX                            PIC X          VALUE '0'.
       77  ITEM-1                          PIC S9(4) COMP VALUE +1.
       77  BRW-RESP                        PIC S9(4) COMP VALUE +0.
       01  PREVIOUS-LIST-ENTRY-FND-SW      PIC X          VALUE '0'.
           88  PREVIOUS-LIST-ENTRY-FOUND   VALUE '1'.
       01  PREVIOUS-BASE-FOUND-SW          PIC X          VALUE '0'.
           88  PREVIOUS-BASE-FOUND         VALUE '1'.
       01  ITEMERR-SW                      PIC X          VALUE '0'.
           88  ITEMERR-RAISED              VALUE '1'.
       01  QIDERR-SW                       PIC X          VALUE '0'.
           88  QIDERR-RAISED               VALUE '1'.
           COPY DFH0BCA.
           COPY DFH0BHT.
           COPY DFH0BTSQ.
           COPY DFH0BCR.
           COPY DFH0BFKT.
           COPY DFH0BMSG.
           COPY DFH0BRW.
           COPY DFHAID.
           COPY DFHBMSCA.
       LINKAGE SECTION.
       01  DFHCOMMAREA.
           05  COMM-DATA-AREA              PIC X(200).
       PROCEDURE DIVISION.

       MAIN-SECTION SECTION.

           MOVE DFHCOMMAREA TO WS-HOLD-AREA.

           MOVE LOW-VALUES TO BRWI.

           EVALUATE TRUE
              WHEN COMM-STATE-IND = TRANSFER-CONTROL-IND
               EVALUATE TRUE
                  WHEN EIBAID = DFHPF3
                  OR   EXIT-8
                   PERFORM PROCESS-F3
                  WHEN EIBAID = DFHPF10
                   PERFORM PROCESS-F10
                  WHEN EIBAID = DFHPF12
                   PERFORM PROCESS-F12
                  WHEN EIBAID = DFHCLEAR
                   PERFORM PROCESS-CLEAR
                  WHEN EIBAID = DFHENTER
                  OR   EIBAID = DFHPF5
                   PERFORM READ-TRACK-TSQ
                   ADD +1 TO COMM-DEPTH-CTR
                             COMM-PANEL-CTR
                   MOVE COMM-BASE-IND TO TRACK-NAME(COMM-DEPTH-CTR)
                   MOVE COMM-PANEL-TYPE TO TRACK-TYPE(COMM-DEPTH-CTR)
                   MOVE COMM-PANEL-CTR TO
                                 TRACK-PANEL-ITEM-NO(COMM-DEPTH-CTR)
                   MOVE COMM-ACTION-SELECTED TO
                                 TRACK-ACTION(COMM-DEPTH-CTR)
                   MOVE COMM-RECORD-ITEM-CTR TO
                                 TRACK-RECORD-ITEM-NO(COMM-DEPTH-CTR)
                   PERFORM READ-PANEL-TSQ
                   MOVE LOW-VALUES TO BRWI
                   MOVE SPACE TO COMM-STATE-IND
                   PERFORM REWRITE-TRACK-TSQ
                   PERFORM BUILD-PANEL
                   PERFORM REWRITE-PANEL-TSQ
                   MOVE -1 TO SNAMEB1L
                   PERFORM SEND-BRW-SYMB-CURS-PANEL
                   PERFORM RETURN-AC25
               END-EVALUATE
              WHEN COMM-STATE-IND = RESET-PANEL-IND
               IF EXIT-8
                   PERFORM PROCESS-F3
               END-IF
               PERFORM READ-PANEL-TSQ
               PERFORM SEND-BRW-SYMB-CURS-PANEL
               MOVE SEARCH-SELECTION-IND TO COMM-SEARCH-LEVEL-REQD
               PERFORM SEARCH-TABLE
               PERFORM XCTL-NEXT-PROGRAM
             WHEN OTHER
               CONTINUE
           END-EVALUATE.

           EXEC CICS RECEIVE MAP('BRW')
                             MAPSET('DFH0BRW')
                             INTO(BRWI)
                             RESP(COMM-RESPONSE)
                        END-EXEC.

           EVALUATE COMM-RESPONSE
              WHEN DFHRESP(MAPFAIL)
               CONTINUE,
              WHEN DFHRESP(NORMAL)
               CONTINUE,
              WHEN OTHER
               MOVE 'BRW01' TO COMM-CALL-NUMBER
               MOVE EIBRSRCE TO COMM-RESOURCE
               MOVE ABEND-HANDLER TO COMM-NEXT-PROGRAM
               PERFORM XCTL-NEXT-PROGRAM
           END-EVALUATE.

           EVALUATE TRUE
             WHEN EIBAID = DFHPF1
              PERFORM PROCESS-F1,
             WHEN EIBAID = DFHPF3
              PERFORM PROCESS-F3,
             WHEN EIBAID = DFHPF5
             AND  LIST-PANEL-PROCESSING
              IF BRWIDO = 'BRW0'
                  PERFORM PROCESS-INVALID-FKEY
              END-IF
              MOVE FK5 TO COMM-SELECTION
              MOVE SEARCH-FK-IND TO COMM-SEARCH-LEVEL-REQD
              PERFORM SEARCH-TABLE
              PERFORM XCTL-NEXT-PROGRAM
             WHEN EIBAID = DFHPF10
              PERFORM PROCESS-F10,
             WHEN EIBAID = DFHPF12
              PERFORM PROCESS-F12,
             WHEN EIBAID = DFHCLEAR
              PERFORM PROCESS-CLEAR,
             WHEN OTHER
              IF EIBAID = DFHENTER
                  CONTINUE,
              ELSE
                  PERFORM PROCESS-INVALID-FKEY,
              END-IF
           END-EVALUATE.

      * Start of code for CICS 3.2 using BMS CURLOC=YES
           IF BRWFFLDF = DFHBMCUR OR DFHBMEC
               MOVE FILE-DISPLAYED TO COMM-PULLDOWN-IND,
                                      COMM-ACTION-SELECTED
               PERFORM PULLDOWN-FROM-ACTION-BAR
           ELSE IF BRWHFLDF = DFHBMCUR OR DFHBMEC
                    MOVE HELP-DISPLAYED TO COMM-PULLDOWN-IND,
                                           COMM-ACTION-SELECTED
                    PERFORM PULLDOWN-FROM-ACTION-BAR
                ELSE
                    MOVE SPACE TO COMM-PULLDOWN-IND
                END-IF
           END-IF.
      * End of code for CICS 3.2 using BMS CURLOC=YES

      * Start of code for all releases using EIBCPOSN
      *    IF EIBCPOSN NOT < 3 AND NOT > 7
      *        MOVE FILE-DISPLAYED TO COMM-PULLDOWN-IND,
      *                               COMM-ACTION-SELECTED
      *        PERFORM PULLDOWN-FROM-ACTION-BAR
      *    ELSE IF EIBCPOSN NOT < 9 AND NOT > 13
      *             MOVE HELP-DISPLAYED TO COMM-PULLDOWN-IND,
      *                                    COMM-ACTION-SELECTED
      *             PERFORM PULLDOWN-FROM-ACTION-BAR
      *         ELSE
      *             MOVE SPACE TO COMM-PULLDOWN-IND
      *         END-IF
      *    END-IF.
      * End of code for all releases using EIBCPOSN

           PERFORM READ-PANEL-TSQ.
           MOVE M012 TO BRWMSGO.
           MOVE -1 TO SNAMEB1L.
           PERFORM SEND-BRW-SYMB-CURS-PANEL.
           PERFORM SEND-CONTROL-ALARM.
           PERFORM RETURN-AC25.

           GOBACK.

       END-MAIN-SECTION.
           EXIT.

       PROCESS-F1 SECTION.

      * Start of code for CICS 3.2 using BMS CURLOC=YES
           EVALUATE TRUE
              WHEN BRWFFLDF = DFHBMEC OR DFHBMCUR
               MOVE HLP-FFLD TO COMM-HELP-FIELD
              WHEN BRWHFLDF = DFHBMEC OR DFHBMCUR
               MOVE HLP-HFLD TO COMM-HELP-FIELD
              WHEN ACCNOB1F = DFHBMEC OR DFHBMCUR
               MOVE HLP-ACCNO TO COMM-HELP-FIELD
              WHEN SNAMEB1F = DFHBMEC OR DFHBMCUR
               MOVE HLP-SNAME TO COMM-HELP-FIELD
              WHEN FNAMEB1F = DFHBMEC OR DFHBMCUR
               MOVE HLP-FNAME TO COMM-HELP-FIELD
              WHEN ADDRB1F = DFHBMEC OR DFHBMCUR
               MOVE HLP-ADDR TO COMM-HELP-FIELD
              WHEN TOWNB1F = DFHBMEC OR DFHBMCUR
               MOVE HLP-TOWN TO COMM-HELP-FIELD
              WHEN COUNTB1F = DFHBMEC OR DFHBMCUR
               MOVE HLP-COUNT TO COMM-HELP-FIELD
              WHEN PCODEB1F = DFHBMEC OR DFHBMCUR
               MOVE HLP-PCODE TO COMM-HELP-FIELD
              WHEN CRLIMB1F = DFHBMEC OR DFHBMCUR
               MOVE HLP-CRLIM TO COMM-HELP-FIELD
              WHEN ACCSTB1F = DFHBMEC OR DFHBMCUR
               MOVE HLP-ACCST TO COMM-HELP-FIELD
              WHEN COMMB1F = DFHBMEC OR DFHBMCUR
              OR   COMMB2F = DFHBMEC OR DFHBMCUR
              OR   COMMB3F = DFHBMEC OR DFHBMCUR
               MOVE HLP-COMM TO COMM-HELP-FIELD
              WHEN OTHER
               MOVE SPACE TO COMM-HELP-FIELD
           END-EVALUATE.
      * End of code for CICS 3.2 using BMS CURLOC=YES

      * Start of code for all releases using EIBCPOSN
      *    EVALUATE TRUE
      *       WHEN EIBCPOSN NOT < 3 AND NOT > 7
      *        MOVE HLP-FFLD TO COMM-HELP-FIELD
      *       WHEN EIBCPOSN NOT < 9 AND NOT > 13
      *        MOVE HLP-HFLD TO COMM-HELP-FIELD
      *       WHEN EIBCPOSN NOT < 581 AND NOT > 588
      *        MOVE HLP-ACCNO TO COMM-HELP-FIELD
      *       WHEN EIBCPOSN NOT < 661 AND NOT > 680
      *        MOVE HLP-SNAME TO COMM-HELP-FIELD
      *       WHEN EIBCPOSN NOT < 741 AND NOT > 760
      *        MOVE HLP-FNAME TO COMM-HELP-FIELD
      *       WHEN EIBCPOSN NOT < 821 AND NOT > 850
      *        MOVE HLP-ADDR TO COMM-HELP-FIELD
      *       WHEN EIBCPOSN NOT < 901 AND NOT > 920
      *        MOVE HLP-TOWN TO COMM-HELP-FIELD
      *       WHEN EIBCPOSN NOT < 981 AND NOT > 1000
      *        MOVE HLP-COUNT TO COMM-HELP-FIELD
      *       WHEN EIBCPOSN NOT < 1061 AND NOT > 1070
      *        MOVE HLP-PCODE TO COMM-HELP-FIELD
      *       WHEN EIBCPOSN NOT < 1141 AND NOT > 1144
      *        MOVE HLP-CRLIM TO COMM-HELP-FIELD
      *       WHEN EIBCPOSN = 1221
      *        MOVE HLP-ACCST TO COMM-HELP-FIELD
      *       WHEN EIBCPOSN NOT < 1301 AND NOT > 1330
      *       OR   EIBCPOSN NOT < 1381 AND NOT > 1410
      *       OR   EIBCPOSN NOT < 1461 AND NOT > 1490
      *        MOVE HLP-COMM TO COMM-HELP-FIELD
      *       WHEN OTHER
      *        MOVE SPACE TO COMM-HELP-FIELD
      *    END-EVALUATE.
      * End of code for all releases using EIBCPOSN

           MOVE FK1 TO COMM-SELECTION.
           MOVE EIBCPOSN TO COMM-HELP-CPOSN.
           MOVE SEARCH-FK-IND TO COMM-SEARCH-LEVEL-REQD.
           PERFORM SEARCH-TABLE.
           PERFORM XCTL-NEXT-PROGRAM.

       PROCESS-F1-EXIT.
           EXIT.

       PROCESS-F3 SECTION.

           PERFORM READ-TRACK-TSQ.
           IF COMM-STATE-IND = SPACE
               MOVE TRACK-PANEL-ITEM-NO(COMM-DEPTH-CTR) TO
                                                   COMM-PANEL-CTR
           END-IF.
           SUBTRACT +1 FROM COMM-DEPTH-CTR.
           IF TRACK-TYPE(COMM-DEPTH-CTR) = POPUP-PANEL-IND
               MOVE COMM-DEPTH-CTR TO COMM-CURR-CTR
               PERFORM FIND-PREVIOUS-BASE UNTIL(PREVIOUS-BASE-FOUND)
               MOVE TRACK-NAME(COMM-DEPTH-CTR) TO COMM-BASE-IND
               MOVE TRACK-ACTION(COMM-DEPTH-CTR) TO COMM-ACTION-SELECTED
               MOVE SEARCH-ACTION-BASE-IND TO COMM-SEARCH-LEVEL-REQD
               PERFORM SEARCH-TABLE
               MOVE COMM-CURR-CTR TO COMM-DEPTH-CTR
               MOVE TRACK-NAME(COMM-DEPTH-CTR) TO COMM-SELECTION
               MOVE SEARCH-SELECTION-IND TO COMM-SEARCH-LEVEL-REQD
               PERFORM SEARCH-TABLE
           ELSE
               MOVE TRACK-NAME(COMM-DEPTH-CTR) TO COMM-BASE-IND
               MOVE TRACK-TYPE(COMM-DEPTH-CTR) TO COMM-PANEL-TYPE
               MOVE TRACK-ACTION(COMM-DEPTH-CTR) TO COMM-ACTION-SELECTED
               MOVE SEARCH-ACTION-BASE-IND TO COMM-SEARCH-LEVEL-REQD
               PERFORM SEARCH-TABLE
           END-IF.
           PERFORM XCTL-NEXT-PROGRAM.

       PROCESS-F3-EXIT.
           EXIT.

       PROCESS-F10 SECTION.

      * Start of code for CICS 3.2 using BMS CURLOC=YES
           IF TRANSFER-CONTROL
               PERFORM READ-PANEL-TSQ
               MOVE -1 TO SNAMEB1L
               MOVE SPACE TO COMM-STATE-IND
               PERFORM SEND-BRW-SYMB-CURS-PANEL
               PERFORM RETURN-AC25
           ELSE
               EVALUATE TRUE
                  WHEN BRWFFLDF = DFHBMCUR OR DFHBMEC
                  OR   BRWHFLDF = DFHBMCUR OR DFHBMEC
                   MOVE -1 TO SNAMEB1L
                  WHEN OTHER
                   MOVE -1 TO BRWFFLDL
               END-EVALUATE
               PERFORM SEND-BRW-PANEL-DATAONLY
               PERFORM RETURN-AC25
           END-IF.
      * End of code for CICS 3.2 using BMS CURLOC=YES

      * Start of code for all releases using EIBCPOSN
      *    IF TRANSFER-CONTROL
      *        PERFORM READ-PANEL-TSQ
      *        MOVE -1 TO SNAMEB1L
      *        MOVE SPACE TO COMM-STATE-IND
      *        PERFORM SEND-BRW-SYMB-CURS-PANEL
      *        PERFORM RETURN-AC25
      *    ELSE
      *        EVALUATE TRUE
      *           WHEN EIBCPOSN NOT < 3 AND NOT > 7
      *           OR   EIBCPOSN NOT < 9 AND NOT > 13
      *            MOVE -1 TO SNAMEB1L
      *           WHEN OTHER
      *            MOVE -1 TO BRWFFLDL
      *        END-EVALUATE
      *        PERFORM SEND-BRW-PANEL-DATAONLY
      *        PERFORM RETURN-AC25
      *    END-IF.
      * End of code for all releases using EIBCPOSN

       PROCESS-F10-EXIT.
           EXIT.

       PROCESS-F12 SECTION.

           IF TRANSFER-CONTROL
               PERFORM REBUILD-SCREEN
               IF COMM-PANEL-CTR = COMM-CURR-CTR
               AND COMM-PULLDOWN-IND = SPACE
                   MOVE SPACE TO COMM-STATE-IND
                   PERFORM RETURN-AC25
               ELSE
                   PERFORM ROUTE-TO-NEXT-PROGRAM
               END-IF
           ELSE
               IF LIST-PANEL-PROCESSING
                   PERFORM FIND-PREVIOUS-LIST-ENTRY
                                    UNTIL(PREVIOUS-LIST-ENTRY-FOUND
                                    OR    ITEMERR-RAISED)
                   MOVE OFFX TO ITEMERR-SW
                   SUBTRACT +1 FROM COMM-ITEMS-PROCESSED
               END-IF
               PERFORM READ-TRACK-TSQ
               MOVE TRACK-TYPE(COMM-DEPTH-CTR) TO COMM-PANEL-TYPE
               MOVE SPACE TO TRACK-NAME(COMM-DEPTH-CTR)
                             TRACK-TYPE(COMM-DEPTH-CTR)
                             TRACK-ACTION(COMM-DEPTH-CTR)
               MOVE +0    TO TRACK-PANEL-ITEM-NO(COMM-DEPTH-CTR)
                             TRACK-RECORD-ITEM-NO(COMM-DEPTH-CTR)
               SUBTRACT +1 FROM COMM-DEPTH-CTR
               MOVE TRACK-PANEL-ITEM-NO(COMM-DEPTH-CTR) TO COMM-CURR-CTR
               PERFORM FIND-PREVIOUS-BASE UNTIL(PREVIOUS-BASE-FOUND)
               PERFORM REWRITE-TRACK-TSQ
               MOVE TRACK-NAME(COMM-DEPTH-CTR) TO COMM-BASE-IND
               MOVE TRACK-ACTION(COMM-DEPTH-CTR) TO COMM-ACTION-SELECTED
               MOVE TRACK-PANEL-ITEM-NO(COMM-DEPTH-CTR) TO
                                                  COMM-PANEL-CTR
               EVALUATE TRUE
                  WHEN(TRACK-RECORD-ITEM-NO(COMM-DEPTH-CTR) = +1 OR +0)
                   MOVE +1 TO COMM-RECORD-ITEM-CTR
                  WHEN(TRACK-RECORD-ITEM-NO(COMM-DEPTH-CTR) > +1)
                   MOVE TRACK-RECORD-ITEM-NO(COMM-DEPTH-CTR) TO
                                                 COMM-RECORD-ITEM-CTR
               END-EVALUATE
               MOVE SEARCH-ACTION-BASE-IND TO COMM-SEARCH-LEVEL-REQD
               PERFORM SEARCH-TABLE
               PERFORM XCTL-NEXT-PROGRAM
           END-IF.

       PROCESS-F12-EXIT.
           EXIT.

       PROCESS-CLEAR SECTION.

           IF TRANSFER-CONTROL
               PERFORM REBUILD-SCREEN
               IF COMM-PANEL-CTR = COMM-CURR-CTR
                   PERFORM RETURN-AC25
               ELSE
                   PERFORM ROUTE-TO-NEXT-PROGRAM
               END-IF
           ELSE
               PERFORM REBUILD-SCREEN
               PERFORM RETURN-AC25
           END-IF.

       PROCESS-CLEAR-EXIT.
           EXIT.

       FIND-PREVIOUS-BASE SECTION.

           IF TRACK-TYPE(COMM-DEPTH-CTR) = BASE-PANEL-IND
               MOVE ONX TO PREVIOUS-BASE-FOUND-SW
           ELSE
               SUBTRACT +1 FROM COMM-DEPTH-CTR
           END-IF.

       FIND-PREVIOUS-BASE-EXIT.
           EXIT.

       REBUILD-SCREEN SECTION.

           PERFORM READ-PANEL-TSQ.

           IF COMM-SELECTION = FK1
               MOVE SPACE TO COMM-SELECTION
               PERFORM SEND-BRW-PANEL
           ELSE
               PERFORM POSITION-CURSOR
               PERFORM SEND-BRW-SYMB-CURS-PANEL
           END-IF.

       REBUILD-SCREEN-EXIT.
           EXIT.

       POSITION-CURSOR SECTION.

           EVALUATE TRUE
              WHEN PULLDOWN-DISPLAYED
               CONTINUE,
              WHEN OTHER
               EVALUATE TRUE
                  WHEN COMM-ACTION-SELECTED = FILE-DISPLAYED
                  AND  PULLDOWN-WAS-DISPLAYED
                   MOVE SPACE TO COMM-PULLDOWN-IND
                   MOVE -1 TO BRWFFLDL
                  WHEN COMM-ACTION-SELECTED = HELP-DISPLAYED
                  AND  PULLDOWN-WAS-DISPLAYED
                   MOVE SPACE TO COMM-PULLDOWN-IND
                   MOVE -1 TO BRWHFLDL
                  WHEN OTHER
                   MOVE -1 TO SNAMEB1L
               END-EVALUATE
           END-EVALUATE.

       POSITION-CURSOR-EXIT.
           EXIT.

       PROCESS-INVALID-FKEY SECTION.

           MOVE M002 TO BRWMSGO.
           PERFORM RETURN-ERROR.

       PROCESS-INVALID-FKEY-EXIT.
           EXIT.

       ROUTE-TO-NEXT-PROGRAM SECTION.

           PERFORM READ-TRACK-TSQ.
           IF COMM-PULLDOWN-IND NOT = SPACES
               MOVE SPACE TO COMM-SELECTION
               MOVE SEARCH-SELECTION-IND TO COMM-SEARCH-LEVEL-REQD
               PERFORM SEARCH-TABLE
           ELSE
               ADD +1 TO COMM-DEPTH-CTR
               MOVE TRACK-NAME(COMM-DEPTH-CTR) TO COMM-SELECTION
               MOVE TRACK-TYPE(COMM-DEPTH-CTR) TO COMM-PANEL-TYPE
               MOVE TRACK-ACTION(COMM-DEPTH-CTR) TO
                                                 COMM-ACTION-SELECTED
               MOVE TRACK-PANEL-ITEM-NO(COMM-DEPTH-CTR) TO
                                                 COMM-PANEL-CTR
               MOVE SEARCH-SELECTION-IND TO COMM-SEARCH-LEVEL-REQD
               PERFORM SEARCH-TABLE
           END-IF.
           PERFORM XCTL-NEXT-PROGRAM.

       ROUTE-TO-NEXT-PROGRAM-EXIT.
           EXIT.

       BUILD-PANEL SECTION.

           IF LIST-PANEL-PROCESSING
               PERFORM READ-LIST-TSQ
               MOVE READ-RECORD TO COMM-IO-TYPE
               MOVE LISTTSQ-ACCNO TO COMM-CUSTOMER-NUMBER
               MOVE +0            TO COMM-RANGE-STOP
               EXEC CICS LINK PROGRAM(REMOTE-IO-HANDLER)
                              COMMAREA(COMM-COMMAR)
                              LENGTH(LENGTH OF COMM-COMMAR)
                    END-EXEC
               PERFORM READ-TRACK-TSQ
           END-IF.

           PERFORM READ-RECORD-TSQ.

           MOVE CUSTREC-ACCNO              TO ACCNOB1O.
           MOVE CUSTREC-SNAME              TO SNAMEB1O.
           MOVE CUSTREC-FNAME              TO FNAMEB1O.
           MOVE CUSTREC-ADDRESS            TO ADDRB1O.
           MOVE CUSTREC-TOWN               TO TOWNB1O.
           MOVE CUSTREC-COUNTY             TO COUNTB1O.
           MOVE CUSTREC-POSTCODE           TO PCODEB1O.
           MOVE CUSTREC-CREDIT-LIMIT       TO CRLIMB1O.
           MOVE CUSTREC-ACCOUNT-STATUS     TO ACCSTB1O.
           MOVE CUSTREC-COMMENT-LINE1      TO COMMB1O.
           MOVE CUSTREC-COMMENT-LINE2      TO COMMB2O.
           MOVE CUSTREC-COMMENT-LINE3      TO COMMB3O.

           IF COMM-ITEMS-SELCTD =
                               COMM-ITEMS-PROCESSED
               MOVE 'BRW0' TO BRWIDO
           ELSE
               MOVE 'BRW1' TO BRWIDO
           END-IF.

           PERFORM BUILD-FKAREA.

       BUILD-PANEL-EXIT.
           EXIT.

       BUILD-FKAREA SECTION.

           SET FK-INDEX TO +1.

           SEARCH FK-BASE-DATA VARYING FK-INDEX
                  WHEN BRWIDO = FK-BASE-ENTRIES(FK-INDEX)
                    MOVE FK-DET-ENTRIES(FK-INDEX) TO BRWFKAO.

       BUILD-FKAREA-EXIT.
           EXIT.

       FIND-PREVIOUS-LIST-ENTRY SECTION.

           SUBTRACT +1 FROM COMM-LIST-ITEM-NUMBER.
           PERFORM READ-LIST-TSQ.

           IF LST-PROCESSING-DELETE
           OR LST-PROCESSING-UPDATE
           OR LST-PROCESSING-BROWSE
           OR LST-COMPLETE-DELETE
           OR LST-COMPLETE-UPDATE
           OR LST-COMPLETE-BROWSE
               MOVE ONX TO PREVIOUS-LIST-ENTRY-FND-SW
           END-IF.

       FIND-PREVIOUS-LIST-ENTRY-EXIT.
           EXIT.

       READ-RECORD-TSQ SECTION.

           MOVE TRACK-RECORD-ITEM-NO(COMM-DEPTH-CTR) TO
                                              COMM-RECORD-ITEM-CTR.
           MOVE RECD TO TSQ-PREFIX.
           MOVE EIBTRMID TO TSQ-TRMID.
           MOVE LENGTH OF CUSTREC-LAYOUT TO READQ-LENGTH.

           EXEC CICS READQ TS QUEUE(TSQ-NAME)
                              INTO(CUSTREC-LAYOUT)
                              LENGTH(READQ-LENGTH)
                              ITEM(COMM-RECORD-ITEM-CTR)
                              RESP(COMM-RESPONSE)
                       END-EXEC.

           EVALUATE COMM-RESPONSE
              WHEN DFHRESP(NORMAL)
               CONTINUE,
              WHEN DFHRESP(ITEMERR)
               CONTINUE,
              WHEN OTHER
               MOVE 'BRW02' TO COMM-CALL-NUMBER
               MOVE EIBRSRCE TO COMM-RESOURCE
               MOVE ABEND-HANDLER TO COMM-NEXT-PROGRAM
               PERFORM XCTL-NEXT-PROGRAM
           END-EVALUATE.

       READ-RECORD-TSQ-EXIT.
           EXIT.

       READ-LIST-TSQ SECTION.

           MOVE LIST TO TSQ-PREFIX.
           MOVE EIBTRMID TO TSQ-TRMID.
           MOVE LENGTH OF LISTTSQ-LAYOUT TO READQ-LENGTH.

           EXEC CICS READQ TS QUEUE(TSQ-NAME)
                              INTO(LISTTSQ-LAYOUT)
                              LENGTH(READQ-LENGTH)
                              ITEM(COMM-LIST-ITEM-NUMBER)
                              RESP(COMM-RESPONSE)
                       END-EXEC.

           EVALUATE COMM-RESPONSE
              WHEN DFHRESP(QIDERR)
               MOVE ONX TO QIDERR-SW
              WHEN DFHRESP(ITEMERR)
               MOVE LIST-IND TO COMM-BASE-IND
               MOVE ONX TO ITEMERR-SW
              WHEN DFHRESP(NORMAL)
               CONTINUE,
              WHEN OTHER
               MOVE 'BRW04' TO COMM-CALL-NUMBER
               MOVE EIBRSRCE TO COMM-RESOURCE
               MOVE ABEND-HANDLER TO COMM-NEXT-PROGRAM
               PERFORM XCTL-NEXT-PROGRAM
           END-EVALUATE.

       READ-LIST-TSQ-EXIT.
           EXIT.

       READ-PANEL-TSQ SECTION.

           MOVE PANL TO TSQ-PREFIX.
           MOVE EIBTRMID TO TSQ-TRMID.
           MOVE LENGTH OF BRWO TO READQ-LENGTH.

           EXEC CICS READQ TS QUEUE(TSQ-NAME)
                              INTO(BRWO)
                              LENGTH(READQ-LENGTH)
                              ITEM(COMM-PANEL-CTR)
                              RESP(COMM-RESPONSE)
                       END-EXEC.

           EVALUATE COMM-RESPONSE
              WHEN DFHRESP(ITEMERR)
               MOVE ONX TO ITEMERR-SW
              WHEN DFHRESP(LENGERR)
               CONTINUE,
              WHEN DFHRESP(NORMAL)
               CONTINUE,
              WHEN OTHER
               MOVE 'BRW05' TO COMM-CALL-NUMBER
               MOVE EIBRSRCE TO COMM-RESOURCE
               MOVE ABEND-HANDLER TO COMM-NEXT-PROGRAM
               PERFORM XCTL-NEXT-PROGRAM
           END-EVALUATE.

       READ-PANEL-TSQ-EXIT.
           EXIT.

       READ-TRACK-TSQ SECTION.

           MOVE RECD TO TSQ-PREFIX.
           MOVE EIBTRMID TO TSQ-TRMID.
           MOVE LENGTH OF TRACK-LAYOUT TO READQ-LENGTH.

           EXEC CICS READQ TS QUEUE(TSQ-NAME)
                              INTO(TRACK-LAYOUT)
                              LENGTH(READQ-LENGTH)
                              ITEM(ITEM-1)
                              RESP(COMM-RESPONSE)
                       END-EXEC.

           EVALUATE COMM-RESPONSE
              WHEN DFHRESP(NORMAL)
               CONTINUE,
              WHEN OTHER
               MOVE 'BRW06' TO COMM-CALL-NUMBER
               MOVE EIBRSRCE TO COMM-RESOURCE
               MOVE ABEND-HANDLER TO COMM-NEXT-PROGRAM
               PERFORM XCTL-NEXT-PROGRAM
           END-EVALUATE.

       READ-TRACK-TSQ-EXIT.
           EXIT.

       REWRITE-TRACK-TSQ SECTION.

           MOVE RECD TO TSQ-PREFIX.
           MOVE EIBTRMID TO TSQ-TRMID.

           EXEC CICS WRITEQ TS QUEUE(TSQ-NAME)
                               FROM(TRACK-LAYOUT)
                               LENGTH(LENGTH OF TRACK-LAYOUT)
                               ITEM(ITEM-1)
                               REWRITE
                               RESP(COMM-RESPONSE)
                       END-EXEC.

           EVALUATE COMM-RESPONSE
              WHEN DFHRESP(NORMAL)
               CONTINUE,
              WHEN OTHER
               MOVE 'BRW07' TO COMM-CALL-NUMBER
               MOVE EIBRSRCE TO COMM-RESOURCE
               MOVE ABEND-HANDLER TO COMM-NEXT-PROGRAM
               PERFORM XCTL-NEXT-PROGRAM
           END-EVALUATE.

       REWRITE-TRACK-TSQ-EXIT.
           EXIT.

       WRITE-PANEL-TSQ SECTION.

           MOVE PANL TO TSQ-PREFIX.
           MOVE EIBTRMID TO TSQ-TRMID.

           EXEC CICS WRITEQ TS QUEUE(TSQ-NAME)
                               FROM(BRWI)
                               LENGTH(LENGTH OF BRWI)
                               ITEM(COMM-PANEL-CTR)
                               RESP(COMM-RESPONSE)
                       END-EXEC.

           EVALUATE COMM-RESPONSE
              WHEN DFHRESP(NORMAL)
               CONTINUE,
              WHEN OTHER
               MOVE 'BRW08' TO COMM-CALL-NUMBER
               MOVE EIBRSRCE TO COMM-RESOURCE
               MOVE ABEND-HANDLER TO COMM-NEXT-PROGRAM
               PERFORM XCTL-NEXT-PROGRAM
           END-EVALUATE.

       WRITE-PANEL-TSQ-EXIT.
           EXIT.

       REWRITE-PANEL-TSQ SECTION.

           MOVE PANL TO TSQ-PREFIX.
           MOVE EIBTRMID TO TSQ-TRMID.

           IF ITEMERR-RAISED
               PERFORM WRITE-PANEL-TSQ
           ELSE
               EXEC CICS WRITEQ TS QUEUE(TSQ-NAME)
                                   FROM(BRWI)
                                   LENGTH(LENGTH OF BRWI)
                                   ITEM(COMM-PANEL-CTR)
                                   REWRITE
                                   RESP(COMM-RESPONSE)
                           END-EXEC
               EVALUATE COMM-RESPONSE
                  WHEN DFHRESP(NORMAL)
                   CONTINUE,
                  WHEN OTHER
                   MOVE 'BRW09' TO COMM-CALL-NUMBER
                   MOVE EIBRSRCE TO COMM-RESOURCE
                   MOVE ABEND-HANDLER TO COMM-NEXT-PROGRAM
                   PERFORM XCTL-NEXT-PROGRAM
               END-EVALUATE
           END-IF.

       REWRITE-PANEL-TSQ-EXIT.
           EXIT.

       RETURN-ERROR SECTION.

           MOVE -1 TO SNAMEB1L.
           PERFORM SEND-BRW-PANEL-DATAONLY.
           PERFORM SEND-CONTROL-ALARM.
           PERFORM RETURN-AC25.

       RETURN-ERROR-EXIT.
           EXIT.

       SEND-BRW-PANEL SECTION.

           EXEC CICS SEND MAP('BRW')
                          MAPSET('DFH0BRW')
                          FROM(BRWO)
                          ERASE
                          CURSOR(COMM-HELP-CPOSN)
                          RESP(COMM-RESPONSE)
                     END-EXEC.

       SEND-BRW-PANEL-EXIT.
           EXIT.

       SEND-BRW-SYMB-CURS-PANEL SECTION.

           EXEC CICS SEND MAP('BRW')
                          MAPSET('DFH0BRW')
                          FROM(BRWO)
                          ERASE
                          CURSOR
                          RESP(COMM-RESPONSE)
                     END-EXEC.

       SEND-BRW-PANEL-SYMB-CURS-EXIT.
           EXIT.

       SEND-BRW-PANEL-DATAONLY SECTION.

           EXEC CICS SEND MAP('BRW')
                          MAPSET('DFH0BRW')
                          CURSOR
                          DATAONLY
                          RESP(COMM-RESPONSE)
                     END-EXEC.

       SEND-BRW-PANEL-DATAONLY-EXIT.
           EXIT.

       SEND-CONTROL-ALARM SECTION.

           EXEC CICS SEND CONTROL
                          FREEKB
                          ALARM
                          RESP(COMM-RESPONSE)
                     END-EXEC.

       SEND-CONTROL-ALARM-EXIT.
           EXIT.

       SEARCH-TABLE SECTION.

           MOVE WS-HOLD-AREA TO DFHCOMMAREA.
           CALL PROGRAM-ROUTER USING DFHEIBLK, DFHCOMMAREA.
           MOVE DFHCOMMAREA TO WS-HOLD-AREA.

       SEARCH-TABLE-EXIT.
           EXIT.

       PULLDOWN-FROM-ACTION-BAR SECTION.

           MOVE SEARCH-ACTIONBASE-TO-OL-IND TO COMM-SEARCH-LEVEL-REQD.
           PERFORM SEARCH-TABLE.
           PERFORM XCTL-NEXT-PROGRAM.

       PULLDOWN-FROM-ACTION-BAR-EXIT.
           EXIT.

       XCTL-NEXT-PROGRAM SECTION.

           MOVE TRANSFER-CONTROL-IND TO COMM-STATE-IND.

           EXEC CICS XCTL PROGRAM(COMM-NEXT-PROGRAM)
                          COMMAREA(COMM-COMMAR)
                          LENGTH(LENGTH OF COMM-COMMAR)
                          RESP(BRW-RESP)
                     END-EXEC.

           EVALUATE BRW-RESP
              WHEN DFHRESP(NORMAL)
               CONTINUE,
              WHEN OTHER
               MOVE M021 TO BRWMSGO
               PERFORM RETURN-ERROR
           END-EVALUATE.

       XCTL-NEXT-PROGRAM-EXIT.
           EXIT.

       RETURN-AC25 SECTION.

           MOVE SPACE TO COMM-POPUP-IND.

           EXEC CICS RETURN TRANSID('AC25')
                            COMMAREA(COMM-COMMAR)
                            LENGTH(LENGTH OF COMM-COMMAR)
                            RESP(COMM-RESPONSE)
                     END-EXEC.

       RETURN-AC25-PANEL-EXIT.
           EXIT.
