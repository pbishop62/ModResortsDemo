??=ifdef __COMPILER_VER__
??=pragma filetag ("IBM-1047")
??=endif
??=pragma margins(1,72) sequence(73,80)
/* ---------------------------------------- */
/* Note - the above pragma statement allows */
/* this file to be used by either C or C++  */
/* compilers irrespective of file attributes*/
/* of fixed/variable, and inc/exclusion of  */
/* sequence numbers.                        */
/* ---------------------------------------- */
#ifndef __DFHBRMQH__                                                    00001000
#define __DFHBRMQH__ 1                                                  00002000
#include <stdint.h>                                                     00003000
 /* ----------------------------------------------------------------- */00004000
 /*                                                                   */00005000
 /* Licensed Materials - Property of IBM                              */00006000
 /*                                                                   */00007000
 /* 5655-Y04                                                          */00008000
 /*                                                                   */00009000
 /* (C) Copyright IBM Corp. 1997, 1998 All Rights Reserved.           */00010000
 /*                                                                   */00011000
 /* Generated from file:                                              */00012000
 /* /com.ibm.cics.emulation3270.bridge                                */00013000
 /*   /DESIGN                                                         */00014000
 /*      /DFHBRMQ.DESIGN                                              */00015000
 /*                                                                   */00016000
 /* Change activity from DFHBRMQ.DESIGN:                              */00017000
 /*  $L1= 721    520 970506 HD2UJAH : Enable CICS MQ Bridge to use DP */00018000
 /*  $P1= M66862 520 970716 HDDLCRP : Useability vector names         */00019000
 /*  $P2= M66892 520 970722 HD1MA   : support for CONVERSE            */00020000
 /*  $P3= M66980 520 970801 HDDLCRP : MQCIH for TS/TD                 */00021000
 /*  $P4= M66884 520 970901 HDDLCRP : Various DFH0CBRE errors         */00022000
 /*  $P5= M67139 520 970902 HDDLCRP : Request sequence numbers        */00023000
 /*  $P6= M27653 530 980626 HD0JADT : Create usable ASM constants cop */00024000
 /*  $P7= M30664 530 981119 HD4OGB  : DFHBRMCD copybook unusable.     */00025000
 /*  $01= A13011 530 980319 HDBGNRB : Migrate PQ13011 from SPA R520   */00026000
 /*                                                                   */00027000
 /* This is the description of the area passed to the Bridge URM from */00028000
 /* MQ and passed on to CICS transaction as it's COMMAREA.            */00029000
 /*                                                                   */00030000
 /* ----------------------------------------------------------------- */00031000
                                                                        00032000
 typedef                                                                00033000
 struct {                                                               00034000
   int32_t brmq_vector_length;    /* Length of vector                 */00035000
   char brmq_vector_descriptor[4]; /* Send or Receive - Text            00036000
                                     or Map etc                       */00037000
   char brmq_vector_type[4];      /* 'O' Outbound Vector 'I'            00038000
                                     Inbound Vector                   */00039000
   char brmq_vector_version[4];   /* '0' Vector version number        */00040000
 } brmq_vector_header;            /* Standard header for all vectors  */00041000
                                                                        00042000
 typedef                                                                00043000
 struct {                                                               00044000
   char filler__001[16];                                                00045000
   char brmq_se_erase_indicator[4]; /* 'N' No erase option              00046000
                                     specified 'D' DEFAULT specified    00047000
                                     on command 'A' ALTERNATE           00048000
                                     specified on cmnd                */00049000
   char brmq_se_ctlchar[4];       /* Control character (CTLCHAR)        00050000
                                     spec 'C' Default if CTLCHAR not    00051000
                                     spec                             */00052000
   char brmq_se_strfield_indicator[4]; /* 'N' Structured field          00053000
                                     indicator (STRFIELD) not           00054000
                                     specified on cmnd 'Y'              00055000
                                     Structured field indicator         00056000
                                     (STRFIELD) specified on command  */00057000
   char brmq_se_defresp_indicator[4]; /* 'N' Definite response          00058000
                                     indicator (DEFRESP) not            00059000
                                     specified on cmnd 'Y' Definite     00060000
                                     response indicator (DEFRESP)       00061000
                                     specified on command             */00062000
   char brmq_se_invite_indicator[4]; /* 'N' INVITE indicator            00063000
                                     not spec 'Y' INVITE indicator      00064000
                                     spec                             */00065000
   char brmq_se_last_indicator[4]; /* 'N' LAST indicator not            00066000
                                     specified 'Y' LAST indicator       00067000
                                     specified                        */00068000
   char brmq_se_wait_indicator[4]; /* 'N' Flush buffer                  00069000
                                     indicator (WAIT) not specified     00070000
                                     on command 'Y' Flush buffer        00071000
                                     indicator (WAIT) specified on      00072000
                                     command                          */00073000
   int32_t brmq_se_data_len;      /* Length of text on send           */00074000
 } brmq_send;                     /* Outbound Vector - SEND           */00075000
 /* ----------------------------------------------------------------- */00076000
 /*                                                                   */00077000
 /* This dsect is common to SEND CONTROL, SEND MAP and SEND TEXT. The */00078000
 /* brmq_send_map and brmq_send_text dsect's are concatenated on to   */00079000
 /* the end of this depending the request being processed.            */00080000
 /*                                                                   */00081000
 /* ----------------------------------------------------------------- */00082000
                                                                        00083000
 typedef                                                                00084000
 struct {                                                               00085000
   char filler__001[16];                                                00086000
   char brmq_sc_erase_indicator[4]; /* 'N' No erase option              00087000
                                     specified 'D' DEFAULT specified    00088000
                                     on the cmd 'A' ALTERNATE           00089000
                                     specified on cmd                 */00090000
   char brmq_sc_eraseaup_indicator[4]; /* 'N' Erase all                 00091000
                                     unprotected (ERASEAUP) not         00092000
                                     specified on the command 'Y'       00093000
                                     Erase all unprotec (ERASEAUP)      00094000
                                     specified on the command         */00095000
   char brmq_sc_freekb_indicator[4]; /* 'N' Free the keyboard           00096000
                                     (FREEKB) not specified on the      00097000
                                     command 'Y' Free the keyboard      00098000
                                     (FREEKB) was specified on the      00099000
                                     command                          */00100000
   char brmq_sc_alarm_indicator[4]; /* 'N' Sound the alarm              00101000
                                     (ALARM) was not specified on       00102000
                                     the command 'Y' Sound the alarm    00103000
                                     (ALARM) was specified on the       00104000
                                     command                          */00105000
   char brmq_sc_frset_indicator[4]; /* 'N' Reset the modified           00106000
                                     data tags not (FRSET) spec on      00107000
                                     the command 'Y' Reset the          00108000
                                     modified data tags (FRESET)        00109000
                                     spec on the command              */00110000
   char brmq_sc_last_indicator[4]; /* 'N' LAST indicator not            00111000
                                     specified 'Y' LAST indicator       00112000
                                     was specified                    */00113000
   char brmq_sc_wait_indicator[4]; /* 'N' Flush buffer                  00114000
                                     indicator (WAIT) not specified     00115000
                                     on the command 'Y' Flush buffer    00116000
                                     indicator (WAIT) specified on      00117000
                                     the command                      */00118000
   int32_t brmq_sc_cursor;        /* '-2' The CURSOR option not spec    00119000
                                     '-1' The CURSOR option was         00120000
                                     specified but with associated      00121000
                                     value, this implies that           00122000
                                     symbolic cursor positioning to     00123000
                                     be applied 'j' The CURSOR otion    00124000
                                     was spec with an offset value      00125000
                                     for cursor position relative to    00126000
                                     zero                             */00127000
   unsigned brmq_sc_msr_data :32; /* x'00000000' The MSR option         00128000
                                     not specified x'XXXXXXXX' The      00129000
                                     MSR option was specified with a    00130000
                                     4 byte value                     */00131000
 } brmq_send_control;             /* Outbound Vector - SEND CONTROL   */00132000
 /* ----------------------------------------------------------------- */00133000
                                                                        00134000
 typedef                                                                00135000
 struct {                                                               00136000
   char filler__001[52];                                                00137000
   char brmq_sm_mapset[8];        /* Mapset name                      */00138000
   char brmq_sm_map[8];           /* Map name                         */00139000
   char brmq_sm_data_indicator[4]; /* ' ' Neither MAPONLY nor           00140000
                                     DATAONLY were specified on the     00141000
                                     command 'D' DATAONLY was           00142000
                                     specified 'M' MAPONLY was          00143000
                                     specified                        */00144000
   int32_t brmq_sm_data_len;      /* Length of ADS data               */00145000
   int32_t brmq_sm_data_offset;   /* Offset from start of vector        00146000
                                     to ADS data                      */00147000
   int32_t brmq_sm_adsd_len;      /* Length of ADS descriptor         */00148000
   int32_t brmq_sm_adsd_offset;   /* Offset from start of               00149000
                                     vector to ADS descriptor data    */00150000
 } brmq_send_map;                 /* Outbound Vector - SEND MAP       */00151000
                                                                        00152000
 typedef                                                                00153000
 struct {                                                               00154000
   char filler__001[52];                                                00155000
   char brmq_st_text_type[4];     /* ' ' Neither MAPPED or NOEDIT       00156000
                                     'M' MAPPED option specified 'N'    00157000
                                     NOEDIT option specified          */00158000
   int32_t brmq_st_data_len;      /* The length of data on command    */00159000
 } brmq_send_text;                /* Outbound Vector - SEND TEXT      */00160000
                                                                        00161000
 typedef                                                                00162000
 struct {                                                               00163000
   char filler__001[16];                                                00164000
   char brmq_ie_wait_indicator[4]; /* 'N' Flush buffer                  00165000
                                     indicator (WAIT) was not           00166000
                                     specified on the command         */00167000
 } brmq_issue_eraseaup;           /* Outbound Vector - ISSUE            00168000
                                     ERASEAUP                         */00169000
                                                                        00170000
 typedef                                                                00171000
 struct {                                                               00172000
   char filler__001[16];                                                00173000
   char brmq_rer_buffer_indicator[4]; /* 'N' Buffer not                 00174000
                                     specified 'Y' Buffer specified   */00175000
 } brmq_receive_request;          /* Outbound Vector - RECEIVE          00176000
                                     request                          */00177000
 /* ----------------------------------------------------------------- */00178000
 /*                                                                   */00179000
 /* This vector is identical to SEND vector, except that the command  */00180000
 /* code indicates CONVERSE, rather than SEND  and WAIT, LAST and     */00181000
 /* INVITE are not supported on CONVERSE.                             */00182000
 /*                                                                   */00183000
 /* ----------------------------------------------------------------- */00184000
                                                                        00185000
 typedef                                                                00186000
 struct {                                                               00187000
   char filler__001[16];                                                00188000
   char brmq_cor_erase_indicator[4]; /* 'N' No erase option             00189000
                                     specified 'D' DEFAULT specified    00190000
                                     on command 'A' ALTERNATE           00191000
                                     specified on cmnd                */00192000
   char brmq_cor_ctlchar[4];      /* Control character (CTLCHAR)        00193000
                                     spec 'C' Default if CTLCHAR not    00194000
                                     spec                             */00195000
   char brmq_cor_strfield_indicator[4]; /* 'N' Structured               00196000
                                     field indicator (STRFIELD) not     00197000
                                     specified on cmnd 'Y'              00198000
                                     Structured field indicator         00199000
                                     (STRFIELD) specified on command  */00200000
   char brmq_cor_defresp_indicator[4]; /* 'N' Definite                  00201000
                                     response indicator (DEFRESP)       00202000
                                     not specified on cmnd 'Y'          00203000
                                     Definite response indicator        00204000
                                     (DEFRESP) specified on command   */00205000
   char filler__002[4];           /* INVITE indicator not supported     00206000
                                     on CONVERSE                      */00207000
   char filler__003[4];           /* LAST indicator not supported on    00208000
                                     CONVERSE                         */00209000
   char filler__004[4];           /* WAIT not supported on CONVERSE     00210000
                                     specified on command             */00211000
   int32_t brmq_cor_data_len;     /* Length of output data on           00212000
                                     CONVERSE !                       */00213000
 } brmq_converse_request;         /* Outbound Vector -CONVERSE          00214000
                                     request                          */00215000
 /* ----------------------------------------------------------------- */00216000
                                                                        00217000
 typedef                                                                00218000
 struct {                                                               00219000
   char filler__001[16];                                                00220000
   char brmq_rmr_mapset[8];       /* Mapset name                      */00221000
   char brmq_rmr_map[8];          /* Map name                         */00222000
   int32_t brmq_rmr_adsd_len;     /* length of ADSD, zero if none     */00223000
 } brmq_receive_map_request;      /* Outbound Vector - RECEIVE          00224000
                                     MAP request                      */00225000
                                                                        00226000
 typedef                                                                00227000
 struct {                                                               00228000
   char filler__001[16];                                                00229000
   char brmq_re_transmit_send_areas[4]; /* 'N' Delete send              00230000
                                     areas already generated 'Y'        00231000
                                     Transmit send areas              */00232000
   char brmq_re_buffer_indicator[4]; /* 'N' Buffer not                  00233000
                                     specified 'Y' Buffer specified   */00234000
   char brmq_re_aid[4];           /* Aid key value                    */00235000
   int32_t brmq_re_cposn;         /* Cursor position                  */00236000
   int32_t brmq_re_data_len;      /* Length of data on receive        */00237000
 } brmq_receive;                  /* Inbound Vector - RECEIVE         */00238000
 /* ----------------------------------------------------------------- */00239000
 /*                                                                   */00240000
 /* This vector is identical to RECEIVE, except that the command code */00241000
 /* indicates CONVERSE, rather than RECEIVE and BUFFER is not         */00242000
 /* supported on CONVERSE.                                            */00243000
 /*                                                                   */00244000
 /* ----------------------------------------------------------------- */00245000
                                                                        00246000
 typedef                                                                00247000
 struct {                                                               00248000
   char filler__001[16];                                                00249000
   char brmq_co_transmit_send_areas[4]; /* 'N' Delete send              00250000
                                     areas already generated 'Y'        00251000
                                     Transmit send areas              */00252000
   char filler__002[4];           /* Buffer not supported on            00253000
                                     CONVERSE                         */00254000
   char brmq_co_aid[4];           /* Aid key value                    */00255000
   int32_t brmq_co_cposn;         /* Cursor position                  */00256000
   int32_t brmq_co_data_len;      /* Length of data on CONVERSE         00257000
                                                                      */00258000
 } brmq_converse;                 /* Inbound Vector - CONVERSE        */00259000
 /* ----------------------------------------------------------------- */00260000
                                                                        00261000
 typedef                                                                00262000
 struct {                                                               00263000
   char filler__001[16];                                                00264000
   char brmq_rm_transmit_send_areas[4]; /* 'N' Delete send              00265000
                                     areas 'Y' Transmit send areas    */00266000
   char brmq_rm_mapset[8];        /* Mapset name                      */00267000
   char brmq_rm_map[8];           /* Map name                         */00268000
   char brmq_rm_aid[4];           /* Aid key value                    */00269000
   int32_t brmq_rm_cposn;         /* Cursor position                  */00270000
   int32_t brmq_rm_data_len;      /* Length of ADS data               */00271000
 } brmq_receive_map;              /* Inbound Vector - RECEIVE MAP     */00272000
                                                                        00273000
 typedef                                                                00274000
 struct {                                                               00275000
   char filler__001[16];                                                00276000
   char brmq_rt_rtransid[4];      /* Rtransid                         */00277000
   char brmq_rt_rtermid[4];       /* Rtermid                          */00278000
   char brmq_rt_queue[8];         /* Queue                            */00279000
   int32_t brmq_rt_data_len;      /* Length of data on retreive       */00280000
 } brmq_retrieve;                 /* Inbound Vector - RETRIEVE        */00281000
 /* ----------------------------------------------------------------- */00282000
 /*                                                                   */00283000
 /* The ADS is the BMS Application Data Structure                     */00284000
 /*                                                                   */00285000
 /* The input ADS is the data used by CICS to satisfy RECEIVE MAP     */00286000
 /* requests. To understand the data fully, it is necessary to use th */00287000
 /* ADSD. Constants for the values in this dsect are given in         */00288000
 /* DFHBMSCA.                                                         */00289000
 /*                                                                   */00290000
 /* Each ADS map is prefixed with a 12 byte prefix. This prefix can b */00291000
 /* ignored. This prefix is followed by a series of fields. These     */00292000
 /* fields are described below.                                       */00293000
 /*                                                                   */00294000
 /* brmq_adsi_data_len                                                */00295000
 /*  The length of the data entered by the user in this field.        */00296000
 /* brmq_adsi_flag                                                    */00297000
 /*  The BMS flag byte containing the modified data tag and also      */00298000
 /*  specifying if the cursor is in this field.                       */00299000
 /* brmq_adsi_data                                                    */00300000
 /*  The data entered by the user.                                    */00301000
 /*                                                                   */00302000
 /* ----------------------------------------------------------------- */00303000
                                                                        00304000
 typedef                                                                00305000
 struct {                                                               00306000
   char filler__001[12];                                                00307000
 } brmq_ads_input_header;                                               00309000
                                                                        00310000
 typedef                                                                00311000
 struct {                                                               00312000
   int16_t brmq_adsi_data_len;                                          00313000
   char brmq_adsi_flag;                                                 00314000
 } brmq_ads_input_field;                                                00316000
 /* ----------------------------------------------------------------- */00317000
 /* ----------------------------------------------------------------- */00318000
 /*                                                                   */00319000
 /* The ADSL is provided to allow use of BMS ADS's (Application Data  */00320000
 /* Structures) in a platform independant message.                    */00321000
 /*                                                                   */00322000
 /* The input ADS is the data used by CICS to satisfy RECEIVE MAP     */00323000
 /* requests.                                                         */00324000
 /*                                                                   */00325000
 /* The Bridge exit converts input ADSL's to ADS's.                   */00326000
 /*                                                                   */00327000
 /* The ADSL dsects can be used to generically read all ADSL's. ADSL' */00328000
 /* can also be read by a special C version of the BMS copybook       */00329000
 /* generated with the option DSECT=ADSL on the DFHMSD macro.         */00330000
 /*                                                                   */00331000
 /* The constants used to interpret the ADSL can be found in the C    */00332000
 /* copybook DFHBMSCA.                                                */00333000
 /*                                                                   */00334000
 /* As with ADS's, each ADSL map is prefixed with a 12 byte prefix.   */00335000
 /* This prefix can be ignored. This prefix is followed by a series o */00336000
 /* fields. These fields are described below.                         */00337000
 /*                                                                   */00338000
 /* brmq_adsli_len                                                    */00339000
 /*  The length of brmq_adsl_input_field including the data. This     */00340000
 /*  value is rounded up to a full word boundary.                     */00341000
 /* brmq_adsli_data_len                                               */00342000
 /*  The length of the data entered by the user in this field.        */00343000
 /* brmq_adsli_flag                                                   */00344000
 /*  The BMS flag byte containing the modified data tag and also      */00345000
 /*  specifying if the cursor is in this field.                       */00346000
 /* brmq_adsli_data                                                   */00347000
 /*  The data entered by the user.                                    */00348000
 /*                                                                   */00349000
 /* ----------------------------------------------------------------- */00350000
                                                                        00351000
 typedef                                                                00352000
 struct {                                                               00353000
   char filler__001[12];                                                00354000
 } brmq_adsl_input_header;                                              00356000
                                                                        00357000
 typedef                                                                00358000
 struct {                                                               00359000
   int32_t brmq_adsli_len;                                              00360000
   int32_t brmq_adsli_data_len;                                         00361000
   int32_t brmq_adsli_flag;                                             00362000
   int32_t filler__001[7];                                              00363000
 } brmq_adsl_input_field;                                               00365000
 /* ----------------------------------------------------------------- */00366000
 /* ----------------------------------------------------------------- */00367000
 /*                                                                   */00368000
 /* The ADS is the BMS Application Data Structure                     */00369000
 /*                                                                   */00370000
 /* The input ADS is the data used by CICS to satisfy SEND MAP        */00371000
 /* requests. To understand the data fully, it is necessary to use th */00372000
 /* ADSD. Constants for the values in this dsect are given in         */00373000
 /* DFHBMSCA.                                                         */00374000
 /*                                                                   */00375000
 /* Each ADS map is prefixed with a 12 byte prefix. This prefix can b */00376000
 /* ignored. This prefix is followed by a series of fields. These     */00377000
 /* fields are described below.                                       */00378000
 /*                                                                   */00379000
 /* brmq_adso_cursor                                                  */00380000
 /*  Set to -1 if the cursor is in this field, else the value is 0.   */00381000
 /* brmq_adso_attr                                                    */00382000
 /*  The 3270 attribute byte                                          */00383000
 /* brmq_adso_color                                                   */00384000
 /*  The color byte (a value of 0 means that this fields is not set). */00385000
 /* brmq_adso_ps                                                      */00386000
 /*  The program symbol set (a value of 0 means that this fields is   */00387000
 /*  not set).                                                        */00388000
 /* brmq_adso_hilight                                                 */00389000
 /*  The hilight indicator (a value of 0 means that this fields is    */00390000
 /*  not set).                                                        */00391000
 /* brmq_adso_validn                                                  */00392000
 /*  The validation indicator (a value of 0 means that this fields is */00393000
 /*  not set).                                                        */00394000
 /* brmq_adso_outline                                                 */00395000
 /*  The outline type (a value of 0 means that this fields is not     */00396000
 /*  set).                                                            */00397000
 /* brmq_adso_sosi                                                    */00398000
 /*  SO/SI creation indication (a value of 0 means that this fields   */00399000
 /*  is not set).                                                     */00400000
 /* brmq_adso_transp                                                  */00401000
 /*  The transparency indicator (a value of 0 means that this fields  */00402000
 /*  is not set).                                                     */00403000
 /* brmq_adso_data                                                    */00404000
 /*  The data entered by the application.                             */00405000
 /*                                                                   */00406000
 /* ----------------------------------------------------------------- */00407000
                                                                        00408000
 typedef                                                                00409000
 struct {                                                               00410000
   char filler__001[12];                                                00411000
 } brmq_ads_output_header;                                              00413000
                                                                        00414000
 typedef                                                                00415000
 struct {                                                               00416000
   int16_t brmq_adso_cursor;                                            00417000
   char brmq_adso_attr;                                                 00418000
 } brmq_ads_output_field;                                               00420000
                                                                        00421000
 typedef                                                                00422000
 struct {                                                               00423000
   char brmq_adso_mapatt;                                               00424000
 } brmq_adso_mapatts_field;                                             00426000
 /* ----------------------------------------------------------------- */00427000
 /* ----------------------------------------------------------------- */00428000
 /*                                                                   */00429000
 /* The output ADSL is provided to allow use of BMS ADS's (Applicatio */00430000
 /* Data Structures) in a platform independant message. The output AD */00431000
 /* is the data in SEND MAP requests.                                 */00432000
 /*                                                                   */00433000
 /* The Bridge exit converts all ADS's to ADSL's before adding them t */00434000
 /* the appropriate output vector.                                    */00435000
 /*                                                                   */00436000
 /* The ADSL dsects can be used to generically read all ADSL's. ADSL' */00437000
 /* can also be read by a special C version of the BMS copybook       */00438000
 /* generated with the option DSECT=ADSL on the DFHMSD macro.         */00439000
 /*                                                                   */00440000
 /* The constants used to interpret the ADSL can be found in the C    */00441000
 /* copybook DFHBMSCA.                                                */00442000
 /*                                                                   */00443000
 /* As with ADS's, each ADSL map is prefixed with a 12 byte prefix.   */00444000
 /* This prefix can be ignored. This prefix is followed by a series o */00445000
 /* fields. These fields are described below.                         */00446000
 /*                                                                   */00447000
 /* brmq_adslo_len                                                    */00448000
 /*  The length of brmq_adsl_output_field including the data. This    */00449000
 /*  value is rounded up to a full word boundary.                     */00450000
 /* brmq_adslo_cursor                                                 */00451000
 /*  Set to -1 if the cursor is in this field, else the value is 0.   */00452000
 /* brmq_adslo_attr                                                   */00453000
 /*  The 3270 attribute byte                                          */00454000
 /* brmq_adslo_color                                                  */00455000
 /*  The color byte (a value of 0 means that this fields is not set). */00456000
 /* brmq_adslo_ps                                                     */00457000
 /*  The program symbol set (a value of 0 means that this fields is   */00458000
 /*  not set).                                                        */00459000
 /* brmq_adslo_hilight                                                */00460000
 /*  The hilight indicator (a value of 0 means that this fields is    */00461000
 /*  not set).                                                        */00462000
 /* brmq_adslo_validn                                                 */00463000
 /*  The validation indicator (a value of 0 means that this fields is */00464000
 /*  not set).                                                        */00465000
 /* brmq_adslo_outline                                                */00466000
 /*  The outline type (a value of 0 means that this fields is not     */00467000
 /*  set).                                                            */00468000
 /* brmq_adslo_sosi                                                   */00469000
 /*  SO/SI creation indication (a value of 0 means that this fields   */00470000
 /*  is not set).                                                     */00471000
 /* brmq_adslo_transp                                                 */00472000
 /*  The transparency indicator (a value of 0 means that this fields  */00473000
 /*  is not set).                                                     */00474000
 /* brmq_adslo_data                                                   */00475000
 /*  The data entered by the application.                             */00476000
 /*                                                                   */00477000
 /* ----------------------------------------------------------------- */00478000
                                                                        00479000
 typedef                                                                00480000
 struct {                                                               00481000
   char filler__001[12];                                                00482000
 } brmq_adsl_output_header;                                             00484000
                                                                        00485000
 typedef                                                                00486000
 struct {                                                               00487000
   int32_t brmq_adslo_len;                                              00488000
   int32_t brmq_adslo_cursor;                                           00489000
   int32_t brmq_adslo_attr;                                             00490000
   int32_t brmq_adslo_color;                                            00491000
   int32_t brmq_adslo_ps;                                               00492000
   int32_t brmq_adslo_hilight;                                          00493000
   int32_t brmq_adslo_validn;                                           00494000
   int32_t brmq_adslo_outline;                                          00495000
   int32_t brmq_adslo_sosi;                                             00496000
   int32_t brmq_adslo_transp;                                           00497000
 } brmq_adsl_output_field;                                              00499000
#endif                                                                  00500000
