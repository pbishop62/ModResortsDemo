* ASM CICS ( NOPROLOG NOEPILOG )
99T      TITLE 'DFH99T - CICS DYNAMIC ALLOCATION SAMPLE PROGRAM (MVS) -*
                KEYWORD TABLE'
***********************************************************************
*                                                                     *
* MODULE NAME = DFH99T                                                *
*                                                                     *
* DESCRIPTIVE NAME = Dynamic Allocation Sample Program                *
*                    Keyword Table                                    *
*                                                                     *
*                                                                     *
*                                                                     *
*     Licensed Materials - Property of IBM                            *
*                                                                     *
*     "Restricted Materials of IBM"                                   *
*                                                                     *
*     5655-Y04                                                        *
*                                                                     *
*     (C) Copyright IBM Corp. 1980, 1991"                             *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* STATUS = 7.2.0                                                      *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* SYSPARM(LIST): KEYWORD AND SYMBOLIC VALUE PUNCHED.                  *
*                USE AS CROSS REFERENCE TO APPENDIX A OF GC28-0682.   *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* CHANGE ACTIVITY :                                                   *
* $MOD(DFH99T),COMP(SAMPLES),PROD(CICS TS ):                          *
*                                                                     *
*     PN= REASON REL YYMMDD HDXIII : REMARKS                          *
*    $P0= Mnnnnn 170 800925 HDZZUNK: Created.                         *
*    $P1= M90474 330 910807 HDBWSH : Prologue fixed.                  *
*                                                                     *
***********************************************************************
         PRINT OFF
         MACRO
&FN      VERBDEF &FUNC,&TYPE=
         GBLC  &FUNCTN                 CSECT NAME FOR KEYWORDS
         LCLA  &L
         LCLC  &BL
         AIF   ('&SYSPARM' NE 'LIST').VD
         PRINT OFF
.* JUST PUNCH THE OPERANDS, FOR HELP
&BL      SETC  '                '(1,16-K'&FN)
         PUNCH '&FN&BL&FUNC'
         MEXIT
.VD      ANOP  ,
DFH99T   CSECT
         AIF   ('&TYPE' NE 'FINAL').ENTRY
         DC    AL1(TEND)               END OF SET
         MEXIT
.ENTRY   ANOP
&FUNCTN  SETC  '&FN'                   CSECT NAME SAME AS VERB WORD
&L       SETA  K'&FN
         DC    AL1(TKW)                KEYWORD TOKEN
         DC    AL1(&L)                 FUNCTION KEYWORD LENGTH
         DC    CL8'&FN'                FUNCTION KEYWORD
         DC    AL2(&FUNC)              CODED FUNCTION
         DC    VL4(&FUNCTN)            PTR TO KEYWORD OPERANDS
         MEND
         EJECT
         MACRO
&KW      KEYDEF &KEY,              SYMBOLIC KEY NAME                   *
               &KEYS=,             LIST OF KEYWORD VALUES              *
               &CKEYS=,            LIST OF CONVERTED KEYWORD VALUES    *
               &ROUTINE=,          ROUTINE TO PERFORM CONVERSION       *
               &DSCR=,             NAME TO GIVE TO DESCRIPTION         *
               &LIKE=,             USE A NAMED DESCRIPTION             *
               &TYPE=
.**********************************************************************
.* GENERATES AN ENTRY IN THE KEYWORD TABLE FOR A KEYWORD OPERAND      *
.* SUBORDINATE TO A PARTICULAR FUNCTION KEYWORD.                      *
.* PLACEMENT: MUST FOLLOW THE VERBDEF MACRO FOR THE FUNCTION TO       *
.*            WHICH THIS KEYWORD BELONGS.                             *
.*                                                                    *
.* OUTPUT:    AN ENTRY IN THE KEYWORDS CSECT FOR THE ASSOCIATED       *
.*            FUNCTION, LINKED WITH TEXT IN THE DESCRIPTION CSECT.    *
.*                                                                    *
.* THIS MACRO DOES NOT CHECK ITS OPERANDS. GET THEM RIGHT!            *
.**********************************************************************
.**********************************************************************
.*       G L O B A L S                                                *
.**********************************************************************
         GBLA  &MMMIN              MIN STRING LENGTH (SET BY MINMAX)
         GBLA  &MMMAX              MAX STRING LENGTH       "
         GBLC  &FUNCTN             CSECT NAME FOR KEYWORDS
         GBLC  &MMNAME             TYPE NAME         (SET BY MINMAX)
.**********************************************************************
.*       L O C A L S                                                  *
.**********************************************************************
         LCLA  &L                  LENGTH OF KEYWORD
.*                                 AND NUMBER OF KEYS/CKEYS
         LCLA  &N                  COUNT OF CKEYS VALUES
         LCLA  &N1                 DITTO
         LCLA  &KL                 LENGTH OF A KEYS
         LCLA  &NT                 NUMBER OF ITEMS IN TYPE SUBLIST
         LCLB  &V                  VALUE OPERAND
         LCLB  &VR                 RETURNED VALUE
         LCLB  &ALLOW              VALUE ALLOWED
         LCLB  &REQ                VALUE REQUIRED
         LCLB  &MULT               VALUE MAY BE MULTIPLE
         LCLB  &RTN                ROUTINE SPECIFIED
         LCLB  &KSTR               KEYSTRING (ONLY IF KEYWORD)
         LCLC  &TT                 TOKEN TYPE
         LCLC  &PROC               PROCESSING ROUTINE
         LCLC  &KV,&CV             KEYS,CKEYS
         LCLC  &BL                 BLANKS TO PUNCH
         AIF   ('&SYSPARM' NE 'LIST').KD
.* JUST PUNCH THE OPERANDS, FOR HELP
&BL      SETC  '              '(1,14-K'&KW)
         PUNCH '  &KW&BL&KEY'
         MEXIT
.KD      ANOP  ,
.**********************************************************************
.*       GENERATE THE KEYWORD IN THE CSECT FOR THIS FUNCTION          *
.**********************************************************************
&FUNCTN  CSECT
         AIF   ('&TYPE' NE 'FINAL').ENTRY
         DC    AL1(TEND)           END OF SET
         MEXIT
.ENTRY   ANOP
&L       SETA  K'&KW
         DC    AL1(TKW)            TOKEN TYPE
         DC    AL1(&L)             LENGTH OF KEYWORD
         DC    CL8'&KW'            KEYWORD
         DC    AL2(&KEY)           CODED KEYWORD
         AIF   ('&LIKE' NE '').USELIKE
         AIF   ('&DSCR' NE '').USEDSCR
         DC    AL4(DSCR&SYSNDX)    PTR TO DESCRIPTION
         AGO   .FDONE
.USELIKE DC    AL4(&LIKE)          PTR TO NAMED DESCRIPTION
         MEXIT
.USEDSCR DC    AL4(&DSCR)          PTR TO DESCRIPTION (NAMED)
.FDONE   ANOP  ,
.**********************************************************************
.* SCAN THE TYPE SUBLIST, AND SET LOCALS FOR WHAT IS PRESENT
.**********************************************************************
.* PERMITTED VALUES OF 'TYPE':
.* CHAR     EG. CHAR5, CHAR1-8, CHAR 1-44. )
.* NUM      EG. NUM5, NUM1-10.             )
.* BIN1     SIC.                           ) MUTUALLY
.* BIN2      "                             ) EXCLUSIVE
.* BIN3      "                             )
.* BIN4      "                             )
.* RETURN    VALUE RETURNED WITH THIS KEY
.* NOTALLOWED | ALLOWED     ) N | A ACCEPTABLE AS ABBREVIATIONS
.* REQUIRED   | OPTIONAL    ) R | O     "      "        "
.* SINGLE     | MULTIPLE    ) S | M     "      "        "
.* KEYSTRING                ) K         "      "        "
.**********************************************************************
&TT      SETC  'TNULL'             SET IN CASE NO TYPE AVAILABLE
&NT      SETA  N'&TYPE
         AIF   (&NT LT 1).NOTYPE
.TYPLOOP AIF   ('&TYPE(&NT)' EQ '').NXTYP SKIP BLANK TYPES
         AIF   ('&TYPE(&NT)'(1,1) EQ 'C').MM
         AIF   ('&TYPE(&NT)'(1,1) EQ 'N').NUMQ
         AIF   ('&TYPE(&NT)'(1,1) EQ 'R').RETQ
         AIF   ('&TYPE(&NT)'(1,1) EQ 'B').MM
         AIF   ('&TYPE(&NT)'(1,1) EQ 'A').ALLOW
         AIF   ('&TYPE(&NT)'(1,1) EQ 'O').OPT
         AIF   ('&TYPE(&NT)'(1,1) EQ 'S').SIN
         AIF   ('&TYPE(&NT)'(1,1) EQ 'M').MULT
         AIF   ('&TYPE(&NT)'(1,1) EQ 'K').KEYSTR
         MNOTE 8,'TYPE=&TYPE(&NT) NOT VALID. SKIPPED'
         AGO   .NXTYP
.NUMQ    AIF   (K'&TYPE(&NT) LT 3).NOTALL
         AIF   ('&TYPE(&NT)'(1,3) EQ 'NUM').MM
         AGO   .NOTALL
.RETQ    AIF   (K'&TYPE(&NT) LT 3).REQ
         AIF   ('&TYPE(&NT)'(1,3) EQ 'RET').RET
         AGO   .REQ
.MM      MINMAX &TYPE(&NT)
         AIF   ('&MMNAME' EQ 'CHAR').CHAR
         AIF   ('&MMNAME' EQ 'NUM').NUM
         AIF   ('&MMNAME' EQ 'BIN').BIN
         MNOTE 8,'&MMNAME NOT A VALID TYPE. SKIPPED.'
         AGO   .NXTYP
.CHAR    ANOP  ,                   CHAR
&TT      SETC  'TKW'                  SET TOKEN TYPE
         AGO   .NXTYP
.NUM     ANOP  ,                   NUM
&TT      SETC  'TNUM'                 SET TOKEN TYPE
         AGO   .NXTYP
.BIN     ANOP  ,                   BIN
&TT      SETC  'TBIN&MMMIN.'          SET TOKEN TYPE
&MMMIN   SETA  0                      SET NO MIN
&MMMAX   SETA  0                      SET NO MAX
         AGO   .NXTYP
.KEYSTR  ANOP  ,                   RETURN
&KSTR    SETB  1                      SET KEYSTRING
         AGO   .NXTYP
.RET     ANOP  ,                   RETURN
&VR      SETB  1                      SET RETURN
         AGO   .NXTYP
.ALLOW   ANOP  ,                   ALLOWED
&ALLOW   SETB  1                      SET ALLOWED
         AGO   .NXTYP
.NOTALL  ANOP  ,                   NOT ALLOWED
&ALLOW   SETB  0                      SET NOT ALLOWED
&REQ     SETB  0                      SET OPTIONAL
&MULT    SETB  0                      SET SINGLE
         AGO   .NXTYP
.REQ     ANOP  ,                   REQUIRED
&REQ     SETB  1                      SET REQUIRED
&ALLOW   SETB  1                      SET ALLOWED
         AGO   .NXTYP
.OPT     ANOP  ,                   OPTIONAL
&REQ     SETB  0                      SET NOT REQUIRED
&ALLOW   SETB  1                      SET ALLOWED
         AGO   .NXTYP
.SIN     ANOP  ,                   SINGLE
&MULT    SETB  0                      SET NOT MULTIPLE
&ALLOW   SETB  1                      SET ALLOWED
         AGO   .NXTYP
.MULT    ANOP  ,                   MULTIPLE
&MULT    SETB  1                      SET MULTIPLE
&ALLOW   SETB  1                      SET ALLOWED
         AGO   .NXTYP
.NXTYP   ANOP  ,                   END CASE SELECTION
&NT      SETA  &NT-1
         AIF   (&NT GT 0).TYPLOOP  LOOP BACK FOR NEXT TYPE
         AGO   .DGEN
.NOTYPE  ANOP  ,
.DGEN    ANOP  ,
&V       SETB  ('&KEYS' EQ '')     SET FOR KEYWORD VALUES
&RTN     SETB  ('&ROUTINE' NE '')  SET FOR EXPLICIT ROUTINE
         AIF   (NOT(&V AND &KSTR)).KSTROK
         MNOTE 8,'TYPE=KEYSTRING REJECTED, NO KEYS CODED'
&KSTR    SETB  0
.KSTROK  AIF   (NOT (&VR AND &ALLOW)).RETOK
         MNOTE 8,'TYPE=RETURN CONFLICTS WITH TYPE=ALLOWED'
.RETOK   ANOP  ,
.**********************************************************************
.*       GENERATE THE DESCRIPTION IN THE DSCR CSECT                   *
.*                                                                    *
.* THE DESCRIPTION IS IN ONE OF TWO FORMS FOLLOWING A COMMON PART:    *
.* COMMON:       B'XXXXXXXX'     FLAG BYTE                            *
.*                 1.......      VALUE OPERAND                        *
.*                 0.......      KEYWORD OPERAND                      *
.*                 .1......      VALUE RETURNED WITH THIS KEY         *
.*                               (CAN BE KEYWORD VALUE)               *
.*                 .0......      VALUE PASSED WITH THIS KEY           *
.*                 ..1.....      VALUE ALLOWED WITH THIS KEY          *
.*                 ..0.....      VALUE NOT ALLOWED WITH THIS KEY      *
.*                 ...1....      VALUE REQUIRED WITH THIS KEY         *
.*                 ...0....      VALUE OPTIONAL WITH THIS KEY         *
.*                 ....1...      MULTIPLE VALUE ALLOWED               *
.*                 ....0...      VALUE MUST BE SINGLE                 *
.*                 .....1..      ROUTINE PROVIDED EXPLICITLY          *
.*                 .....0..      DEFAULT ROUTINE WILL BE USED         *
.*                 ......1.      KEYSTRING (TYPE OF KEYWORD)          *
.*                 ......0.      NOT A KEYSTRING                      *
.*                 .......1      RESERVED FOR FUTURE USE              *
.* VALUE OPERAND:                                                     *
.*               AL1(T)          TOKEN TYPE OF CONVERTED VALUE        *
.*               AL1(N)          MAXIMUM VALUE LENGTH (STRING TYPE)   *
.*               AL1(N)          MINIMUM VALUE LENGTH (ONLY       )   *
.*               VL3(XXXXXX)     OPTIONAL PROCESSING ROUTINE          *
.*                               A DEFAULT IS PROVIDED, DEPENDING ON  *
.*                               THE CONVERSION REQUIRED. THIS MAY BE *
.*                               OVERRIDDEN BY ROUTINE=ENTRYNAME.     *
.* KEYWORD OPERAND:                                                   *
.*               AL1(T)          TOKEN TYPE OF CONVERTED VALUE        *
.*          FOR EACH KEYWORD:                                         *
.*               AL1(TKW)        TOKEN TYPE                           *
.*               AL1(N)          LENGTH OF KEYWORD                    *
.*               CL8'XXX'        KEYWORD                              *
.*               X'XXXX'         CONVERTED VALUE                      *
.*               AL4(0)          RESERVED (ALL KEYWORD SETS SIMILAR)  *
.**********************************************************************
DSCR     CSECT
         AIF   ('&DSCR' EQ '').NONAME
&DSCR    DS    0F                  DESCRIPTION
         AGO   .COMMON
.NONAME  ANOP  ,
DSCR&SYSNDX DS 0F                  DESCRIPTION
.COMMON  ANOP  ,
.**********************************************************************
.* COMMON SECTION                                                     *
.**********************************************************************
.* SET FLAG BYTE BITS
         DC    B'&V&VR&ALLOW&REQ&MULT&RTN&KSTR.0' TYPE FLAGS
.**********************************************************************
.* END OF COMMON SECTION                                              *
.**********************************************************************
         AIF   (NOT &V).KEYS       GOTO KEYWORD OPND SECTION
.**********************************************************************
.* VALUE OPERAND SECTION                                              *
.**********************************************************************
         DC    AL1(&TT)            CONVERTED TYPE
         AIF   ('&TT'(1,3) EQ 'TKW').VO1
         AIF   ('&TT'(1,4) NE 'TNUM').VO2
.VO1     DC    AL1(&MMMAX)         MAX LENGTH OF VALUE
         DC    AL1(&MMMIN)         MIN LENGTH OF VALUE
.VO2     AIF   (NOT &RTN).VO3
         DC    VL3(&ROUTINE)       EXPLICIT PROCESSING ROUTINE
.VO3     MEXIT
.**********************************************************************
.* KEYWORD OPERAND SECTION                                            *
.**********************************************************************
.KEYS    ANOP
&L       SETA  N'&KEYS             LOOP COUNT
&CV      SETC  '&CKEYS(1)'         FIRST CKEY
&N       SETA  K'&CV               AND ITS LENGTH
&N       SETA  &N-1                LESS 1 FOR THE 'X'.
&N1      SETA  &N/2                BYTE LENGTH
&TT      SETC  'TBIN&N1'           TOKEN TYPE
         DC    AL1(&TT)            CONVERTED TYPE
.* LOOP FOR EACH
.KLOOP   AIF   (&L EQ 0).KEXIT
&KV      SETC  '&KEYS(&L)'             GET NEXT KEYWORD
&CV      SETC  '&CKEYS(&L)'(2,&N)      GET HEX VALUE
&KL      SETA  K'&KV
         DC    AL1(TKW)                TOKEN TYPE
         DC    AL1(&KL)                KEYWORD LENGTH
         DC    CL8'&KV'                KEYWORD OPERAND
         DC    XL&N1'&CV'              CODED VALUE
         AIF   (&N1 EQ 2).NOPAD
         DC    (2-&N1)X'00'            PADDING
.NOPAD   DC    AL4(0)                  RESERVED
&L       SETA  &L-1
         AGO   .KLOOP
.KEXIT   DC    AL1(TEND)               END OF SET
         MEND
         EJECT
         MACRO
         MINMAX &A
.**********************************************************************
.* EXTRACTS THE 3 PARTS OF &A, MMNAME.MMMIN.-.MMMAX                   *
.* WHERE MMNAME IS CHAR, NUM OR BIN.                                  *
.**********************************************************************
         GBLA  &MMMIN,&MMMAX
         GBLC  &MMNAME
         LCLA  &I,&J,&L         SUBSTRINGING
         LCLC  &W
&L       SETA  K'&A                TOTAL LENGTH
         AIF   ('&A'(1,1) NE 'C').T3
&I       SETA  4                   4 CHAR NAME
         AGO   .MMN
.T3      ANOP
&I       SETA  3                   3 CHAR NAME
.MMN     ANOP
&MMNAME  SETC  '&A'(1,&I)
&I       SETA  &I+1                FIRST NUMERIC
.* FIND THE END OR THE '-' USING &J
&J       SETA  &I+1                START AFTER FIRST NUMERIC
.JLOOP   AIF   (&J GT &L).HYPHEN
         AIF   ('&A'(&J,1) EQ '-').HYPHEN
&J       SETA  &J+1
         AGO   .JLOOP
.HYPHEN  ANOP
&W       SETC  '&A'(&I,&J-&I)
&MMMIN   SETA  &W
&MMMAX   SETA  &MMMIN
         AIF   (&J GT &L).MEXIT
&W       SETC  '&A'(&J+1,&L-&J)
&MMMAX   SETA  &W
.MEXIT   MEND
         EJECT
         PRINT ON
         AIF   ('&SYSPARM' EQ 'LIST').NOCSECT
DFH99T   CSECT
**********************************************************************
* THIS TABLE DEFINES THE KEYWORDS FOR FUNCTIONS AND OPERANDS
*
*        ASSEMBLE WITH SYSPARM(LIST) TO OBTAIN CROSS REFERENCE
*        FOR USE WITH APPENDIX A OF GC28-0682.
*
*        TO CHANGE THE SPELLING OF A KEYWORD, CHANGE THE NAME
*        FIELD OF THE MACRO INVOCATION THAT DEFINES IT.
*
*        TO DEFINE A NEW VERB, WITH JUST A SUBSET OF THE OPERANDS,
*        COPY THE SCHEME USED HERE. IT MIGHT BE USEFUL,
*        IF ONLY DISKS ARE TO BE PROCESSED, TO HAVE YOUR OWN VERB
*        AND ONLY THE OPERANDS ASSOCIATED WITH DISK DATASETS.
*
*        TO REMOVE OPERANDS FROM A VERB, JUST COMMENT OUT THE
*        KEYDEF MACRO INVOCATION FOR THOSE OPERANDS, TAKING CARE
*        NOT TO LEAVE NAMED DESCRIPTIONS UNRESOLVED.
*
*        (NAMED DESCRIPTIONS ARE USED TO AVOID DUPLICATING
*        DESCRIPTIONS WHICH ARE THE SAME, USING LIKE=
*        TO REFER TO A DESCRIPTION NAMED ELSEWHERE.)
*
*        TO REMOVE AN ENTIRE VERB, COMMENT OUT THE VERBDEF AND
*        KEYDEF MACRO INVOCATIONS, AGAIN TAKING CARE
*        NOT TO LEAVE NAMED DESCRIPTIONS UNRESOLVED.
*
*        TO ADD NEW OPERANDS TO A VERB, YOU MUST KNOW THE TYPE
*        OF VALUE EXPECTED. THIS WILL PROBABLY BE FOUND IN A
*        RECENT EDITION OF THE JOB MANAGEMENT, SUPERVISOR AND TSO
*        SRL, GC28-0682.
*
*        THERE IS NO OBJECTION TO AN OPERAND KEYWORD APPEARING MORE
*        THAN ONCE WITH DIFFERENT SPELLINGS. BE CAREFUL WHEN CHOOSING
*        SPELLINGS THAT SHORT ABBREVIATIONS CAN BE USED FOR
*        THE COMMON KEYWORDS.
**********************************************************************
         DFH99M TOKDEF
         PRINT NOGEN
         IEFZB4D0                  , DYNALLOC PARAMETER BLOCKS
         IEFZB4D2                  , DYNALLOC KEYWORD EQUATES
         PRINT GEN
         EJECT
**********************************************************************
* ALLOCATION FUNCTION
**********************************************************************
.NOCSECT ANOP  ,
ALLOCATE VERBDEF S99VRBAL
*               OPERANDS OF ALLOCATE VERB
DDNAME   KEYDEF DALDDNAM,TYPE=(CHAR1-8,SINGLE,REQUIRED),DSCR=CHAR8
FILE     KEYDEF DALDDNAM,LIKE=CHAR8
DSNAME   KEYDEF DALDSNAM,TYPE=(CHAR1-44,S,R),DSCR=CHAR44
DATASET  KEYDEF DALDSNAM,LIKE=CHAR44
MEMBER   KEYDEF DALMEMBR,LIKE=CHAR8
STATUS   KEYDEF DALSTATS,KEYS=(OLD,MOD,NEW,SHR),                       *
               CKEYS=(X01,X02,X04,X08),TYPE=(S,R)
DISP     KEYDEF DALNDISP,KEYS=(UNCATLG,CATLG,DELETE,KEEP),             *
               CKEYS=(X01,X02,X04,X08),TYPE=(S,R),DSCR=DISP
CONDDISP KEYDEF DALCDISP,LIKE=DISP
TRACKS   KEYDEF DALTRK,TYPE=N,DSCR=NONE
CYLINDER KEYDEF DALCYL,LIKE=NONE
BLOCKS   KEYDEF DALBLKLN,TYPE=(BIN3,S,R),DSCR=BIN3
PRIMARY  KEYDEF DALPRIME,LIKE=BIN3
SECONDRY KEYDEF DALSECND,LIKE=BIN3
DIRECTRY KEYDEF DALDIR,LIKE=BIN3
RELEASE  KEYDEF DALRLSE,LIKE=NONE
SPCEFORM KEYDEF DALSPFRM,KEYS=(ALX,MXIG,CONTIG),                       *
               CKEYS=(X01,X02,X04),TYPE=(S,R)
ROUND    KEYDEF DALROUND,LIKE=NONE
VOL      KEYDEF DALVLSER,TYPE=(CHAR6,S,R)
PRIVATE  KEYDEF DALPRIVT,LIKE=NONE
VOLSEQ   KEYDEF DALVLSEQ,TYPE=(BIN2,S,R),DSCR=BIN2
VOLCOUNT KEYDEF DALVLCNT,TYPE=(BIN1,S,R),DSCR=BIN1
VOLREF   KEYDEF DALVLRDS,LIKE=CHAR44
UNIT     KEYDEF DALUNIT,LIKE=CHAR8
UNITCNT  KEYDEF DALUNCNT,LIKE=BIN1
PARALLEL KEYDEF DALPARAL,LIKE=NONE
SYSOUT   KEYDEF DALSYSOU,TYPE=(CHAR1,S,OPT)
SYSOUPGM KEYDEF DALSPGNM,LIKE=CHAR8
SYSOUFRM KEYDEF DALSFMNO,TYPE=(CHAR1-4,S,R),DSCR=CHAR4
OUTLIM   KEYDEF DALOUTLM,LIKE=BIN3
CLOSEUA  KEYDEF DALCLOSE,LIKE=NONE
COPIES   KEYDEF DALCOPYS,LIKE=BIN1
LABEL    KEYDEF DALLABEL,KEYS=(SL,SUL,AL,AUL,NSL,NL,BLP,LTM),          *
               CKEYS=(X02,X0A,X40,X48,X04,X01,X10,X21),                *
               TYPE=(S,R)
DSSEQ    KEYDEF DALDSSEQ,LIKE=BIN2
PASSWORD KEYDEF DALPASPR,KEYS=(NOPWREAD,PWREAD),CKEYS=(X30,X10),       *
               TYPE=(S,R)
INOUT    KEYDEF DALINOUT,KEYS=(INONLY,OUTONLY),CKEYS=(X80,X40),        *
               TYPE=(S,R)
EXPDT    KEYDEF DALEXPDT,TYPE=(NUM5,S,R)
RETPD    KEYDEF DALRETPD,LIKE=BIN2
DUMMY    KEYDEF DALDUMMY,LIKE=NONE
FCBIMAGE KEYDEF DALFCBIM,LIKE=CHAR4
FCBOPT   KEYDEF DALFCBAV,KEYS=(ALIGN,VERIFY),CKEYS=(X08,X04),TYPE=(S,R)
QNAME    KEYDEF DALQNAME,LIKE=CHAR8
TERMINAL KEYDEF DALTERM,LIKE=NONE
UCS      KEYDEF DALUCS,LIKE=CHAR4
UCSFOLD  KEYDEF DALUFOLD,LIKE=NONE
UCSVERFY KEYDEF DALUVRFY,LIKE=NONE
DCBDSNAM KEYDEF DALDCBDS,LIKE=CHAR44
DCBDDNAM KEYDEF DALDCBDD,LIKE=CHAR8
BFALN    KEYDEF DALBFALN,KEYS=(F,D),CKEYS=(X01,X02),TYPE=(S,R)
BFTEK    KEYDEF DALBFTEK,KEYS=(S,A,R,E,D),CKEYS=(X40,X60,X20,X10,X08), *
               TYPE=(S,R)
BLKSIZE  KEYDEF DALBLKSZ,LIKE=BIN2
BUFIN    KEYDEF DALBUFIN,LIKE=BIN1
BUFL     KEYDEF DALBUFL,LIKE=BIN2
BUFMAX   KEYDEF DALBUFMX,LIKE=BIN1
BUFNO    KEYDEF DALBUFNO,LIKE=BIN1
BUFOF    KEYDEF DALBUFOF,LIKE=BIN1
BUFOUT   KEYDEF DALBUFOU,LIKE=BIN1
BUFRQ    KEYDEF DALBUFRQ,LIKE=BIN1
BUFSZ    KEYDEF DALBUFSZ,LIKE=BIN2
PTCODE   KEYDEF DALCODE,KEYS=(N,I,F,B,C,A,T),                          *
               CKEYS=(X80,X40,X20,X10,X08,X04,X02),TYPE=(S,R)
CPRI     KEYDEF DALCPRI,KEYS=(S,E,R),CKEYS=(X01,X02,X04),TYPE=(S,R)
DENSITY  KEYDEF DALDEN,KEYS=(0,1,2,3,4,200,556,800,1600,6250),         *
               CKEYS=(X03,X43,X83,XC3,XD3,X03,X43,X83,XC3,XD3),        *
               TYPE=(S,R)
DSORG    KEYDEF DALDSORG,                                              *
               KEYS=(DA,DAU,CQ,CX,GS,MQ,PO,POU,PS,PSU,VSAM,TX,TQ,T37), *
               CKEYS=(X2000,X2100,X0800,X1000,X0080,X0400,X0200,X0300,X*
               4000,X4100,X0008,X0040,X0020,X0004),                    *
               TYPE=(S,R)
ERROPT   KEYDEF DALEROPT,KEYS=(ACC,SKP,ABE,T),CKEYS=(X80,X40,X20,X10), *
               TYPE=(S,R)
GNCP     KEYDEF DALGNCP,LIKE=BIN1
INTERVAL KEYDEF DALINTVL,LIKE=BIN1
KEYLEN   KEYDEF DALKYLEN,LIKE=BIN1
LIMCT    KEYDEF DALLIMCT,LIKE=BIN3
LRECL    KEYDEF DALLRECL,LIKE=BIN2
MODE     KEYDEF DALMODE,KEYS=(C,E,CO,CR,EO,ER),                        *
               CKEYS=(X80,X40,XA0,X90,X60,X50),TYPE=(S,R)
NCP      KEYDEF DALNCP,LIKE=BIN1
OPTCD    KEYDEF DALOPTCD,TYPE=(KEYSTRING,REQUIRED,SINGLE),             *
               KEYS=(A,B,C,E,F,H,O,Q,R,T,U,W,Z),                       *
               CKEYS=(X08,X40,X20,X20,X10,X10,X10,X08,X01,X02,X40,X80,X*
               04)
PCIR     KEYDEF DALPCIR,TYPE=(S,R),KEYS=(N,R,A,X),                     *
               CKEYS=(X08,X02,X20,X80)
PCIS     KEYDEF DALPCIS,TYPE=(S,R),KEYS=(N,R,A,X),                     *
               CKEYS=(X04,X01,X10,X40)
PRTSP    KEYDEF DALPRTSP,TYPE=(S,R),KEYS=(0,1,2,3),                    *
               CKEYS=(X01,X09,X11,X19)
RECFM    KEYDEF DALRECFM,TYPE=(K,S,R),                                 *
               KEYS=(A,B,D,F,G,M,R,S,T,U,V),                           *
               CKEYS=(X04,X10,X20,X80,X04,X02,X02,X08,X20,XC0,X40)
RESERVEF KEYDEF DALRSRVF,LIKE=BIN1
RESERVES KEYDEF DALRSRVS,LIKE=BIN1
SOWA     KEYDEF DALSOWA,LIKE=BIN2
STACK    KEYDEF DALSTACK,TYPE=(S,R),KEYS=(1,2),CKEYS=(X01,X02)
THRESH   KEYDEF DALTHRSH,LIKE=BIN1
TRTCH    KEYDEF DALTRTCH,TYPE=(S,R),KEYS=(E,T,C,ET),                   *
               CKEYS=(X23,X3B,X13,X2B)
PASSWRD  KEYDEF DALPASSW,LIKE=CHAR8
*IPLTXT  KEYDEF DALIPLTX                NOT USEFUL?
PERM     KEYDEF DALPERMA,LIKE=NONE
CNVERT   KEYDEF DALCNVRT,LIKE=NONE
DIAGNOSE KEYDEF DALDIAGN,LIKE=NONE OPEN/CLOSE/EOV TRACE NEEDS GTF
QDDNAME  KEYDEF DALRTDDN,TYPE=(CHAR8,N,RETURN),DSCR=CHAR8R
QDSNAME  KEYDEF DALRTDSN,TYPE=(CHAR44,N,RETURN),DSCR=CHAR44R
QDSORG   KEYDEF DALRTORG,LIKE=QDSORG
DEST     KEYDEF DALSUSER,LIKE=CHAR7
HOLD     KEYDEF DALSHOLD,LIKE=NONE
*FUNC    KEYDEF DALFUNC D.S. TYPE FOR 3525 CARD DEVICE
*  PROBABLY NOT USEFUL. CODE AS KEYSTRING IF YOU NEED IT.
FRID     KEYDEF DALFRID,LIKE=CHAR4
*SSREQ   KEYDEF DALSSREQ               NOT USEFUL?
QVOL     KEYDEF DALRTVOL,TYPE=(CHAR6,N,RETURN)
*MSVGP   KEYDEF DALMSVGP               NOT USEFUL?
         KEYDEF TYPE=FINAL
         EJECT
**********************************************************************
* KEYS FOR CONCATENATION FUNCTION
**********************************************************************
CONCAT   VERBDEF S99VRBCC
*               OPERANDS OF CONCATENATE VERB
DDNAMES  KEYDEF DCCDDNAM,TYPE=(CHAR1-8,MULT,REQ)
PERM     KEYDEF DCCPERMC,LIKE=NONE
         KEYDEF TYPE=FINAL
         EJECT
**********************************************************************
* KEYS FOR DECONCATENATION FUNCTION
***********************************************************************
DECONCAT VERBDEF S99VRBDC
*               OPERANDS OF DECONCATENATE VERB
DDNAME   KEYDEF DDCDDNAM,LIKE=CHAR8
         KEYDEF TYPE=FINAL
         EJECT
***********************************************************************
* KEYS FOR INFORMATION RETRIEVAL FUNCTION
***********************************************************************
INFORM   VERBDEF S99VRBIN
*               OPERANDS FOR INFORMATION-RETRIEVAL VERB
DDNAME   KEYDEF DINDDNAM,LIKE=CHAR8
FILE     KEYDEF DINDDNAM,LIKE=CHAR8
DSNAME   KEYDEF DINDSNAM,LIKE=CHAR44
RELNO    KEYDEF DINRELNO,LIKE=BIN2
QDDNAME  KEYDEF DINRTDDN,LIKE=CHAR8R
QDSNAME  KEYDEF DINRTDSN,LIKE=CHAR44R
QMEMBER  KEYDEF DINRTMEM,LIKE=CHAR8R
QSTATUS  KEYDEF DINRTSTA,TYPE=(RET,N),                                 *
               KEYS=(SHR,NEW,MOD,OLD),CKEYS=(X08,X04,X02,X01)
QDISP    KEYDEF DINRTNDP,TYPE=(RET,N),DSCR=DISPR,                      *
               KEYS=(PASS,KEEP,DELETE,CATLG,UNCATLG),                  *
               CKEYS=(X10,X08,X04,X02,X01)
QCONDISP KEYDEF DINRTCDP,LIKE=DISPR
QDSORG   KEYDEF DINRTORG,TYPE=(RET,N),DSCR=QDSORG,                     *
               KEYS=(ISU,IS,PSU,PS,DAU,DA,CX,CQ,MQ,POU,PO,GS,VSAM,TX,TQ*
               ,TR),                                                   *
               CKEYS=(X8100,X8000,X4100,X4000,X2100,X2000,X1000,X0800,X*
               0400,X0300,X0200,X0080,X0008,X0040,X0020,X0004)
QLIMIT   KEYDEF DINRTLIM,TYPE=(RET,BIN2,N)
QDYNATTR KEYDEF DINRTATT,     COMBINED VALUES RETURNED IN HEX.         *
               TYPE=(RET,N,KEYSTRING),                                 *
               KEYS=(PERMCAT,INUSE,PERMALL,CONVTBL),                   *
               CKEYS=(X80,X40,X20,X10)
QLAST    KEYDEF DINRTLST,TYPE=(RET,N),                                 *
               KEYS=(LAST,NOTLAST),CKEYS=(X80,X00)
QTYPE    KEYDEF DINRTTYP,TYPE=(RET,N),                                 *
               KEYS=(DUMMY,TERMINAL,OTHER),CKEYS=(X80,X40,X00)
         KEYDEF TYPE=FINAL
         EJECT
**********************************************************************
* KEYS FOR REMOVE IN-USE FUNCTION
**********************************************************************
NOTINUSE VERBDEF S99VRBRI          NOT USEFUL?
*               OPERANDS OF REMOVE-IN-USE VERB
*TCB     KEYDEF DRITCBAD,ROUTINE=TCBADDR,TYPE=(S,R,BIN2)
* TO MAKE SENSE OF THE ABOVE KEY, WRITE A CONVERT ROUTINE, WHICH
* DERIVES A TCB ADDRESS SOMEHOW. FOLLOW THE SCHEME USED IN DFH99BC
* FOR WRITING A CONVERT ROUTINE. DFH99KO WILL CALL IT FOR YOU,
* IF ROUTINE= IS CODED IN THE TABLE.
CURRENT  KEYDEF DRICURNT,LIKE=NONE CURRENT IS DEFAULT.
         KEYDEF TYPE=FINAL
         EJECT
**********************************************************************
* KEYS FOR DDNAME ALLOCATION FUNCTION
**********************************************************************
DDNAME   VERBDEF S99VRBDN
*               OPERANDS OF DDNAME VERB
DDNAME   KEYDEF DDNDDNAM,LIKE=CHAR8
DUMMY    KEYDEF DDNRTDUM,TYPE=(RETURN,N),                              *
               KEYS=(DUMMY,NOTDUMMY),CKEYS=(X80,X00)
         KEYDEF TYPE=FINAL
         EJECT
**********************************************************************
* KEYS FOR UNALLOCATION FUNCTION
**********************************************************************
FREE     VERBDEF S99VRBUN
*               OPERANDS OF UNALLOCATE VERB
DDNAME   KEYDEF DUNDDNAM,LIKE=CHAR8
FILE     KEYDEF DUNDDNAM,LIKE=CHAR8
DSNAME   KEYDEF DUNDSNAM,LIKE=CHAR44
DATASET  KEYDEF DUNDSNAM,LIKE=CHAR44
MEMBER   KEYDEF DUNMEMBR,LIKE=CHAR8
DISP     KEYDEF DUNOVDSP,LIKE=DISP
UNALLOC  KEYDEF DUNUNALC,LIKE=NONE
REMOVE   KEYDEF DUNREMOV,LIKE=NONE
NOHOLD   KEYDEF DUNOVSNH,LIKE=NONE
CLASS    KEYDEF DUNOVCLS,TYPE=(CHAR1,S,R),DSCR=CHAR1
SYSOUT   KEYDEF DUNOVCLS,LIKE=CHAR1
REMOTE   KEYDEF DUNOVSUS,TYPE=(CHAR1-7,S,R),DSCR=CHAR7
DEST     KEYDEF DUNOVSUS,LIKE=CHAR7
HOLD     KEYDEF DUNOVSHQ,LIKE=NONE
         KEYDEF TYPE=FINAL
         SPACE 3
         VERBDEF TYPE=FINAL
         SPACE 3
         END
