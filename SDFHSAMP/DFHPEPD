 /******************************************************************/
 /*                                                                */
 /* Module Name      = DFHPEP                                      */
 /*                                                                */
 /* Descriptive Name = %PRODUCT SAMPLE PROGRAM ERROR PROGRAM       */
 /*                                     ('C' VERSION)              */
 /*                                                                */
 /*                                                                  */
 /*                                                                  */
 /*       Licensed Materials - Property of IBM                       */
 /*                                                                  */
 /*       "Restricted Materials of IBM"                              */
 /*                                                                  */
 /*       5655-Y04                                                   */
 /*                                                                  */
 /*       (C) Copyright IBM Corp. 1990"                              */
 /*                                                                  */
 /*                                                                  */
 /*                                                                  */
 /*                                                                */
 /* Status = %XB0                                                  */
 /*                                                                */
 /* -------------------------------------------------------------  */
 /*                                                                */
 /* Function =                                                     */
 /*                                                                */
 /* -------------------------------------------------------------  */
 /*                                                                */
 /* Linkage  = From Abnormal Condition Program                     */
 /*                                                                */
 /* -------------------------------------------------------------  */
 /*                                                                */
 /* Input    = See layout of DFHPCOMD for data passed in COMMAREA  */
 /*                                                                */
 /* -------------------------------------------------------------  */
 /* Output   =                                                     */
 /*                                                                */
 /* Set pep_com_return_code to PEP_COM_RETURN_DISABLE to disable   */
 /* the transaction or set it to PEP_COM_RETURN_OK if program can  */
 /* continue in use.                                               */
 /* -------------------------------------------------------------  */
 /* Change Activity:                                               */
 /*                                                                */
 /*   $MOD(DFHPEPD),COMP(PROGRAM),PROD(CICS TS ):                  */
 /*                                                                */
 /*  PN= REASON REL YYMMDD HDXIII : REMARKS                        */
 /* $L0= M61723 320 900905 HD9LPSM: Initial Version                */
 /* $D1  Reserved for DCR                                          */
 /* $H1  Reserved for hardware support                             */
 /* $L1  Reserved for line item                                    */
 /* $P1  Reserved for PTM                                          */
 /*                                                                */
 /******************************************************************/

#include <string.h>
#include <stdlib.h>
#include <dfhpcomd>

void ptos(char *,unsigned char *);        /* Function prototype   */

main()
{

  dfhpep_commarea *comm_ptr;              /* Pointer to commarea  */

 /******************************************************************/
 /* Insert your own variables in here the following are an example */
 /******************************************************************/
 /* * * * * * * * S T A R T  E X A M P L E  C O D E  * * * * * * * */
 /******************************************************************/
  char pep_text_buffer[99]="";
  char pep_text_packed[20]="";
  char pep_text_tranid[5]="";
  char pep_text_termid[5]="";
  char pep_text_abenda[5]="";
  char pep_text_abendb[5]="";
  char *pep_msg_format_a="DFHPEP: %s at %s has abended %s & %s\n";
  char *pep_msg_format_b="DFHPEP: Task number was %s\n";
  char *pep_msg_format_c="DFHPEP: Task time   was %s\n";
  char *pep_msg_format_d="DFHPEP: Task date   was %s\n";
 /******************************************************************/
 /* * * * * * * * * E N D  E X A M P L E  C O D E  * * * * * * * * */
 /******************************************************************/

  EXEC CICS ADDRESS EIB(dfheiptr);        /* Address EIB          */

  if(dfheiptr->eibcalen) {                /* Check COMMAREA len>0 */

    EXEC CICS ADDRESS COMMAREA(comm_ptr); /* Address COMMAREA     */

 /******************************************************************/
 /* Insert your own code at this point, the following is an example*/
 /******************************************************************/
 /* * * * * * * * S T A R T  E X A M P L E  C O D E  * * * * * * * */
 /******************************************************************/

    strncpy(pep_text_tranid,comm_ptr->pep_com_users_eib.eibtrnid,4);
    strncpy(pep_text_termid,comm_ptr->pep_com_users_eib.eibtrmid,4);
    strncpy(pep_text_abenda,comm_ptr->pep_com_original_abend_code,4);
    strncpy(pep_text_abendb,comm_ptr->pep_com_current_abend_code,4);

    sprintf(pep_text_buffer,pep_msg_format_a,pep_text_tranid,
                                             pep_text_termid,
                                             pep_text_abenda,
                                             pep_text_abendb);

    EXEC CICS WRITE OPERATOR TEXT(pep_text_buffer)
                             TEXTLENGTH(strlen(pep_text_buffer));

    ptos(pep_text_packed,comm_ptr->pep_com_users_eib.eibtaskn);

    sprintf(pep_text_buffer,pep_msg_format_b,pep_text_packed);

    EXEC CICS WRITE OPERATOR TEXT(pep_text_buffer)
                             TEXTLENGTH(strlen(pep_text_buffer));

    ptos(pep_text_packed,comm_ptr->pep_com_users_eib.eibtime);

    sprintf(pep_text_buffer,pep_msg_format_c,pep_text_packed);

    EXEC CICS WRITE OPERATOR TEXT(pep_text_buffer)
                             TEXTLENGTH(strlen(pep_text_buffer));

    ptos(pep_text_packed,comm_ptr->pep_com_users_eib.eibdate);

    sprintf(pep_text_buffer,pep_msg_format_d,pep_text_packed);

    EXEC CICS WRITE OPERATOR TEXT(pep_text_buffer)
                             TEXTLENGTH(strlen(pep_text_buffer));

    comm_ptr->pep_com_return_code=PEP_COM_RETURN_DISABLE;

 /******************************************************************/
 /* * * * * * * * * E N D  E X A M P L E  C O D E  * * * * * * * * */
 /******************************************************************/

  }

  EXEC CICS RETURN;                       /* Return to CICS       */

}

 /******************************************************************/
 /* Example function to convert packed field to string for display.*/
 /******************************************************************/
void ptos(s_buff,p_buff)
char *s_buff,*p_buff;
{
  unsigned long  p_val;
  p_val=*(unsigned long *)p_buff;
  sprintf(s_buff,"%x",p_val>>4);
}
