 /********************************************************************/
 /*                                                                  */
 /* Module Name = DFH$FORP                                           */
 /*                                                                  */
 /* Descriptive Name = DB2 Formatting Sample Program                 */
 /*                                                                  */
 /*                                                                  */
 /*                                                                  */
 /*     Licensed Materials - Property of IBM                         */
 /*                                                                  */
 /*     "Restricted Materials of IBM"                                */
 /*                                                                  */
 /*     5655-Y04                                                     */
 /*                                                                  */
 /*     (C) Copyright IBM Corp. 1985, 2017"                          */
 /*                                                                  */
 /*                                                                  */
 /*                                                                  */
 /*                                                                  */
 /* Status = %SP00                                                   */
 /*                                                                  */
 /*------------------------------------------------------------------*/
 /*                                                                  */
 /* The function of this program is to format data passed to it      */
 /* via the user exit in the off-line utility program DFHCSDUP, into */
 /* a format suitable for the DB2 table load utility. The data is    */
 /* formatted into columns which correspond to the columns defined   */
 /* in the load utilities input. Each output record is identified    */
 /* by its first 4 characters, they are set to the first 4 characters*/
 /* of the resource type i.e PROG for PROGRAM, TERM for TERMINAL etc.*/
 /*                                                                  */
 /* This program is designed to work with any EXTRACT command of     */
 /* the form:                                                        */
 /*           EXTRACT GROUP(<group name> OBJECTS                     */
 /*          or                                                      */
 /*                EXTRACT LIST(<list name> OBJECTS                  */
 /*          where                                                   */
 /*               <group name> may be generic                        */
 /*               <list name> must not be generic                    */
 /*                                                                  */
 /* N.B This program must be link edited with the stub DFHEXLE.      */
 /*     It must also be AMODE(31) RMODE(24).                         */
 /*                                                                  */
 /*------------------------------------------------------------------*/
 /*                                                                  */
 /* Change Activity:                                                 */
 /*                                                                  */
 /*  $MOD(DFH$FORP),COMP(SAMPLES),PROD(CICS TS ):                    */
 /*   PN= REASON REL YYMMDD HDXIII : REMARKS                         */
 /*  $01= A67034 630 030505 HDNONER:VMigrate PQ67034 from SPA R620   */
 /*  $02= A81619 640 040302 HDBGNRB: Migrate PQ81619 from SPA R630   */
 /*  $P0= Mnnnnn 170 850808 HDZZUNK: Created.                        */
 /*  $P1= M90474 330 910807 HDBWSH : Prologue fixed.                 */
 /*  $P2= M90952 330 910926 HD4OGB : Change DPLSUBSET to EXECUTIONSET*/
 /*  $P3= M83879 410 930916 HD4OGB : Update                          */
 /*  $P4= D03353 620 011113 HD4PALS: Remove reference to DFHEXPI     */
 /*  $P5= D07535 630 030512 HD4PALS: RDO samples update for apar     */
 /*  $P6= D16268 650 060829 HD4PALS: Update RDO samples for ipconn   */
 /*  $P7= D15844 650 070126 HDBNJAS: Simplify parameter handling     */
 /*  $P8= D20748 660 080430 HD4PALS: SSLTYPE wrong for TCPIPSERVICE  */
 /*  $P9= D26604 670 110216 HDHBIMS: Update RDO samples              */
 /*  $L1= 660    410 920810 HD4OGB : Batch Call Interface            */
 /*  $L2= 647    410 930108 HD4OGB : Transaction Manager Domain      */
 /*  $L3= 614    410 930108 HD4OGB : Sympaty Sickness                */
 /*  $L4= 626    410 930605 HD4OGB : Transaction Isolation           */
 /*  $L5= 569    510 941021 HD4OGB : Rdo for Td                      */
 /*  $L6= 715    520 960417 HD4OGB : Rdo for RCT                     */
 /*  $L7= 709    530 971020 HD4OGB : Rdo for BAM                     */
 /*  $L8= 568    530 971020 HD4OGB : Rdo for TSmodel                 */
 /*  $L9= 703    530 971020 HD4OGB : Rdo for ENQmodel                */
 /*  $LA= 735    530 971020 HD4OGB : Rdo for REQUestmodel,           */
 /*                                  HTMLtemplate  and TCPIPservice  */
 /*  $LB= 795    610 000620 HD4PALS: Rdo for EJB                     */
 /*  $LC= 819    630 020607 HD4PALS : RDO samples updated for ATLAS  */
 /*  $LD= 813    630 020828 HD4PALS : Reinstate Asserted Identity    */
 /*  $LE= 852    640 041010 HD4PALS: Update RDO samples for apollo   */
 /*  $LF= 831    640 041124 HD4PALS: TCP/PRIVACY & COR/OUTPRIVACY obs*/
 /*  $LG= 710    650 060412 HD4PALS:  Update RDO samples for IPCONN  */
 /*  $LH= 710    650 061218 HD4PALS: add new library resource        */
 /*  $LI= 710    650 061220 HD4PALS: security attributes for IPCONN  */
 /*  $LJ= 710    650 070111 HD4PALS: ipconn userauth security        */
 /*  $LK= 907    660 071002 HD4PALS: Extend arg0 for new resources   */
 /*  $LL= 907    660 071129 HD4PALS: Defsig for audit                */
 /*  $LM= 830    660 080422 HD4PALS: IPV6 addresses                  */
 /*  $LN= 938    660 080526 HD4PALS: RDO Samples for BUNDLE          */
 /*  $LO= 830    660 080829 HD4PALS: Add port to URIMAP              */
 /*  $LP= 918    660 080830 HD4PALS: MQCONN setup                    */
 /*  $LR= 938    660 081121 HD4PALS: Add basescope attribute         */
 /*  $LS= 937    660 081230 HD4PALS: Add jvmserver                   */
 /*  $LT= 903    660 090102 HD4PALS: AUTHENTICATE on URIMAP          */
 /*  $LU= 903    660 090106 HD4PALS: Add idprop to IPCONN            */
 /*  $LV= R00207 670 091208 HD4PALT: TSMODEL defn extended           */
 /*  $LW= R00368 670 100104 HD4PALT: Externals for Mirror life time  */
 /*  $LX= R00279 670 100304 HD4PALT: JVMSERVER on PROGRAM definition */
 /*  $LZ= R12678 670 100629 HDHBIMS: Support 1-255 lsrpools          */
 /*  $M1= R13127 670 100818 HD4PALT: add archivefile to WEBSERVICE   */
 /*  $M2= R00552 670 101115 HD4PALT: socketclose for connection pool */
 /*  $M3= R22789 670 101217 HD4PALT: GROUPRESYNC added to MQCONN     */
 /*  $D1= I07267 630 020418 HDHYJB : Compile all samples             */
 /*  $D2= I07593 640 041122 HD4PALS: Add REDIRECTTYPE on URIMAP      */
 /*  $D3= I07861 650 070321 HD4PALS: Add linkauth to IPCONN          */
 /*       R78960 690 131113 HDAFDRB: Changes for EXPIRYINTMIN        */
 /*       R78960 690 131118 HDAFDRB: Changes for other keywords      */
 /*      R110014 710 160130 HDFVGMB: RDO for MQMONITOR               */
 /********************************************************************/

 FORMCSD: PROC( EXIT_FUNCTION_CODE,
                EXIT_WORK_AREA_PTR,
                EXIT_BACK_TRANSLATED_CMD_PTR,
                EXIT_LIST_NAME,
                EXIT_GROUP_NAME,
                EXIT_OBJECT_TYPE,
                EXIT_OBJECT_NAME,
                EXIT_KEYWORD_NAME,
                EXIT_KEYWORD_LENGTH,
                EXIT_KEYWORD_VALUE ) OPTIONS(ASM RETCODE);      /*@P7C*/

                                   /* User exit call type code   */
   DCL  EXIT_FUNCTION_CODE                BINARY FIXED(15);     /*@P7C*/
                                  /* User work area ptr          */
   DCL  EXIT_WORK_AREA_PTR                POINTER;              /*@P7C*/
                                  /* Back translated command ptr */
   DCL  EXIT_BACK_TRANSLATED_CMD_PTR      POINTER;              /*@P7C*/
                                  /* RDO List name               */
   DCL  EXIT_LIST_NAME                    CHAR(8);              /*@P7C*/
                                  /* RDO Group name              */
   DCL  EXIT_GROUP_NAME                   CHAR(8);              /*@P7C*/
                                  /* Object type                 */
   DCL  EXIT_OBJECT_TYPE                  CHAR(12);             /*@P7C*/
                                  /* Object name                 */
   DCL  EXIT_OBJECT_NAME                  CHAR(8);              /*@P7C*/
                                  /* Keyword name                */
   DCL  EXIT_KEYWORD_NAME                 CHAR(12);             /*@P7C*/
                                  /* Keyword length of value     */
   DCL  EXIT_KEYWORD_LENGTH               BINARY FIXED(15);     /*@P7C*/
                                  /* Keyword value               */
   DCL  EXIT_KEYWORD_VALUE                CHAR(255);            /*@P7C*/

                                  /* Return code from exit       */
   DCL  EXIT_RETURN_CODE                  FIXED BIN(31) INIT(0);
 %PAGE;

 /* **************************************************************** */
 /* Define the settings of the return code                           */
 /* **************************************************************** */
   DCL OBJECTS_OPTION_MISSING             BINARY FIXED(31) INIT(1);
   DCL OUTPUT_FILE_OPEN_ERROR             BINARY FIXED(31) INIT(2);
   DCL OUPUT_FILE_WRITE_ERROR             BINARY FIXED(31) INIT(3);
   DCL GETMAIN_ERROR                      BINARY FIXED(31) INIT(4);
   DCL KEYWORD_LENGTH_ERROR               BINARY FIXED(31) INIT(5);
   DCL KEYWORD_DISP_TABLE_ERROR           BINARY FIXED(31) INIT(6);
   DCL UNDEFINED_RESOURCE_TYPE            BINARY FIXED(31) INIT(7);

 /* **************************************************************** */
 /* Define maximum length of a keyword value. That is the            */
 /* ENQNAME keyword on an ENQMODEL definition                        */
 /* **************************************************************** */
   DCL MAX_KEYWORD_LENGTH                 BINARY FIXED(31) INIT(255);

 /* ********************** */
 /* Define the output file */
 /* ********************** */

   DCL FOROUT                            FILE OUTPUT
                                               RECORD
                                               SEQUENTIAL
                                               ENV(F RECSIZE(1536)
                                                     BLKSIZE(1536))
                                               BUFFERED;
 /* **************************************************************** */
 /* Declare the users work area. This is addressed via a pointer in  */
 /* the 4 byte work area provided by the exit in DFHCSDUP.           */
 /* **************************************************************** */
   DCL WORK_AREA_PTR                      POINTER
                                          BASED(EXIT_WORK_AREA_PTR);

   DCL 1 USER_WORK_AREA                   BASED(WORK_AREA_PTR),
         3  FORMATTED_RECORD_BUFFER       CHAR(1536),
         /* ******************************************************** */
         /* The following pointer is set on every 'object start'     */
         /* call to the appropriate 'definition table'. It is then   */
         /* incremented on every subsequent 'detail' call to point to*/
         /* the next keyword displacement, for the current object,   */
         /* in the output buffer.                                    */
         /* ******************************************************** */
         3  KEYWORD_DISP_TABLE_PTR        POINTER,
         3  OUTPUT_FILE_OPEN              BIT(1);

 /* **************************************************************** */
 /* Declare built in functions used in this program                  */
 /* **************************************************************** */
   DCL(NULL,
       ADDR,
       LENGTH,
       PLIDUMP,
       ONCODE,
       INDEX,
       SUBSTR)                            BUILTIN;
 /* ********************************** */
 /* Declare keyword displacement table */
 /* ********************************** */
 DCL 1 KEYWORD_DISP_TABLE_ENTRY         BASED(KEYWORD_DISP_TABLE_PTR),
       3  KEYWORD_DISPLACEMENT          BINARY FIXED(15),
       3  NEXT_KEYWORD_DISPLACEMENT     BINARY FIXED(15);
 %PAGE;
 /* **************************************************************** */
 /*               K E Y W O R D  D E T A I L  T A B L E              */
 /*                                                                  */
 /* This table defines the positions in the output buffer for each of*/
 /* the keyword values associated with each resource type. The order */
 /* of the the entries for each resource type is that produced by the*/
 /* LIST function of the off-line utility (and also as displayed on  */
 /* the CEDA panels). If any keywords are added or deleted, or a new */
 /* value is added to the list of possible values for a keyword, then*/
 /* the appropriate entry must be updated to reflect this.           */
 /*                                                                  */
 /* N.B The offsets  defined by this table are exactly the same as   */
 /*     those defined to the DB2 load utility and must remain        */
 /*     equivalent. So ensure that any changes are made to it are    */
 /*     reflected in the input to the load utility.                  */
 /*                                                                  */
 /* **************************************************************** */
 %PAGE;
                                                                     /*
   1) ATOMSERVICE
                                                                     */
   DCL 1 ATOMSERVICE_DEFINITION    STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  ATOMTYPE               BINARY FIXED(15)     INIT(79),
         3  STATUS                 BINARY FIXED(15)     INIT(89),
         3  CONFIGFILE             BINARY FIXED(15)     INIT(97),
         3  RESOURCENAME           BINARY FIXED(15)     INIT(352),
         3  RESOURCETYPE           BINARY FIXED(15)     INIT(368),
         3  BINDFILE               BINARY FIXED(15)     INIT(375),
         3  DEFINETIME             BINARY FIXED(15)     INIT(630),
         3  CHANGETIME             BINARY FIXED(15)     INIT(647),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(664),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(672),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(680),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   2) BUNDLE
                                                                     */
   DCL 1 BUNDLE_DEFINITION         STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  STATUS                 BINARY FIXED(15)     INIT(79),
         3  BUNDLEDIR              BINARY FIXED(15)     INIT(87),
         3  BASESCOPE              BINARY FIXED(15)     INIT(342),
         3  DEFINETIME             BINARY FIXED(15)     INIT(597),
         3  CHANGETIME             BINARY FIXED(15)     INIT(614),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(631),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(639),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(647),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   3) CONNECTION
                                                                     */
   DCL 1 CONNECTION_DEFINITION     STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  NETNAME                BINARY FIXED(15)     INIT(79),
         3  INDSYS                 BINARY FIXED(15)     INIT(87),
         3  REMOTESYSTEM           BINARY FIXED(15)     INIT(91),
         3  REMOTENAME             BINARY FIXED(15)     INIT(95),
         3  REMOTESYSNET           BINARY FIXED(15)     INIT(99),
         3  ACCESSMETHOD           BINARY FIXED(15)     INIT(107),
         3  PROTOCOL               BINARY FIXED(15)     INIT(115),
         3  CONNTYPE               BINARY FIXED(15)     INIT(119),
         3  SINGLESESS             BINARY FIXED(15)     INIT(127),
         3  DATASTREAM             BINARY FIXED(15)     INIT(130),
         3  RECORDFORMAT           BINARY FIXED(15)     INIT(138),
         3  QUEUELIMIT             BINARY FIXED(15)     INIT(140),
         3  MAXQTIME               BINARY FIXED(15)     INIT(144),
         3  AUTOCONNECT            BINARY FIXED(15)     INIT(148),
         3  INSERVICE              BINARY FIXED(15)     INIT(151),
         3  SECURITYNAME           BINARY FIXED(15)     INIT(154),
         3  ATTACHSEC              BINARY FIXED(15)     INIT(162),
         3  BINDSECURITY           BINARY FIXED(15)     INIT(172),
         3  USEDFLTUSER            BINARY FIXED(15)     INIT(175),
         3  PSRECOVERY             BINARY FIXED(15)     INIT(178),
         3  XLNACTION              BINARY FIXED(15)     INIT(188),
         3  DEFINETIME             BINARY FIXED(15)     INIT(193),
         3  CHANGETIME             BINARY FIXED(15)     INIT(210),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(227),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(235),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(243),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   4) CORBASERVER
                                                                     */
   DCL 1 CORBASERVER_DEFINITION    STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  JNDIPREFIX             BINARY FIXED(15)     INIT(79),
         3  AUTOPUBLISH            BINARY FIXED(15)     INIT(334),
         3  SESSBEANTIME           BINARY FIXED(15)     INIT(337),
         3  SHELF                  BINARY FIXED(15)     INIT(345),
         3  DJARDIR                BINARY FIXED(15)     INIT(600),
         3  STATUS                 BINARY FIXED(15)     INIT(855),
         3  HOST                   BINARY FIXED(15)     INIT(863),
         3  CERTIFICATE            BINARY FIXED(15)     INIT(1118),
         3  UNAUTH                 BINARY FIXED(15)     INIT(1174),
         3  CLIENTCERT             BINARY FIXED(15)     INIT(1182),
         3  SSLUNAUTH              BINARY FIXED(15)     INIT(1190),
         3  ASSERTED               BINARY FIXED(15)     INIT(1198),
         3  CIPHERS                BINARY FIXED(15)     INIT(1206),
         3  DEFINETIME             BINARY FIXED(15)     INIT(1262),
         3  CHANGETIME             BINARY FIXED(15)     INIT(1279),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(1296),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(1304),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(1312),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   5) DB2CONN
                                                                     */
   DCL 1 DB2CONN_DEFINITION        STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  CONNECTERROR           BINARY FIXED(15)     INIT(79),
         3  DB2GROUPID             BINARY FIXED(15)     INIT(86),
         3  DB2ID                  BINARY FIXED(15)     INIT(90),
         3  MSGQUEUE1              BINARY FIXED(15)     INIT(94),
         3  MSGQUEUE2              BINARY FIXED(15)     INIT(98),
         3  MSGQUEUE3              BINARY FIXED(15)     INIT(102),
         3  NONTERMREL             BINARY FIXED(15)     INIT(106),
         3  PURGECYCLE             BINARY FIXED(15)     INIT(109),
         3  RESYNCMEMBER           BINARY FIXED(15)     INIT(114),
         3  REUSELIMIT             BINARY FIXED(15)     INIT(117),
         3  SIGNID                 BINARY FIXED(15)     INIT(122),
         3  STANDBYMODE            BINARY FIXED(15)     INIT(130),
         3  STATSQUEUE             BINARY FIXED(15)     INIT(139),
         3  TCBLIMIT               BINARY FIXED(15)     INIT(143),
         3  THREADERROR            BINARY FIXED(15)     INIT(147),
         3  ACCOUNTREC             BINARY FIXED(15)     INIT(152),
         3  AUTHID                 BINARY FIXED(15)     INIT(156),
         3  AUTHTYPE               BINARY FIXED(15)     INIT(164),
         3  DROLLBACK              BINARY FIXED(15)     INIT(170),
         3  PLAN                   BINARY FIXED(15)     INIT(173),
         3  PLANEXITNAME           BINARY FIXED(15)     INIT(181),
         3  PRIORITY               BINARY FIXED(15)     INIT(189),
         3  THREADLIMIT            BINARY FIXED(15)     INIT(194),
         3  THREADWAIT             BINARY FIXED(15)     INIT(198),
         3  COMAUTHID              BINARY FIXED(15)     INIT(201),
         3  COMAUTHTYPE            BINARY FIXED(15)     INIT(209),
         3  COMTHREADLIM           BINARY FIXED(15)     INIT(215),
         3  DEFINETIME             BINARY FIXED(15)     INIT(219),
         3  CHANGETIME             BINARY FIXED(15)     INIT(236),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(253),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(261),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(269),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   6) DB2ENTRY
                                                                     */
   DCL 1 DB2ENTRY_DEFINITION       STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  TRANSID                BINARY FIXED(15)     INIT(79),
         3  ACCOUNTREC             BINARY FIXED(15)     INIT(83),
         3  AUTHID                 BINARY FIXED(15)     INIT(87),
         3  AUTHTYPE               BINARY FIXED(15)     INIT(95),
         3  DROLLBACK              BINARY FIXED(15)     INIT(101),
         3  PLAN                   BINARY FIXED(15)     INIT(104),
         3  PLANEXITNAME           BINARY FIXED(15)     INIT(112),
         3  PRIORITY               BINARY FIXED(15)     INIT(120),
         3  PROTECTNUM             BINARY FIXED(15)     INIT(125),
         3  THREADLIMIT            BINARY FIXED(15)     INIT(129),
         3  THREADWAIT             BINARY FIXED(15)     INIT(133),
         3  DEFINETIME             BINARY FIXED(15)     INIT(137),
         3  CHANGETIME             BINARY FIXED(15)     INIT(154),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(171),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(179),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(187),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   7) DB2TRAN
                                                                     */
   DCL 1 DB2TRAN_DEFINITION        STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  ENTRY                  BINARY FIXED(15)     INIT(79),
         3  TRANSID                BINARY FIXED(15)     INIT(87),
         3  DEFINETIME             BINARY FIXED(15)     INIT(91),
         3  CHANGETIME             BINARY FIXED(15)     INIT(108),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(125),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(133),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(141),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   8) DJAR
                                                                     */
   DCL 1 DJAR_DEFINITION           STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  CORBASERVER            BINARY FIXED(15)     INIT(79),
         3  HFSFILE                BINARY FIXED(15)     INIT(83),
         3  DEFINETIME             BINARY FIXED(15)     INIT(338),
         3  CHANGETIME             BINARY FIXED(15)     INIT(355),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(372),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(380),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(388),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   9) DOCTEMPLATE
                                                                     */
   DCL 1 DOCTEMPLATE_DEFINITION    STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  TEMPLATENAME           BINARY FIXED(15)     INIT(79),
         3  FILE                   BINARY FIXED(15)     INIT(127),
         3  TSQUEUE                BINARY FIXED(15)     INIT(135),
         3  TDQUEUE                BINARY FIXED(15)     INIT(151),
         3  PROGRAM                BINARY FIXED(15)     INIT(155),
         3  EXITPGM                BINARY FIXED(15)     INIT(163),
         3  DDNAME                 BINARY FIXED(15)     INIT(171),
         3  MEMBERNAME             BINARY FIXED(15)     INIT(179),
         3  HFSFILE                BINARY FIXED(15)     INIT(187),
         3  APPENDCRLF             BINARY FIXED(15)     INIT(442),
         3  TYPE                   BINARY FIXED(15)     INIT(445),
         3  DEFINETIME             BINARY FIXED(15)     INIT(451),
         3  CHANGETIME             BINARY FIXED(15)     INIT(468),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(485),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(493),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(501),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   10) ENQMODEL
                                                                     */
   DCL 1 ENQMODEL_DEFINITION       STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  ENQSCOPE               BINARY FIXED(15)     INIT(79),
         3  STATUS                 BINARY FIXED(15)     INIT(83),
         3  ENQNAME                BINARY FIXED(15)     INIT(91),
         3  DEFINETIME             BINARY FIXED(15)     INIT(346),
         3  CHANGETIME             BINARY FIXED(15)     INIT(363),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(380),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(388),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(396),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   11) FILE
                                                                     */
   DCL 1 FILE_DEFINITION           STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  DSNAME                 BINARY FIXED(15)     INIT(79),
    /*   3  PASSWORD               BINARY FIXED(15)     IN,@PI59763D */
         3  RLSACCESS              BINARY FIXED(15)     INIT(123),
         3  LSRPOOLNUM             BINARY FIXED(15)     INIT(126),
         3  READINTEG              BINARY FIXED(15)     INIT(129),
         3  DSNSHARING             BINARY FIXED(15)     INIT(140),
         3  STRINGS                BINARY FIXED(15)     INIT(150),
         3  NSRGROUP               BINARY FIXED(15)     INIT(153),
         3  REMOTESYSTEM           BINARY FIXED(15)     INIT(161),
         3  REMOTENAME             BINARY FIXED(15)     INIT(165),
         3  RECORDSIZE             BINARY FIXED(15)     INIT(173),
         3  KEYLENGTH              BINARY FIXED(15)     INIT(178),
         3  STATUS                 BINARY FIXED(15)     INIT(181),
         3  OPENTIME               BINARY FIXED(15)     INIT(190),
         3  DISPOSITION            BINARY FIXED(15)     INIT(198),
         3  DATABUFFERS            BINARY FIXED(15)     INIT(203),
         3  INDEXBUFFERS           BINARY FIXED(15)     INIT(208),
         3  TABLE                  BINARY FIXED(15)     INIT(213),
         3  MAXNUMRECS             BINARY FIXED(15)     INIT(217),
         3  CFDTPOOL               BINARY FIXED(15)     INIT(225),
         3  TABLENAME              BINARY FIXED(15)     INIT(233),
         3  UPDATEMODEL            BINARY FIXED(15)     INIT(241),
         3  LOAD                   BINARY FIXED(15)     INIT(251),
         3  RECORDFORMAT           BINARY FIXED(15)     INIT(254),
         3  ADD                    BINARY FIXED(15)     INIT(255),
         3  BROWSE                 BINARY FIXED(15)     INIT(258),
         3  DELETE                 BINARY FIXED(15)     INIT(261),
         3  READ                   BINARY FIXED(15)     INIT(264),
         3  UPDATE                 BINARY FIXED(15)     INIT(267),
         3  JOURNAL                BINARY FIXED(15)     INIT(270),
         3  JNLREAD                BINARY FIXED(15)     INIT(272),
         3  JNLSYNCREAD            BINARY FIXED(15)     INIT(282),
         3  JNLUPDATE              BINARY FIXED(15)     INIT(285),
         3  JNLADD                 BINARY FIXED(15)     INIT(288),
         3  JNLSYNCWRITE           BINARY FIXED(15)     INIT(294),
         3  RECOVERY               BINARY FIXED(15)     INIT(297),
         3  FWDRECOVLOG            BINARY FIXED(15)     INIT(308),
         3  BACKUPTYPE             BINARY FIXED(15)     INIT(310),
         3  DEFINETIME             BINARY FIXED(15)     INIT(317),
         3  CHANGETIME             BINARY FIXED(15)     INIT(334),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(351),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(359),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(367),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   12) IPCONN
                                                                     */
   DCL 1 IPCONN_DEFINITION         STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  APPLID                 BINARY FIXED(15)     INIT(79),
         3  NETWORKID              BINARY FIXED(15)     INIT(87),
         3  HOST                   BINARY FIXED(15)     INIT(95),
         3  PORT                   BINARY FIXED(15)     INIT(211),
         3  TCPIPSERVICE           BINARY FIXED(15)     INIT(216),
         3  HA                     BINARY FIXED(15)     INIT(224),
         3  RECEIVECOUNT           BINARY FIXED(15)     INIT(227),
         3  SENDCOUNT              BINARY FIXED(15)     INIT(230),
         3  QUEUELIMIT             BINARY FIXED(15)     INIT(233),
         3  MAXQTIME               BINARY FIXED(15)     INIT(237),
         3  AUTOCONNECT            BINARY FIXED(15)     INIT(241),
         3  INSERVICE              BINARY FIXED(15)     INIT(244),
         3  SSL                    BINARY FIXED(15)     INIT(247),
         3  CERTIFICATE            BINARY FIXED(15)     INIT(250),
         3  CIPHERS                BINARY FIXED(15)     INIT(282),
         3  LINKAUTH               BINARY FIXED(15)     INIT(338),
         3  SECURITYNAME           BINARY FIXED(15)     INIT(346),
         3  USERAUTH               BINARY FIXED(15)     INIT(354),
         3  IDPROP                 BINARY FIXED(15)     INIT(365),
         3  XLNACTION              BINARY FIXED(15)     INIT(375),
         3  MIRRORLIFE             BINARY FIXED(15)     INIT(380),
         3  DEFINETIME             BINARY FIXED(15)     INIT(387),
         3  CHANGETIME             BINARY FIXED(15)     INIT(404),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(421),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(429),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(437),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   13) JOURNALMODEL
                                                                     */
   DCL 1 JOURNALMODEL_DEFINITION   STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  JOURNALNAME            BINARY FIXED(15)     INIT(79),
         3  TYPE                   BINARY FIXED(15)     INIT(87),
         3  STREAMNAME             BINARY FIXED(15)     INIT(90),
         3  DEFINETIME             BINARY FIXED(15)     INIT(116),
         3  CHANGETIME             BINARY FIXED(15)     INIT(133),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(150),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(158),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(166),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   14) JVMSERVER
                                                                     */
   DCL 1 JVMSERVER_DEFINITION      STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  STATUS                 BINARY FIXED(15)     INIT(79),
         3  JVMPROFILE             BINARY FIXED(15)     INIT(87),
         3  LERUNOPTS              BINARY FIXED(15)     INIT(95),
         3  THREADLIMIT            BINARY FIXED(15)     INIT(103),
         3  DEFINETIME             BINARY FIXED(15)     INIT(106),
         3  CHANGETIME             BINARY FIXED(15)     INIT(123),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(140),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(148),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(156),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   15) LIBRARY
                                                                     */
   DCL 1 LIBRARY_DEFINITION        STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  RANKING                BINARY FIXED(15)     INIT(79),
         3  CRITICAL               BINARY FIXED(15)     INIT(81),
         3  STATUS                 BINARY FIXED(15)     INIT(84),
         3  DSNAME01               BINARY FIXED(15)     INIT(92),
         3  DSNAME02               BINARY FIXED(15)     INIT(136),
         3  DSNAME03               BINARY FIXED(15)     INIT(180),
         3  DSNAME04               BINARY FIXED(15)     INIT(224),
         3  DSNAME05               BINARY FIXED(15)     INIT(268),
         3  DSNAME06               BINARY FIXED(15)     INIT(312),
         3  DSNAME07               BINARY FIXED(15)     INIT(356),
         3  DSNAME08               BINARY FIXED(15)     INIT(400),
         3  DSNAME09               BINARY FIXED(15)     INIT(444),
         3  DSNAME10               BINARY FIXED(15)     INIT(488),
         3  DSNAME11               BINARY FIXED(15)     INIT(532),
         3  DSNAME12               BINARY FIXED(15)     INIT(576),
         3  DSNAME13               BINARY FIXED(15)     INIT(620),
         3  DSNAME14               BINARY FIXED(15)     INIT(664),
         3  DSNAME15               BINARY FIXED(15)     INIT(708),
         3  DSNAME16               BINARY FIXED(15)     INIT(752),
         3  DEFINETIME             BINARY FIXED(15)     INIT(796),
         3  CHANGETIME             BINARY FIXED(15)     INIT(813),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(830),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(838),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(846),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   16) LSRPOOL
                                                                     */
   DCL 1 LSRPOOL_DEFINITION        STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  LSRPOOLNUM             BINARY FIXED(15)     INIT(79),
         3  MAXKEYLENGTH           BINARY FIXED(15)     INIT(82),
         3  SHARELIMIT             BINARY FIXED(15)     INIT(85),
         3  STRINGS                BINARY FIXED(15)     INIT(88),
         3  DATA512                BINARY FIXED(15)     INIT(91),
         3  DATA1K                 BINARY FIXED(15)     INIT(96),
         3  DATA2K                 BINARY FIXED(15)     INIT(101),
         3  DATA4K                 BINARY FIXED(15)     INIT(106),
         3  DATA8K                 BINARY FIXED(15)     INIT(111),
         3  DATA12K                BINARY FIXED(15)     INIT(116),
         3  DATA16K                BINARY FIXED(15)     INIT(121),
         3  DATA20K                BINARY FIXED(15)     INIT(126),
         3  DATA24K                BINARY FIXED(15)     INIT(131),
         3  DATA28K                BINARY FIXED(15)     INIT(136),
         3  DATA32K                BINARY FIXED(15)     INIT(141),
         3  INDEX512               BINARY FIXED(15)     INIT(146),
         3  INDEX1K                BINARY FIXED(15)     INIT(151),
         3  INDEX2K                BINARY FIXED(15)     INIT(156),
         3  INDEX4K                BINARY FIXED(15)     INIT(161),
         3  INDEX8K                BINARY FIXED(15)     INIT(166),
         3  INDEX12K               BINARY FIXED(15)     INIT(171),
         3  INDEX16K               BINARY FIXED(15)     INIT(176),
         3  INDEX20K               BINARY FIXED(15)     INIT(181),
         3  INDEX24K               BINARY FIXED(15)     INIT(186),
         3  INDEX28K               BINARY FIXED(15)     INIT(191),
         3  INDEX32K               BINARY FIXED(15)     INIT(196),
         3  HSDATA4K               BINARY FIXED(15)     INIT(201),
         3  HSDATA8K               BINARY FIXED(15)     INIT(209),
         3  HSDATA12K              BINARY FIXED(15)     INIT(217),
         3  HSDATA16K              BINARY FIXED(15)     INIT(225),
         3  HSDATA20K              BINARY FIXED(15)     INIT(233),
         3  HSDATA24K              BINARY FIXED(15)     INIT(241),
         3  HSDATA28K              BINARY FIXED(15)     INIT(249),
         3  HSDATA32K              BINARY FIXED(15)     INIT(257),
         3  HSINDEX4K              BINARY FIXED(15)     INIT(265),
         3  HSINDEX8K              BINARY FIXED(15)     INIT(273),
         3  HSINDEX12K             BINARY FIXED(15)     INIT(281),
         3  HSINDEX16K             BINARY FIXED(15)     INIT(289),
         3  HSINDEX20K             BINARY FIXED(15)     INIT(297),
         3  HSINDEX24K             BINARY FIXED(15)     INIT(305),
         3  HSINDEX28K             BINARY FIXED(15)     INIT(313),
         3  HSINDEX32K             BINARY FIXED(15)     INIT(321),
         3  DEFINETIME             BINARY FIXED(15)     INIT(329),
         3  CHANGETIME             BINARY FIXED(15)     INIT(346),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(363),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(371),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(379),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   17) MAPSET
                                                                     */
   DCL 1 MAPSET_DEFINITION         STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  RESIDENT               BINARY FIXED(15)     INIT(79),
         3  USAGE                  BINARY FIXED(15)     INIT(82),
         3  USELPACOPY             BINARY FIXED(15)     INIT(91),
         3  STATUS                 BINARY FIXED(15)     INIT(94),
         3  DEFINETIME             BINARY FIXED(15)     INIT(102),
         3  CHANGETIME             BINARY FIXED(15)     INIT(119),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(136),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(144),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(152),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   18) MQCONN
                                                                     */
   DCL 1 MQCONN_DEFINITION         STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  MQNAME                 BINARY FIXED(15)     INIT(79),
         3  RESYNCMEMBER           BINARY FIXED(15)     INIT(83),
         3  INITQNAME              BINARY FIXED(15)     INIT(94),
         3  DEFINETIME             BINARY FIXED(15)     INIT(142),
         3  CHANGETIME             BINARY FIXED(15)     INIT(159),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(176),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(184),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(192),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   19) MQMONITOR
                                                                     */
   DCL 1 MQMONITOR_DEFINITION      STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  STATUS                 BINARY FIXED(15)     INIT(79),
         3  AUTOSTART              BINARY FIXED(15)     INIT(87),
         3  MONDATA                BINARY FIXED(15)     INIT(90),
         3  MONUSERID              BINARY FIXED(15)     INIT(290),
         3  QNAME                  BINARY FIXED(15)     INIT(298),
         3  TRANSACTION            BINARY FIXED(15)     INIT(346),
         3  USERID                 BINARY FIXED(15)     INIT(350),
         3  DEFINETIME             BINARY FIXED(15)     INIT(358),
         3  CHANGETIME             BINARY FIXED(15)     INIT(375),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(392),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(400),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(408),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   20) PARTITIONSET
                                                                     */
   DCL 1 PARTITIONSET_DEFINITION   STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  RESIDENT               BINARY FIXED(15)     INIT(79),
         3  USAGE                  BINARY FIXED(15)     INIT(82),
         3  USELPACOPY             BINARY FIXED(15)     INIT(91),
         3  STATUS                 BINARY FIXED(15)     INIT(94),
         3  DEFINETIME             BINARY FIXED(15)     INIT(102),
         3  CHANGETIME             BINARY FIXED(15)     INIT(119),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(136),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(144),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(152),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   21) PARTNER
                                                                     */
   DCL 1 PARTNER_DEFINITION        STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  NETNAME                BINARY FIXED(15)     INIT(79),
         3  NETWORK                BINARY FIXED(15)     INIT(87),
         3  PROFILE                BINARY FIXED(15)     INIT(95),
         3  TPNAME                 BINARY FIXED(15)     INIT(103),
         3  XTPNAME                BINARY FIXED(15)     INIT(167),
         3  DEFINETIME             BINARY FIXED(15)     INIT(295),
         3  CHANGETIME             BINARY FIXED(15)     INIT(312),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(329),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(337),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(345),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   22) PIPELINE
                                                                     */
   DCL 1 PIPELINE_DEFINITION       STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  STATUS                 BINARY FIXED(15)     INIT(79),
         3  RESPWAIT               BINARY FIXED(15)     INIT(87),
         3  CONFIGFILE             BINARY FIXED(15)     INIT(91),
         3  SHELF                  BINARY FIXED(15)     INIT(346),
         3  WSDIR                  BINARY FIXED(15)     INIT(601),
         3  DEFINETIME             BINARY FIXED(15)     INIT(856),
         3  CHANGETIME             BINARY FIXED(15)     INIT(873),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(890),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(898),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(906),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   23) PROCESSTYPE
                                                                     */
   DCL 1 PROCESSTYPE_DEFINITION    STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  STATUS                 BINARY FIXED(15)     INIT(79),
         3  FILE                   BINARY FIXED(15)     INIT(87),
         3  AUDITLOG               BINARY FIXED(15)     INIT(95),
         3  AUDITLEVEL             BINARY FIXED(15)     INIT(103),
         3  DEFINETIME             BINARY FIXED(15)     INIT(111),
         3  CHANGETIME             BINARY FIXED(15)     INIT(128),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(145),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(153),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(161),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   24) PROFILE
                                                                     */
   DCL 1 PROFILE_DEFINITION        STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  SCRNSIZE               BINARY FIXED(15)     INIT(79),
         3  UCTRAN                 BINARY FIXED(15)     INIT(88),
         3  MODENAME               BINARY FIXED(15)     INIT(91),
         3  FACILITYLIKE           BINARY FIXED(15)     INIT(99),
         3  PRINTERCOMP            BINARY FIXED(15)     INIT(103),
         3  JOURNAL                BINARY FIXED(15)     INIT(106),
         3  MSGJRNL                BINARY FIXED(15)     INIT(108),
         3  MSGINTEG               BINARY FIXED(15)     INIT(114),
         3  ONEWTE                 BINARY FIXED(15)     INIT(117),
         3  CHAINCONTROL           BINARY FIXED(15)     INIT(120),
         3  DVSUPRT                BINARY FIXED(15)     INIT(123),
         3  INBFMH                 BINARY FIXED(15)     INIT(130),
         3  RAQ                    BINARY FIXED(15)     INIT(134),
         3  LOGREC                 BINARY FIXED(15)     INIT(137),
         3  NEPCLASS               BINARY FIXED(15)     INIT(140),
         3  RTIMOUT                BINARY FIXED(15)     INIT(143),
         3  DEFINETIME             BINARY FIXED(15)     INIT(147),
         3  CHANGETIME             BINARY FIXED(15)     INIT(164),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(181),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(189),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(197),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   25) PROGRAM
                                                                     */
   DCL 1 PROGRAM_DEFINITION        STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  LANGUAGE               BINARY FIXED(15)     INIT(79),
         3  RELOAD                 BINARY FIXED(15)     INIT(88),
         3  RESIDENT               BINARY FIXED(15)     INIT(91),
         3  USAGE                  BINARY FIXED(15)     INIT(94),
         3  USELPACOPY             BINARY FIXED(15)     INIT(103),
         3  STATUS                 BINARY FIXED(15)     INIT(106),
         3  CEDF                   BINARY FIXED(15)     INIT(114),
         3  DATALOCATION           BINARY FIXED(15)     INIT(117),
         3  EXECKEY                BINARY FIXED(15)     INIT(122),
         3  CONCURRENCY            BINARY FIXED(15)     INIT(126),
         3  API                    BINARY FIXED(15)     INIT(136),
         3  DYNAMIC                BINARY FIXED(15)     INIT(143),
         3  REMOTESYSTEM           BINARY FIXED(15)     INIT(146),
         3  REMOTENAME             BINARY FIXED(15)     INIT(150),
         3  TRANSID                BINARY FIXED(15)     INIT(158),
         3  EXECUTIONSET           BINARY FIXED(15)     INIT(162),
         3  JVM                    BINARY FIXED(15)     INIT(171),
         3  JVMCLASS               BINARY FIXED(15)     INIT(174),
         3  JVMSERVER              BINARY FIXED(15)     INIT(429),
         3  DEFINETIME             BINARY FIXED(15)     INIT(437),
         3  CHANGETIME             BINARY FIXED(15)     INIT(454),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(471),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(479),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(487),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   26) REQUESTMODEL
                                                                     */
   DCL 1 REQUESTMODEL_DEFINITION   STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  CORBASERVER            BINARY FIXED(15)     INIT(79),
         3  TYPE                   BINARY FIXED(15)     INIT(83),
         3  BEANNAME               BINARY FIXED(15)     INIT(90),
         3  INTFACETYPE            BINARY FIXED(15)     INIT(330),
         3  MODULE                 BINARY FIXED(15)     INIT(336),
         3  INTERFACE              BINARY FIXED(15)     INIT(591),
         3  OPERATION              BINARY FIXED(15)     INIT(846),
         3  TRANSID                BINARY FIXED(15)     INIT(1101),
         3  DEFINETIME             BINARY FIXED(15)     INIT(1105),
         3  CHANGETIME             BINARY FIXED(15)     INIT(1122),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(1139),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(1147),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(1155),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   27) SESSIONS
                                                                     */
   DCL 1 SESSIONS_DEFINITION       STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  CONNECTION             BINARY FIXED(15)     INIT(79),
         3  SESSNAME               BINARY FIXED(15)     INIT(83),
         3  NETNAMEQ               BINARY FIXED(15)     INIT(87),
         3  MODENAME               BINARY FIXED(15)     INIT(95),
         3  PROTOCOL               BINARY FIXED(15)     INIT(103),
         3  MAXIMUM                BINARY FIXED(15)     INIT(107),
         3  RECEIVEPFX             BINARY FIXED(15)     INIT(114),
         3  RECEIVECOUNT           BINARY FIXED(15)     INIT(116),
         3  SENDPFX                BINARY FIXED(15)     INIT(119),
         3  SENDCOUNT              BINARY FIXED(15)     INIT(121),
         3  SENDSIZE               BINARY FIXED(15)     INIT(124),
         3  RECEIVESIZE            BINARY FIXED(15)     INIT(129),
         3  SESSPRIORITY           BINARY FIXED(15)     INIT(134),
         3  USERID                 BINARY FIXED(15)     INIT(137),
         3  AUTOCONNECT            BINARY FIXED(15)     INIT(145),
         3  BUILDCHAIN             BINARY FIXED(15)     INIT(148),
         3  USERAREALEN            BINARY FIXED(15)     INIT(151),
         3  IOAREALEN              BINARY FIXED(15)     INIT(154),
         3  RELREQ                 BINARY FIXED(15)     INIT(165),
         3  DISCREQ                BINARY FIXED(15)     INIT(168),
         3  NEPCLASS               BINARY FIXED(15)     INIT(171),
         3  RECOVOPTION            BINARY FIXED(15)     INIT(174),
         3  DEFINETIME             BINARY FIXED(15)     INIT(185),
         3  CHANGETIME             BINARY FIXED(15)     INIT(202),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(219),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(227),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(235),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   28) TCPIPSERVICE
                                                                     */
   DCL 1 TCPIPSERVICE_DEFINITION   STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  URM                    BINARY FIXED(15)     INIT(79),
         3  PORTNUMBER             BINARY FIXED(15)     INIT(87),
         3  STATUS                 BINARY FIXED(15)     INIT(92),
         3  PROTOCOL               BINARY FIXED(15)     INIT(98),
         3  TRANSACTION            BINARY FIXED(15)     INIT(102),
         3  BACKLOG                BINARY FIXED(15)     INIT(106),
     /*  3  TSQPREFIX              BINARY FIXED(15)         @PI59763D*/
         3  HOST                   BINARY FIXED(15)     INIT(111),
         3  IPADDRESS              BINARY FIXED(15)     INIT(227),
         3  SPECIFTCPS             BINARY FIXED(15)     INIT(242),
         3  SOCKETCLOSE            BINARY FIXED(15)     INIT(250),
         3  MAXPERSIST             BINARY FIXED(15)     INIT(256),
         3  MAXDATALEN             BINARY FIXED(15)     INIT(261),
         3  SSL                    BINARY FIXED(15)     INIT(267),
         3  CERTIFICATE            BINARY FIXED(15)     INIT(277),
         3  CIPHERS                BINARY FIXED(15)     INIT(333),
         3  AUTHENTICATE           BINARY FIXED(15)     INIT(389),
         3  REALM                  BINARY FIXED(15)     INIT(401),
         3  ATTACHSEC              BINARY FIXED(15)     INIT(457),
         3  DEFINETIME             BINARY FIXED(15)     INIT(463),
         3  CHANGETIME             BINARY FIXED(15)     INIT(480),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(497),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(505),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(513),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   29) TDQUEUE
                                                                     */
   DCL 1 TDQUEUE_DEFINITION        STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  TYPE                   BINARY FIXED(15)     INIT(79),
         3  DATABUFFERS            BINARY FIXED(15)     INIT(87),
         3  DDNAME                 BINARY FIXED(15)     INIT(90),
         3  DSNAME                 BINARY FIXED(15)     INIT(98),
         3  SYSOUTCLASS            BINARY FIXED(15)     INIT(142),
         3  ERROROPTION            BINARY FIXED(15)     INIT(143),
         3  OPENTIME               BINARY FIXED(15)     INIT(149),
         3  REWIND                 BINARY FIXED(15)     INIT(157),
         3  TYPEFILE               BINARY FIXED(15)     INIT(163),
         3  RECORDSIZE             BINARY FIXED(15)     INIT(169),
         3  BLOCKSIZE              BINARY FIXED(15)     INIT(174),
         3  RECORDFORMAT           BINARY FIXED(15)     INIT(179),
         3  BLOCKFORMAT            BINARY FIXED(15)     INIT(187),
         3  PRINTCONTROL           BINARY FIXED(15)     INIT(196),
         3  DISPOSITION            BINARY FIXED(15)     INIT(197),
         3  JOBUSERID              BINARY FIXED(15)     INIT(200),
         3  ATIFACILITY            BINARY FIXED(15)     INIT(208),
         3  RECOVSTATUS            BINARY FIXED(15)     INIT(216),
         3  FACILITYID             BINARY FIXED(15)     INIT(224),
         3  TRANSID                BINARY FIXED(15)     INIT(228),
         3  TRIGGERLEVEL           BINARY FIXED(15)     INIT(232),
         3  USERID                 BINARY FIXED(15)     INIT(237),
         3  WAIT                   BINARY FIXED(15)     INIT(245),
         3  WAITACTION             BINARY FIXED(15)     INIT(248),
         3  INDIRECTNAME           BINARY FIXED(15)     INIT(254),
         3  REMOTENAME             BINARY FIXED(15)     INIT(258),
         3  REMOTESYSTEM           BINARY FIXED(15)     INIT(262),
         3  REMOTELENGTH           BINARY FIXED(15)     INIT(266),
         3  DEFINETIME             BINARY FIXED(15)     INIT(271),
         3  CHANGETIME             BINARY FIXED(15)     INIT(288),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(305),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(313),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(321),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   30) TERMINAL
                                                                     */
   DCL 1 TERMINAL_DEFINITION       STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  AUTINSTMODEL           BINARY FIXED(15)     INIT(79),
         3  AUTINSTNAME            BINARY FIXED(15)     INIT(83),
         3  TYPETERM               BINARY FIXED(15)     INIT(91),
         3  NETNAME                BINARY FIXED(15)     INIT(99),
         3  CONSNAME               BINARY FIXED(15)     INIT(107),
         3  REMOTESYSTEM           BINARY FIXED(15)     INIT(115),
         3  REMOTENAME             BINARY FIXED(15)     INIT(119),
         3  REMOTESYSNET           BINARY FIXED(15)     INIT(123),
         3  MODENAME               BINARY FIXED(15)     INIT(131),
         3  PRINTER                BINARY FIXED(15)     INIT(139),
         3  PRINTERCOPY            BINARY FIXED(15)     INIT(143),
         3  ALTPRINTER             BINARY FIXED(15)     INIT(146),
         3  ALTPRINTCOPY           BINARY FIXED(15)     INIT(150),
         3  POOL                   BINARY FIXED(15)     INIT(153),
         3  TASKLIMIT              BINARY FIXED(15)     INIT(161),
         3  USERID                 BINARY FIXED(15)     INIT(166),
         3  NATLANG                BINARY FIXED(15)     INIT(174),
         3  TRANSACTION            BINARY FIXED(15)     INIT(175),
         3  TERMPRIORITY           BINARY FIXED(15)     INIT(179),
         3  INSERVICE              BINARY FIXED(15)     INIT(182),
         3  SOLICITED              BINARY FIXED(15)     INIT(185),
         3  SECURITYNAME           BINARY FIXED(15)     INIT(188),
         3  ATTACHSEC              BINARY FIXED(15)     INIT(196),
         3  BINDSECURITY           BINARY FIXED(15)     INIT(206),
         3  USEDFLTUSER            BINARY FIXED(15)     INIT(209),
         3  DEFINETIME             BINARY FIXED(15)     INIT(212),
         3  CHANGETIME             BINARY FIXED(15)     INIT(229),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(246),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(254),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(262),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   31) TRANCLASS
                                                                     */
   DCL 1 TRANCLASS_DEFINITION      STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  MAXACTIVE              BINARY FIXED(15)     INIT(79),
         3  PURGETHRESH            BINARY FIXED(15)     INIT(82),
         3  DEFINETIME             BINARY FIXED(15)     INIT(89),
         3  CHANGETIME             BINARY FIXED(15)     INIT(106),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(123),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(131),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(139),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   32) TRANSACTION
                                                                     */
   DCL 1 TRANSACTION_DEFINITION    STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  PROGRAM                BINARY FIXED(15)     INIT(79),
         3  TWASIZE                BINARY FIXED(15)     INIT(87),
         3  PROFILE                BINARY FIXED(15)     INIT(92),
         3  PARTITIONSET           BINARY FIXED(15)     INIT(100),
         3  STATUS                 BINARY FIXED(15)     INIT(108),
         3  TASKDATALOC            BINARY FIXED(15)     INIT(116),
         3  TASKDATAKEY            BINARY FIXED(15)     INIT(121),
         3  STORAGECLEAR           BINARY FIXED(15)     INIT(125),
         3  RUNAWAY                BINARY FIXED(15)     INIT(128),
         3  SHUTDOWN               BINARY FIXED(15)     INIT(135),
         3  ISOLATE                BINARY FIXED(15)     INIT(143),
         3  BREXIT                 BINARY FIXED(15)     INIT(146),
         3  DYNAMIC                BINARY FIXED(15)     INIT(154),
         3  ROUTABLE               BINARY FIXED(15)     INIT(157),
         3  REMOTESYSTEM           BINARY FIXED(15)     INIT(160),
         3  REMOTENAME             BINARY FIXED(15)     INIT(164),
         3  TRPROF                 BINARY FIXED(15)     INIT(172),
         3  LOCALQ                 BINARY FIXED(15)     INIT(180),
         3  PRIORITY               BINARY FIXED(15)     INIT(183),
         3  TRANCLASS              BINARY FIXED(15)     INIT(186),
         3  ALIAS                  BINARY FIXED(15)     INIT(194),
         3  TASKREQ                BINARY FIXED(15)     INIT(198),
         3  XTRANID                BINARY FIXED(15)     INIT(202),
         3  TPNAME                 BINARY FIXED(15)     INIT(210),
         3  XTPNAME                BINARY FIXED(15)     INIT(274),
         3  DTIMOUT                BINARY FIXED(15)     INIT(402),
         3  RESTART                BINARY FIXED(15)     INIT(406),
         3  SPURGE                 BINARY FIXED(15)     INIT(409),
         3  TPURGE                 BINARY FIXED(15)     INIT(412),
         3  DUMP                   BINARY FIXED(15)     INIT(415),
         3  TRACE                  BINARY FIXED(15)     INIT(418),
         3  CONFDATA               BINARY FIXED(15)     INIT(421),
         3  OTSTIMEOUT             BINARY FIXED(15)     INIT(424),
         3  ACTION                 BINARY FIXED(15)     INIT(430),
         3  WAIT                   BINARY FIXED(15)     INIT(437),
         3  WAITTIME               BINARY FIXED(15)     INIT(440),
         3  RESSEC                 BINARY FIXED(15)     INIT(448),
         3  CMDSEC                 BINARY FIXED(15)     INIT(451),
         3  DEFINETIME             BINARY FIXED(15)     INIT(454),
         3  CHANGETIME             BINARY FIXED(15)     INIT(471),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(488),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(496),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(504),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   33) TSMODEL
                                                                     */
   DCL 1 TSMODEL_DEFINITION        STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  PREFIX                 BINARY FIXED(15)     INIT(79),
         3  XPREFIX                BINARY FIXED(15)     INIT(95),
         3  LOCATION               BINARY FIXED(15)     INIT(127),
         3  EXPIRYINTMIN           BINARY FIXED(15)     INIT(136),
         3  RECOVERY               BINARY FIXED(15)     INIT(142),
         3  SECURITY               BINARY FIXED(15)     INIT(145),
         3  POOLNAME               BINARY FIXED(15)     INIT(148),
         3  REMOTESYSTEM           BINARY FIXED(15)     INIT(156),
         3  REMOTEPREFIX           BINARY FIXED(15)     INIT(160),
         3  XREMOTEPFX             BINARY FIXED(15)     INIT(176),
         3  DEFINETIME             BINARY FIXED(15)     INIT(208),
         3  CHANGETIME             BINARY FIXED(15)     INIT(225),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(242),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(250),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(258),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   34) TYPETERM
                                                                     */
   DCL 1 TYPETERM_DEFINITION       STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  DEVICE                 BINARY FIXED(15)     INIT(79),
         3  TERMMODEL              BINARY FIXED(15)     INIT(87),
         3  SESSIONTYPE            BINARY FIXED(15)     INIT(88),
         3  LDCLIST                BINARY FIXED(15)     INIT(96),
         3  SHIPPABLE              BINARY FIXED(15)     INIT(104),
         3  PAGESIZE               BINARY FIXED(15)     INIT(107),
         3  ALTPAGE                BINARY FIXED(15)     INIT(114),
         3  ALTSUFFIX              BINARY FIXED(15)     INIT(121),
         3  FMHPARM                BINARY FIXED(15)     INIT(122),
         3  OBOPERID               BINARY FIXED(15)     INIT(125),
         3  AUTOPAGE               BINARY FIXED(15)     INIT(128),
         3  DEFSCREEN              BINARY FIXED(15)     INIT(131),
         3  ALTSCREEN              BINARY FIXED(15)     INIT(138),
         3  APLKYBD                BINARY FIXED(15)     INIT(145),
         3  APLTEXT                BINARY FIXED(15)     INIT(148),
         3  AUDIBLEALARM           BINARY FIXED(15)     INIT(151),
         3  COLOR                  BINARY FIXED(15)     INIT(154),
         3  COPY                   BINARY FIXED(15)     INIT(157),
         3  DUALCASEKYBD           BINARY FIXED(15)     INIT(160),
         3  EXTENDEDDS             BINARY FIXED(15)     INIT(163),
         3  HILIGHT                BINARY FIXED(15)     INIT(166),
         3  KATAKANA               BINARY FIXED(15)     INIT(169),
         3  LIGHTPEN               BINARY FIXED(15)     INIT(172),
         3  MSRCONTROL             BINARY FIXED(15)     INIT(175),
         3  OBFORMAT               BINARY FIXED(15)     INIT(178),
         3  PARTITIONS             BINARY FIXED(15)     INIT(181),
         3  PRINTADAPTER           BINARY FIXED(15)     INIT(184),
         3  PROGSYMBOLS            BINARY FIXED(15)     INIT(187),
         3  VALIDATION             BINARY FIXED(15)     INIT(190),
         3  FORMFEED               BINARY FIXED(15)     INIT(193),
         3  HORIZFORM              BINARY FIXED(15)     INIT(196),
         3  VERTICALFORM           BINARY FIXED(15)     INIT(199),
         3  TEXTKYBD               BINARY FIXED(15)     INIT(202),
         3  TEXTPRINT              BINARY FIXED(15)     INIT(205),
         3  QUERY                  BINARY FIXED(15)     INIT(208),
         3  OUTLINE                BINARY FIXED(15)     INIT(212),
         3  SOSI                   BINARY FIXED(15)     INIT(215),
         3  BACKTRANS              BINARY FIXED(15)     INIT(218),
         3  CGCSGID                BINARY FIXED(15)     INIT(221),
         3  ASCII                  BINARY FIXED(15)     INIT(232),
         3  SENDSIZE               BINARY FIXED(15)     INIT(234),
         3  RECEIVESIZE            BINARY FIXED(15)     INIT(239),
         3  BRACKET                BINARY FIXED(15)     INIT(244),
         3  LOGMODE                BINARY FIXED(15)     INIT(247),
         3  ERRLASTLINE            BINARY FIXED(15)     INIT(255),
         3  ERRINTENSIFY           BINARY FIXED(15)     INIT(258),
         3  ERRCOLOR               BINARY FIXED(15)     INIT(261),
         3  ERRHILIGHT             BINARY FIXED(15)     INIT(270),
         3  AUTOCONNECT            BINARY FIXED(15)     INIT(279),
         3  ATI                    BINARY FIXED(15)     INIT(282),
         3  TTI                    BINARY FIXED(15)     INIT(285),
         3  CREATESESS             BINARY FIXED(15)     INIT(288),
         3  RELREQ                 BINARY FIXED(15)     INIT(291),
         3  DISCREQ                BINARY FIXED(15)     INIT(294),
         3  NEPCLASS               BINARY FIXED(15)     INIT(297),
         3  SIGNOFF                BINARY FIXED(15)     INIT(300),
         3  RSTSIGNOFF             BINARY FIXED(15)     INIT(306),
         3  ROUTEDMSGS             BINARY FIXED(15)     INIT(313),
         3  LOGONMSG               BINARY FIXED(15)     INIT(321),
         3  BUILDCHAIN             BINARY FIXED(15)     INIT(324),
         3  USERAREALEN            BINARY FIXED(15)     INIT(327),
         3  IOAREALEN              BINARY FIXED(15)     INIT(330),
         3  UCTRAN                 BINARY FIXED(15)     INIT(341),
         3  RECOVOPTION            BINARY FIXED(15)     INIT(347),
         3  RECOVNOTIFY            BINARY FIXED(15)     INIT(358),
         3  DEFINETIME             BINARY FIXED(15)     INIT(369),
         3  CHANGETIME             BINARY FIXED(15)     INIT(386),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(403),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(411),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(419),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   35) URIMAP
                                                                     */
   DCL 1 URIMAP_DEFINITION         STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  STATUS                 BINARY FIXED(15)     INIT(79),
         3  USAGE                  BINARY FIXED(15)     INIT(87),
         3  SCHEME                 BINARY FIXED(15)     INIT(96),
         3  PORT                   BINARY FIXED(15)     INIT(101),
         3  HOST                   BINARY FIXED(15)     INIT(106),
         3  PATH                   BINARY FIXED(15)     INIT(222),
         3  SOCKETCLOSE            BINARY FIXED(15)     INIT(477),
         3  TCPIPSERVICE           BINARY FIXED(15)     INIT(483),
         3  ANALYZER               BINARY FIXED(15)     INIT(491),
         3  CONVERTER              BINARY FIXED(15)     INIT(494),
         3  TRANSACTION            BINARY FIXED(15)     INIT(502),
         3  PROGRAM                BINARY FIXED(15)     INIT(506),
         3  PIPELINE               BINARY FIXED(15)     INIT(514),
         3  WEBSERVICE             BINARY FIXED(15)     INIT(522),
         3  ATOMSERVICE            BINARY FIXED(15)     INIT(554),
         3  USERID                 BINARY FIXED(15)     INIT(562),
         3  CIPHERS                BINARY FIXED(15)     INIT(570),
         3  CERTIFICATE            BINARY FIXED(15)     INIT(626),
         3  AUTHENTICATE           BINARY FIXED(15)     INIT(658),
         3  MEDIATYPE              BINARY FIXED(15)     INIT(663),
         3  CHARACTERSET           BINARY FIXED(15)     INIT(719),
         3  HOSTCODEPAGE           BINARY FIXED(15)     INIT(759),
         3  TEMPLATENAME           BINARY FIXED(15)     INIT(769),
         3  HFSFILE                BINARY FIXED(15)     INIT(817),
         3  REDIRECTTYPE           BINARY FIXED(15)     INIT(1072),
         3  LOCATION               BINARY FIXED(15)     INIT(1081),
         3  DEFINETIME             BINARY FIXED(15)     INIT(1336),
         3  CHANGETIME             BINARY FIXED(15)     INIT(1353),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(1370),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(1378),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(1386),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);
 %PAGE;
                                                                     /*
   36) WEBSERVICE
                                                                     */
   DCL 1 WEBSERVICE_DEFINITION     STATIC,
         3  DESCRIPTION            BINARY FIXED(15)     INIT(21),
         3  PIPELINE               BINARY FIXED(15)     INIT(79),
         3  VALIDATION             BINARY FIXED(15)     INIT(87),
         3  WSBIND                 BINARY FIXED(15)     INIT(90),
         3  WSDLFILE               BINARY FIXED(15)     INIT(345),
         3  ARCHIVEFILE            BINARY FIXED(15)     INIT(600),
         3  DEFINETIME             BINARY FIXED(15)     INIT(855),
         3  CHANGETIME             BINARY FIXED(15)     INIT(872),
         3  CHANGEUSRID            BINARY FIXED(15)     INIT(889),
         3  CHANGEAGENT            BINARY FIXED(15)     INIT(897),
         3  CHANGEAGREL            BINARY FIXED(15)     INIT(905),
         3  END_MARKER             BINARY FIXED(15)     INIT(0);

 /* **************************************************************** */
 /*                                                                  */
 /*       M A I N L I N E  C O D E  S T A R T S  H E R E             */
 /*       ==============================================             */
 /*                                                                  */
 /* **************************************************************** */

 /* **************************************************************** */
 /* Establish action to be taken on all errors not specifically      */
 /* trapped by the program                                           */
 /* **************************************************************** */
   ON ERROR BEGIN;
     ON ERROR SYSTEM;
          CALL PLIDUMP('HBTF','*** UNEXPECTED ERROR IN DFH$FORP ***');
   END;

   SELECT (EXIT_FUNCTION_CODE);
       WHEN (0)
         CALL PROCESS_INITIAL_CALL;
       WHEN (6)
         CALL PROCESS_OBJECT_START_CALL;
       WHEN (8)
         CALL PROCESS_KEYWORD_DETAIL_CALL;
       WHEN (10)
         CALL PROCESS_OBJECT_END_CALL;
       WHEN (16)
         CALL PROCESS_FINAL_CALL;
       OTHERWISE
         ;
   END; /* of select on call type */
 /* **************************************************************** */
 /* Return to DFHCSDUP, returning current value of return code.      */
 /* A non-zero value will result in the termination of the current   */
 /* EXTRACT command. A check is made on the return code before       */
 /* return, if it is non zero then all open files are closed to      */
 /* avoid any C03 abends.                                            */
 /* **************************************************************** */
 CALL CHECK_RETURN_CODE;

 CALL PLIRETC(EXIT_RETURN_CODE);                          /*     @02C*/
 RETURN;                                                  /*     @02A*/
 %PAGE;

 /* **************************************************************** */
 /*                                                                  */
 /*          P R O C E S S  A N  I N I T I A L  C A L L              */
 /*                                                                  */
 /* This routine performs the following:                             */
 /*    1) Checks the specified EXTRACT command to ensure that the    */
 /*       OBJECTS option has been specified.                         */
 /*    2) Allocates the user work area.                              */
 /*    3) Opens the output data set FOROUT.                         */
 /*                                                                  */
 /*       If any of the above fail then the return code is set to    */
 /*       a non-zero value to ensure the termination of the EXTRACT. */
 /*                                                                  */
 /* **************************************************************** */
 PROCESS_INITIAL_CALL: PROC;

   DCL BACK_TRANSLATED_COMMAND             CHAR(100)
       BASED(EXIT_BACK_TRANSLATED_CMD_PTR);

 /* **************************************************************** */
 /* Define action to be taken if file not successfully opened        */
 /* **************************************************************** */
   ON UNDEFINEDFILE(FOROUT) BEGIN;
        EXIT_RETURN_CODE= OUTPUT_FILE_OPEN_ERROR;
        GO TO PROCESS_INITIAL_RETURN;
   END;
 /* **************************************************************** */
 /* Define action to be taken allocate of work area fails            */
 /* **************************************************************** */
   ON AREA BEGIN;
        EXIT_RETURN_CODE= GETMAIN_ERROR;
        GO TO PROCESS_INITIAL_RETURN;
   END;

   IF INDEX(BACK_TRANSLATED_COMMAND,'OBJECTS') = 0 THEN
     EXIT_RETURN_CODE= OBJECTS_OPTION_MISSING;
   ELSE
   DO;
        /* ************************************************** */
        /* Allocate system storage for the users work area.   */
        /* ************************************************** */
        ALLOCATE USER_WORK_AREA;
        OUTPUT_FILE_OPEN= '0'B;
        /* ******************* */
        /* Open the ouput file */
        /* ******************* */
        OPEN FILE(FOROUT) SEQUENTIAL OUTPUT RECORD;
        OUTPUT_FILE_OPEN= '1'B;
   END;

   PROCESS_INITIAL_RETURN:
        RETURN;
 END PROCESS_INITIAL_CALL;

 %PAGE;
 /****************************************************************** */
 /*                                                                  */
 /*     P R O C E S S  A N  O B J E C T  S T A R T  C A L L          */
 /*                                                                  */
 /* This subroutine performs the following:                          */
 /*                                                                  */
 /*   (1) Clear the output buffer to spaces                          */
 /*   (2) Determine the type of the new object and set the           */
 /*       register 4 to point to the appropriate section of          */
 /*       the keyword table                                          */
 /*   (3) Set the first 4 characters of the o/p record to            */
 /*       the first 4 characters of the object type. This is         */
 /*       necessary in order to allow the DB2 load utility to        */
 /*       uniquely identify the different objects.                   */
 /*   (4) Move the resource name into the o/p buffer                 */
 /*   (5) Move the group name into the o/p buffer                    */
 /*                                                                  */
 /* **************************************************************** */
 PROCESS_OBJECT_START_CALL: PROC;

 DCL I                             BINARY FIXED(15);
 DCL LEN_OBJ_NAME                  STATIC BINARY FIXED(15) INIT(8);
 DCL LEN_RDO_GROUP_NAME            STATIC BINARY FIXED(15) INIT(8);

 FORMATTED_RECORD_BUFFER= ''; /* Clear o/p buffer to spaces */


 /* **************************************************************** */
 /* Move record identifier into first 4 characters of output buffer  */
 /* **************************************************************** */
 SUBSTR(FORMATTED_RECORD_BUFFER,1,4)=  SUBSTR(EXIT_OBJECT_TYPE,1,4);
 I= 5;
 /* **************************************************************** */
 /* Set the keyword displacement ptr  to point to the appropriate    */
 /* table of displacements                                           */
 /* **************************************************************** */
 SELECT(EXIT_OBJECT_TYPE);
      WHEN('TRANSACTION ')
           KEYWORD_DISP_TABLE_PTR= ADDR(TRANSACTION_DEFINITION);
      WHEN('PROGRAM     ')
           KEYWORD_DISP_TABLE_PTR= ADDR(PROGRAM_DEFINITION);
      WHEN('PROFILE     ')
           KEYWORD_DISP_TABLE_PTR= ADDR(PROFILE_DEFINITION);
      WHEN('PARTITIONSET')
           KEYWORD_DISP_TABLE_PTR= ADDR(PARTITIONSET_DEFINITION);
      WHEN('MAPSET      ')
           KEYWORD_DISP_TABLE_PTR= ADDR(MAPSET_DEFINITION);
      WHEN('TYPETERM    ')
           KEYWORD_DISP_TABLE_PTR= ADDR(TYPETERM_DEFINITION);
      WHEN('TERMINAL    ')
           KEYWORD_DISP_TABLE_PTR= ADDR(TERMINAL_DEFINITION);
      WHEN('CONNECTION  ')
           KEYWORD_DISP_TABLE_PTR= ADDR(CONNECTION_DEFINITION);
      WHEN('SESSIONS    ')
           KEYWORD_DISP_TABLE_PTR= ADDR(SESSIONS_DEFINITION);
      WHEN('FILE        ')
           KEYWORD_DISP_TABLE_PTR= ADDR(FILE_DEFINITION);
      WHEN('LSRPOOL     ')
           KEYWORD_DISP_TABLE_PTR= ADDR(LSRPOOL_DEFINITION);
      WHEN('PARTNER     ')
         DO;
           KEYWORD_DISP_TABLE_PTR= ADDR(PARTNER_DEFINITION);
           SUBSTR(FORMATTED_RECORD_BUFFER,1,4)= 'PTNR';
         END;
      WHEN('TRANCLASS   ')
         DO;
           KEYWORD_DISP_TABLE_PTR= ADDR(TRANCLASS_DEFINITION);
           SUBSTR(FORMATTED_RECORD_BUFFER,1,4)= 'TRCL';
         END;
      WHEN('TDQUEUE     ')
           KEYWORD_DISP_TABLE_PTR= ADDR(TDQUEUE_DEFINITION);
      WHEN('JOURNALMODEL')
           KEYWORD_DISP_TABLE_PTR= ADDR(JOURNALMODEL_DEFINITION);
      WHEN('DB2CONN     ')
           KEYWORD_DISP_TABLE_PTR= ADDR(DB2CONN_DEFINITION);
      WHEN('DB2ENTRY    ')
           KEYWORD_DISP_TABLE_PTR= ADDR(DB2ENTRY_DEFINITION);
      WHEN('DB2TRAN     ')
           KEYWORD_DISP_TABLE_PTR= ADDR(DB2TRAN_DEFINITION);
      WHEN('ENQMODEL    ')
           KEYWORD_DISP_TABLE_PTR= ADDR(ENQMODEL_DEFINITION);
      WHEN('TSMODEL     ')
           KEYWORD_DISP_TABLE_PTR= ADDR(TSMODEL_DEFINITION);
      WHEN('PROCESSTYPE ')
           KEYWORD_DISP_TABLE_PTR= ADDR(PROCESSTYPE_DEFINITION);
      WHEN('REQUESTMODEL')
           KEYWORD_DISP_TABLE_PTR= ADDR(REQUESTMODEL_DEFINITION);
      WHEN('DOCTEMPLATE ')
           KEYWORD_DISP_TABLE_PTR= ADDR(DOCTEMPLATE_DEFINITION);
      WHEN('TCPIPSERVICE')
           KEYWORD_DISP_TABLE_PTR= ADDR(TCPIPSERVICE_DEFINITION);
      WHEN('CORBASERVER ')
           KEYWORD_DISP_TABLE_PTR= ADDR(CORBASERVER_DEFINITION);
      WHEN('DJAR        ')
           KEYWORD_DISP_TABLE_PTR= ADDR(DJAR_DEFINITION);
      WHEN('PIPELINE    ')
           KEYWORD_DISP_TABLE_PTR= ADDR(PIPELINE_DEFINITION);
      WHEN('URIMAP      ')
           KEYWORD_DISP_TABLE_PTR= ADDR(URIMAP_DEFINITION);
      WHEN('WEBSERVICE  ')
           KEYWORD_DISP_TABLE_PTR= ADDR(WEBSERVICE_DEFINITION);
      WHEN('IPCONN      ')
           KEYWORD_DISP_TABLE_PTR= ADDR(IPCONN_DEFINITION);
      WHEN('LIBRARY     ')
           KEYWORD_DISP_TABLE_PTR= ADDR(LIBRARY_DEFINITION);
      WHEN('ATOMSERVICE ')
           KEYWORD_DISP_TABLE_PTR= ADDR(ATOMSERVICE_DEFINITION);
      WHEN('BUNDLE      ')
           KEYWORD_DISP_TABLE_PTR= ADDR(BUNDLE_DEFINITION);
      WHEN('MQCONN      ')
           KEYWORD_DISP_TABLE_PTR= ADDR(MQCONN_DEFINITION);
      WHEN('JVMSERVER   ')
           KEYWORD_DISP_TABLE_PTR= ADDR(JVMSERVER_DEFINITION);
      WHEN('MQMONITOR   ')                                 /*@PI83598C*/
           KEYWORD_DISP_TABLE_PTR= ADDR(MQMONITOR_DEFINITION);
      OTHERWISE
           EXIT_RETURN_CODE= UNDEFINED_RESOURCE_TYPE;
 END; /* of select on object type */
 /* *********************************** */
 /* Move object name into output buffer */
 /* *********************************** */
 SUBSTR(FORMATTED_RECORD_BUFFER,I,LEN_OBJ_NAME)=
      EXIT_OBJECT_NAME;
 I= I + LEN_OBJ_NAME;
 /* ************************************** */
 /* Move RDO group name into output buffer */
 /* ************************************** */
 SUBSTR(FORMATTED_RECORD_BUFFER,I,LEN_RDO_GROUP_NAME)=
      EXIT_GROUP_NAME;

 END PROCESS_OBJECT_START_CALL;

 %PAGE;
 /* **************************************************************** */
 /*                                                                  */
 /*             P R O C E S S  A  D E T A I L  C A L L               */
 /*                                                                  */
 /* The subroutine moves the latest keyword value into the o/p buffer*/
 /* Subsequent (and previous) DETAIL calls to this program will move */
 /* the remaining keyword values for the object type.                */
 /*                                                                  */
 /* **************************************************************** */
 PROCESS_KEYWORD_DETAIL_CALL:PROC;

 /* **************************************************************** */
 /* Check that we are within bounds of current displacement table    */
 /* **************************************************************** */
 IF KEYWORD_DISPLACEMENT = 0 THEN
      EXIT_RETURN_CODE= KEYWORD_DISP_TABLE_ERROR;
 ELSE
 /* **************************************************************** */
 /* Check that the length of the keyword is reasonable               */
 /* **************************************************************** */
 IF EXIT_KEYWORD_LENGTH > MAX_KEYWORD_LENGTH THEN
      EXIT_RETURN_CODE= KEYWORD_LENGTH_ERROR;
 ELSE
 DO;
      /* *********************************************************** */
      /* Move the keyword value into appropriate positions in o/p    */
      /* buffer                                                      */
      /* *********************************************************** */
      SUBSTR(FORMATTED_RECORD_BUFFER,
             KEYWORD_DISPLACEMENT,
             EXIT_KEYWORD_LENGTH)=
           SUBSTR(EXIT_KEYWORD_VALUE,1,EXIT_KEYWORD_LENGTH);

      /* *********************************************************** */
      /* Increment ptr to keyword displacement table currently       */
      /* addressed.                                                  */
      /* *********************************************************** */
      KEYWORD_DISP_TABLE_PTR= ADDR(NEXT_KEYWORD_DISPLACEMENT);
 END;

 END PROCESS_KEYWORD_DETAIL_CALL;

 %PAGE;
 /* **************************************************************** */
 /*                                                                  */
 /*        P R O C E S S  A N  O B J E C T  E N D  C A L L           */
 /*                                                                  */
 /* This subroutine writes out the contents contents of the output   */
 /* buffer to the output file FOROUT. If an I/O error occurs a      */
 /* PLIDUMP will be taken.                                           */
 /*                                                                  */
 /* **************************************************************** */
 PROCESS_OBJECT_END_CALL: PROC;
 /* **************************************************************** */
 /* Define action to be taken if a I/O error ocurrs on WRITE         */
 /* **************************************************************** */
   ON ERROR  BEGIN;
       IF ONCODE = 1011 THEN  /* If an I/O error */
           EXIT_RETURN_CODE= OUPUT_FILE_WRITE_ERROR;
       ELSE
           CALL PLIDUMP('HBTF','*** UNEXPECTED ERROR IN DFH$FORP ***');
   END;

 /* **************************************************************** */
 /* Ensure we have processed as many keywords as were expected.      */
 /* **************************************************************** */
   IF KEYWORD_DISPLACEMENT ^= 0 THEN
        /* ********************************************************* */
        /* Keyword table for current resource as too many entries    */
        /* for current level of CEDA language for the resource       */
        /* ********************************************************* */
        EXIT_RETURN_CODE= KEYWORD_DISP_TABLE_ERROR;
   ELSE
        /* ********************************************************* */
        /* Write the contents of the formatting buffer to the output */
        /* file. A I/O error will invoke the ON ERROR condition above*/
        /* ********************************************************* */
        WRITE FILE(FOROUT) FROM(FORMATTED_RECORD_BUFFER);

   RETURN;

 END PROCESS_OBJECT_END_CALL;

 %PAGE;
 /* **************************************************************** */
 /*                                                                  */
 /*             P R O C E S S  A  F I N A L  C A L L                 */
 /*                                                                  */
 /*   This subroutine closes the output file FOROUT                 */
 /*                                                                  */
 /* **************************************************************** */
 PROCESS_FINAL_CALL: PROC;

 CLOSE FILE(FOROUT);

 END PROCESS_FINAL_CALL;

 %PAGE;
 /* **************************************************************** */
 /*                                                                  */
 /*            C H E C K  R E T U R N  C O D E                       */
 /*                                                                  */
 /*  This subroutine checks the return code setting and if it is     */
 /*  non-zero then the output file is closed if necessary. Any close */
 /*  error is ignored. No need to perform check for a INITIAL call.  */
 /*                                                                  */
 /* **************************************************************** */
 CHECK_RETURN_CODE: PROC ;

 IF EXIT_FUNCTION_CODE ^= 0 & EXIT_RETURN_CODE ^= 0 THEN
 DO;
      IF OUTPUT_FILE_OPEN THEN
           CLOSE FILE(FOROUT);
 END;

 RETURN;

 END CHECK_RETURN_CODE;

 /* **************************************************************** */
 /*                                                                  */
 /*              E N D  O F  M A I N L I N E  C O D E                */
 /*                                                                  */
 /* **************************************************************** */
 END FORMCSD;
