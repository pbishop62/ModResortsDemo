*ASM XOPTS(SP)
***********************************************************************
*                                                                     *
*   MODULE NAME = DFH$WBPI                                            *
*                                                                     *
* DESCRIPTIVE NAME = CICS TS  (WB) PLTPI program for Web sample exits *
*                                                                     *
*                                                                     *
*                                                                     *
*        Licensed Materials - Property of IBM                         *
*                                                                     *
*        "Restricted Materials of IBM"                                *
*                                                                     *
*        5655-Y04                                                     *
*                                                                     *
*        (C) Copyright IBM Corp. 2004, 2014"                          *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* STATUS = 7.2.0                                                      *
*                                                                     *
* FUNCTION =                                                          *
*        This program enables the sample user exit programs           *
*        DFH$WBEX, DFH$WBX1, DFH$WBX2, and initializes their common   *
*        global work areas                                            *
*                                                                     *
*        The following values are extracted from the INITPARM for     *
*        this program (DFH$WBPI)                                      *
*        o The name of the proxy server to be used by the             *
*          XWBOPEN exit DFH$WBEX.                                     *
*        o The name of a RACF profile in the LDAPBIND class that      *
*          contains the URL and credentials needed to bind to an      *
*          LDAP server, as used by XWBAUTH exit DFH$WBX1.             *
*        o The URL of a Secure Token Service, as used by the          *
*          XWBAUTH exit DFH$WBX2.                                     *
*                                                                     *
*        If you want to provide any of these parameters,              *
*        code them as:                                                *
*        INITPARM=(DFH$WBPI='LDAPBIND=profilename,                    *
*                            PROXY=http://proxy-server,               *
*                            STS=https://secure-token-server')        *
*        The keywords LDAPBIND, PROXY and STS can appear in any       *
*        order, or can be omitted, but text that does not begin       *
*        with a valid keyword causes a WBPI abend.                    *
*                                                                     *
*        LDAPBIND can be abbreviated to L                             *
*        PROXY    can be abbreviated to P                             *
*        STS      can be abbreviated to S                             *
*                                                                     *
*        This program does the following:                             *
*                                                                     *
*          Issue ASSIGN INITPARM to obtain the initparm for this      *
*          program.                                                   *
*                                                                     *
*          Enable global exit program DFH$WBEX at exit XWBOPEN and    *
*          allocate a Global Work Area.                               *
*                                                                     *
*          Obtain the address of the Global Work Area using           *
*          command EXTRACT EXIT.                                      *
*                                                                     *
*          Save the proxy server name from the INITPARM in the        *
*          Global Work Area                                           *
*                                                                     *
*          Save the LDAPBIND profile name from the INITPARM in        *
*          the Global Work Area.                                      *
*                                                                     *
*          Start exit program DFH$WBEX.                               *
*                                                                     *
*          Start global exit program DFH$WBX1 at exit XWBAUTH and     *
*          allocate the same Global Work Area as DFH$WBEX.            *
*                                                                     *
*          Start global exit program DFH$WBX1 at exit XSTERM and      *
*          allocates the same Global Work Area as DFH$WBEX.           *
*                                                                     *
*          Return to CICS.                                            *
*                                                                     *
*                                                                     *
* NOTES :                                                             *
*    DEPENDENCIES = S/390                                             *
*    RESTRICTIONS = None                                              *
*    MODULE TYPE = Executable                                         *
*    PROCESSOR = Assembler                                            *
*    ATTRIBUTES = Read only, Serially Reusable                        *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* ENTRY POINT = DFHEAIx                                               *
*     PURPOSE = All Functions                                         *
*     LINKAGE = Can be invoked from PLTPI processing (second phase)   *
*               or via a user application using EXEC CICS LINK.       *
*     INPUT = N/A                                                     *
*     OUTPUT = N/A                                                    *
*     EXIT-NORMAL = EXEC CICS RETURN                                  *
*         The following messages can be issued by the module if a     *
*         response other than NORMAL is returned from various         *
*         EXEC CICS xxxxxxxx commands:                                *
*                                                                     *
*             DFH$WBPI - ERROR ENABLING EXIT PROGRAM DFH$WBEX         *
*             DFH$WBPI - ERROR EXTRACTING DFH$WBEX GWA ADDRESS        *
*             DFH$WBPI - ERROR STARTING EXIT PROGRAM DFH$WBEX         *
*                                                                     *
*         If a INITPARM has not been supplied the following           *
*         message is issued.                                          *
*                                                                     *
*             DFH$WBPI - NO INITPARM SUPPLIED                         *
*                                                                     *
*     EXIT-ERROR = None                                               *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* EXTERNAL REFERENCES = None                                          *
*     ROUTINES = EXEC CICS ASSIGN, EXEC CICS ENABLE PROGRAM, EXEC     *
*         CICS EXTRACT EXIT, EXEC CICS WRITE OPERATOR, EXEC CICS      *
*         RETURN.                                                     *
*     DATA AREAS = None                                               *
*     CONTROL BLOCKS =                                                *
*         DFH$WBGA - Global Work Area mapping for DFH$WBEX sample     *
*                    user exit program                                *
*     GLOBAL VARIABLES = None                                         *
* TABLES = None                                                       *
* MACROS = None                                                       *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* CHANGE ACTIVITY :                                                   *
*        $MOD(DFH$WBPI),COMP(CICSWEB),PROD(CICS TS ):                 *
*                                                                     *
*     PN= REASON REL YYMMDD HDXXIII: REMARKS                          *
*    $L0= 781    640 040426 HDFXAB : Sample exit                      *
*    $L1= 873    650 061016 HD2JPEH: Set GWA for DFH$WBX1 & DFH$WBX2  *
*    $P1= D17949 650 070220 HD2JPEH: Don't allow both LDAPBIND & STS  *
*                                                                     *
***********************************************************************
         SPACE
R0       EQU   0                   WORK
R1       EQU   1                   WORK
R2       EQU   2                   WORK
R3       EQU   3                   PROGRAM BASE
R4       EQU   4                   INITPARM keyword pointer        @L1C
R5       EQU   5                   End of keyword operand          @L1C
R6       EQU   6                   Web exits GWA address
R7       EQU   7                   End of INITPARM                 @L1C
R8       EQU   8                   NOT USED
R9       EQU   9                   NOT USED
R10      EQU   10                  NOT USED
R11      EQU   11                  DFHEIBR
R12      EQU   12                  NOT USED
R13      EQU   13                  DFHEISTG
R14      EQU   14                  WORK
R15      EQU   15                  DFHEIPLR
         EJECT
         COPY  DFH$WBGA            XWBOPEN GWA DSECT
         EJECT
DFHEISTG DSECT
ERRMSG   DS    CL60                WRITE OPERATOR ERROR MESSAGE
ABCODE   DS    CL4                 ABEND CODE                      @L1C
         SPACE
GALEN    DS    H                   GWA LENGTH
PARMLEN  DS    H                   INITPARM LENGTH
INITPARM DS    CL512               EXTRACTED INITPARM DATA         @L1C
         EJECT
DFH$WBPI AMODE 31
DFH$WBPI RMODE ANY
DFH$WBPI DFHEIENT
         XC    ABCODE,ABCODE       Clear the abend code
         SPACE
***********************************************************************
*** Get and process 'INITPARM' for this program. If the             ***
*** INITPARMLEN is zero, there is no 'INITPARM' for this program.   ***
***********************************************************************
         SPACE
         EXEC CICS ASSIGN INITPARM(INITPARM) INITPARMLEN(PARMLEN)      C
               NOHANDLE
         CLC   PARMLEN,=H'0'           INITPARM LENGTH = 0?
         BE    ERRRTN4                 YES, NO INITPARM TO PROCESS
         EJECT
***********************************************************************
*** Enable the DFH$WBEX global user exit program at the XWBOPEN     ***
*** exit point and allocate a Global Work Area.                     ***
***********************************************************************
         SPACE
         MVC   GALEN(2),=Y(WBGWALEN)   REQUIRED GWA LENGTH
         SPACE
         EXEC CICS ENABLE PROGRAM('DFH$WBEX') EXIT('XWBOPEN')          C
               GALENGTH(GALEN) GALOCATION(DFHVALUE(LOC31))             C
               NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL) RESPONSE NORMAL?
         BNE   ERRRTN1                 NO, GO TO ERROR ROUTINE
         SPACE
***********************************************************************
*** Extract the Global Work Area address for the DFH$WBEX user exit ***
*** program.                                                        ***
***********************************************************************
         SPACE
         EXEC CICS EXTRACT EXIT PROGRAM('DFH$WBEX')                    C
               GASET(R6) GALENGTH(GALEN)                               C
               NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL) RESPONSE NORMAL?
         BNE   ERRRTN2                 NO, GO TO ERROR ROUTINE
         USING DFH$WBGA,R6             ADDRESSABILITY
         MVI   LDAPBPRO,C' '           Clear LDAP profile          @L1A
         MVC   LDAPBPRO+1(L'LDAPBPRO-1),LDAPBPRO ... to spaces     @L1A
         MVC   PROXYNAM,LDAPBPRO       Clear proxy name            @L1A
         MVC   STSURI,LDAPBPRO         Clear STS URI               @L1A
         XR    R0,R0                   Clear work register         @L1A
         STH   R0,PROXYLEN             Clear proxy length          @L1A
         STH   R0,LDAPBLEN             Clear bind profile length   @L1A
         STH   R0,STSURLEN             Clear STS URI length        @L1A
         SPACE ,                                                   @L1A
         LA    R4,INITPARM             Point to INITPARM data      @L1A
         LH    R5,PARMLEN              Length of INITPARM          @L1A
         LA    R7,0(R5,R4)             Address end of INITPARM     @L1A
KWSEARCH DS    0H                                                  @L1A
         LR    R2,R4                   Save current keyword ptr    @L1A
         LR    R5,R7                   Point to end of INITPARM    @L1A
         LHI   R0,C','                 Set search character in R0  @L1A
         SRST  R5,R2                   Search for a comma          @L1A
         BO    *-4                     Loop back if long search    @L1A
         LHI   R0,6                    Length of 'PROXY='          @L1A
         CLC   =C'PROXY=',0(R4)        PROXY keyword?              @L1A
         BE    GETPROXY                                            @L1A
         LHI   R0,2                    Length of 'P='              @L1A
         CLC   =C'P=',0(R4)            P keyword?                  @L1A
         BE    GETPROXY                                            @L1A
         LHI   R0,9                    Length of 'LDAPBIND='       @L1A
         CLC   =C'LDAPBIND=',0(R4)     LDAPBIND keyword?           @L1A
         BE    GETLDAPB                                            @L1A
         LHI   R0,2                    Length of 'L='              @L1A
         CLC   =C'L=',0(R4)            L keyword?                  @L1A
         BE    GETLDAPB                                            @L1A
         LHI   R0,4                    Length of 'STS='            @L1A
         CLC   =C'STS=',0(R4)          STS keyword?                @L1A
         BE    GETSTURI                                            @L1A
         LHI   R0,2                    Length of 'S='              @L1A
         CLC   =C'S=',0(R4)            S keyword?                  @L1A
         BE    GETSTURI                                            @L1A
         B     ERRRTN5                 Unrecognized keyword        @L1A
         SPACE
***********************************************************************
*** Save proxy server information obtained from ASSIGN INITPARM     ***
*** command in the Global Work Area.                                ***
***********************************************************************
         SPACE
GETPROXY DS    0H                                                  @L1A
         ALR   R4,R0                   Address start of proxy      @L1A
         LR    R1,R5                   Address end of proxy        @L1A
         SR    R1,R4                   Calculate proxy length      @L1A
         STH   R1,PROXYLEN             SAVE AS PROXY LENGTH
         BNP   NEXTKWD                 Skip move if no proxy       @L1A
         BCTR  R1,0                    MINUS 1 (ASSEMBLER LENGTH)
         EX    R1,EXPRNAM              SAVE INITPARM VALUE AS PROXY
         B     NEXTKWD                 Loop to next keyword        @L1A
***********************************************************************
*** Save the LDAPBIND profile name.                                 ***
***********************************************************************
GETLDAPB DS    0H                                                  @L1A
         ALR   R4,R0                   Address start of LDAP prof  @L1A
         LR    R1,R5                   Address end of profile      @L1A
         SR    R1,R4                   Calculate profile length    @L1A
         STH   R1,LDAPBLEN             Save profile length         @L1A
         BNP   NEXTKWD                 Skip move if no profile     @L1A
         BCTR  R1,0                    Decrement for EXECUTE       @L1A
         EX    R1,EXLDNAM              Copy profile name           @L1A
         B     NEXTKWD                 Loop to next keyword        @L1A
***********************************************************************
*** Save the STS URI name                                           ***
***********************************************************************
GETSTURI DS    0H
         ALR   R4,R0                   Address start of STS URI    @L1A
         LR    R1,R5                   Address end of URI          @L1A
         SR    R1,R4                   Calculate URI length        @L1A
         STH   R1,STSURLEN             Save URI length             @L1A
         BNP   NEXTKWD                 Skip move if no URI         @L1A
         BCTR  R1,0                    Decrement for EXECUTE       @L1A
         EX    R1,EXSTURI              Copy STS URI name           @L1A
         B     NEXTKWD                 Loop to next keyword        @L1A
***********************************************************************
*** Advance keyword pointer to next keyword in INITPARM             ***
***********************************************************************
NEXTKWD  LA    R4,2(R1,R4)             Point to next keyword       @L1A
         CR    R4,R7                   Reached end of INITPARM?    @L1A
         BL    KWSEARCH                No, look for another keywd  @L1A
         EJECT
***********************************************************************
*** Start the DFH$WBEX Global User Exit program.                    ***
***********************************************************************
         ICM   R0,3,PROXYLEN           If no proxy,                @L1A
         BZ    SKIPWBEX                ... skip DFH$WBEX           @L1A
         SPACE
         EXEC CICS ENABLE PROGRAM('DFH$WBEX') START NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL) RESPONSE NORMAL?
         BNE   ERRRTN3                 NO, GO TO ERROR ROUTINE
SKIPWBEX DS    0H                                                  @L1A
         SPACE
***********************************************************************
*** Start the DFH$WBX1 Global User Exit program.                    ***
***********************************************************************
         ICM   R0,3,LDAPBLEN           If no LDAPBIND profile      @L1A
         BZ    SKIPWBX1                ... skip DFH$WBX1           @L1A
         ICM   R14,3,STSURLEN          Is STS also specified?      @P1A
         BNZ   ERRRTN8                 Yes, can't have both        @P1A
         EXEC CICS ENABLE PROGRAM('DFH$WBX1') EXIT('XWBAUTH')          *
               GAENTRYNAME('DFH$WBEX') START NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL) RESPONSE NORMAL?            @L1A
         BNE   ERRRTN6                 NO, GO TO ERROR ROUTINE     @L1A
         EXEC CICS ENABLE PROGRAM('DFH$WBX1') EXIT('XSTERM')           *
               START NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL) RESPONSE NORMAL?            @L1A
         BNE   ERRRTN6                 NO, GO TO ERROR ROUTINE     @L1A
         MVC   ERRMSG,ERRMSG0          SETUP SUCCESS MESSAGE       @L1A
         B     SENDMSG                 AND SEND MESSAGE TO CONSOLE @L1A
SKIPWBX1 DS    0H                                                  @L1A
***********************************************************************
*** Start the DFH$WBX2 Global User Exit program.                    ***
***********************************************************************
         ICM   R0,3,STSURLEN           If no STS URI supplied      @L1A
         BZ    SKIPWBX2                ... skip DFH$WBX2           @L1A
         EXEC CICS ENABLE PROGRAM('DFH$WBX2') EXIT('XWBAUTH')          *
               GAENTRYNAME('DFH$WBEX') START NOHANDLE
         CLC   EIBRESP,DFHRESP(NORMAL) RESPONSE NORMAL?            @L1A
         BNE   ERRRTN7                 NO, GO TO ERROR ROUTINE     @L1A
         MVC   ERRMSG,ERRMSG0          SETUP SUCCESS MESSAGE       @L1A
         B     SENDMSG                 AND SEND MESSAGE TO CONSOLE @L1A
SKIPWBX2 DS    0H                                                  @L1A
***********************************************************************
*** Return to CICS.                                                 ***
***********************************************************************
         SPACE
RETURN   DS    0H                      RETURN TO CICS
         EXEC CICS RETURN
         EJECT
***********************************************************************
*** Error message processing routines.                              ***
***********************************************************************
         SPACE
ERRRTN1  DS    0H
         MVC   ERRMSG,ERRMSG1      SETUP ERROR MESSAGE
         B     SENDMSG             AND SEND MESSAGE TO OPERATOR
ERRRTN2  DS    0H
         MVC   ERRMSG,ERRMSG2      SETUP ERROR MESSAGE
         B     SENDMSG             AND SEND MESSAGE TO OPERATOR
ERRRTN3  DS    0H
         MVC   ERRMSG,ERRMSG3      SETUP ERROR MESSAGE
         B     SENDMSG             AND SEND MESSAGE TO OPERATOR
ERRRTN4  DS    0H
         MVC   ERRMSG,ERRMSG4      SETUP ERROR MESSAGE
         B     SENDMSG             AND SEND MESSAGE TO OPERATOR
ERRRTN5  DS    0H                                                  @L1A
         MVC   ERRMSG,ERRMSG5      SETUP ERROR MESSAGE             @L1A
         MVC   ABCODE,=C'WBPI'     SETUP ABEND CODE                @L1A
         B     SENDMSG             AND SEND MESSAGE TO OPERATOR    @L1A
ERRRTN6  DS    0H                                                  @L1A
         MVC   ERRMSG,ERRMSG6      SETUP ERROR MESSAGE             @L1A
         B     SENDMSG             AND SEND MESSAGE TO OPERATOR    @L1A
ERRRTN7  DS    0H                                                  @L1A
         MVC   ERRMSG,ERRMSG7      SETUP ERROR MESSAGE             @L1A
         B     SENDMSG             AND SEND MESSAGE TO OPERATOR    @L1A
ERRRTN8  DS    0H                                                  @P1A
         MVC   ERRMSG,ERRMSG8      SETUP ERROR MESSAGE             @P1A
         MVC   ABCODE,=C'WBPI'     SETUP ABEND CODE                @P1A
         B     SENDMSG             AND SEND MESSAGE TO OPERATOR    @P1A
         SPACE
SENDMSG  DS    0H
         EXEC CICS WRITE OPERATOR TEXT(ERRMSG) TEXTLENGTH(OPMSGLEN)    C
               NOHANDLE
         ICM   R0,15,ABCODE        HAS AN ABEND CODE BEEN SET?
         BZ    RETURN              YES, RETURN TO CICS
         EXEC CICS ABEND ABCODE(ABCODE)
         EJECT
***********************************************************************
*** Constants                                                       ***
***********************************************************************
         SPACE
ERRMSG0  DC    CL60'DFH$WBPI - EXIT INITIALIZATION SUCCESSFUL'     @L1A
ERRMSG1  DC    CL60'DFH$WBPI - ERROR ENABLING EXIT PROGRAM DFH$WBEX'
ERRMSG2  DC    CL60'DFH$WBPI - ERROR EXTRACTING DFH$WBEX GWA ADDRESS'
ERRMSG3  DC    CL60'DFH$WBPI - ERROR STARTING EXIT PROGRAM DFH$WBEX'
ERRMSG4  DC    CL60'DFH$WBPI - NO INITPARM SUPPLIED'
ERRMSG5  DC    CL60'DFH$WBPI - UNRECOGNIZED INITPARM DATA'         @L1A
ERRMSG6  DC    CL60'DFH$WBPI - ERROR ENABLING EXIT PROGRAM DFH$WBX1'   -
                                                                   @L1A
ERRMSG7  DC    CL60'DFH$WBPI - ERROR ENABLING EXIT PROGRAM DFH$WBX2'   -
                                                                   @L1A
ERRMSG8  DC    CL60'DFH$WBPI - CAN''T SPECIFY BOTH LDAPBIND AND STS'   -
                                                                   @P1A
         SPACE
OPMSGLEN DC    F'60'               WRITE OPERATOR MESSAGE LENGTH
***********************************************************************
*** Executed instructions                                           ***
***********************************************************************
EXPRNAM  MVC   PROXYNAM(0),0(R4)                                   @L1A
EXLDNAM  MVC   LDAPBPRO(0),0(R4)                                   @L1A
EXSTURI  MVC   STSURI(0),0(R4)                                     @L1A
         SPACE
         LTORG
         SPACE
         END
