//*******************************************************************
//
// Module Name: ICC$EXC1
//
// Description:
//    This sample program demonstrates how to use the C++ exception
//    handling model.
//
//
//
//     Licensed Materials - Property of IBM
//
//     "Restricted Materials of IBM"
//
//     5655-Y04
//
//     (C) Copyright IBM Corp. 1998, 2004"
//
//
//
//
// Status = %SP00
//
//-------------------------------------------------------------------
//
// Change Activity:
//
//   $MOD(ICC$EXC1),COMP(CEZANNE),PROD(CICS TS ):
//
//   PN= REASON REL YYMMDD HDXIII : REMARKS
//  $P0= M30492 530 981106 HDGYBS : Creation
//  $P1= M30696 530 981218 HDGYBS : Fix sample c++ programs
//  $P2= D12734 640 041230 HD6KRAH: Language Level
//
//*******************************************************************
#include "icceh.hpp"  //CICS C++ Foundation Classes header files
#include "iccmain.hpp"  //CICS C++ Foundation Classes main() stub

//declare & implement class Test...
class Test {
public:
  void tryNumber( short num ) {
    IccTerminal* term = IccTerminal::instance();
    *term << "Number passed = " << num << endl << flush;
    if ( num > 10 ) {
      *term << ">>Out of Range - throwing exception" << endl << flush;
      throw "!!Number is out of range!!";
    }
  }
};

void IccUserControl::run()
{
  IccTerminal* term = IccTerminal::instance();
  term->erase();
  *term << "This is program 'icc$exc1' ..." << endl;

  try  {
    Test test;
    test.tryNumber( 1 );  //OK
    test.tryNumber( 7 );  //OK
    test.tryNumber( 11 );  //Error - throw exception
    test.tryNumber( 6 );  //this is not executed if exception
    //thrown in previous tryNumber call.
  }

  catch( const char* exception )
  {
    term->setLine( 22 );
    *term << "Exception caught: " << exception << endl << flush;
  }

  //After CATCH block, execution resumes here...
  term->send( 24,1,"Program 'icc$exc1' complete: Hit PF12 to End" );
  term->waitForAID( IccTerminal::PF12 );
  term->erase();
  term->freeKeyboard();

  return;
}
