         TITLE 'DFH$STAS - '
***********************************************************************
*                                                                     *
* MODULE NAME = DFH$STAS                                              *
*                                                                     *
* DESCRIPTIVE NAME = Access MVS Storage Areas Sample                  *
*                                                                     *
*                                                                     *
*                                                                     *
*     Licensed Materials - Property of IBM                            *
*                                                                     *
*     "Restricted Materials of IBM"                                   *
*                                                                     *
*     5655-Y04                                                        *
*                                                                     *
*     (C) Copyright IBM Corp. 1990, 2007"                             *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* STATUS = 7.2.0                                                      *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* DESCRIPTION :                                                       *
*                                                                     *
* This program is part of the set of sample programs illustrating the *
* use of CICS/ESA INQUIRE and COLLECT STATISTICS commands. It is      *
* called by the main program DFH0STAT to obtain information on MVS    *
* storage usage. This information is used in the STORAGE-STATISTICS   *
* section of the DFH0STAT program.                                    *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* CHANGE ACTIVITY :                                                   *
* $SEG(DFH$STAS),COMP(SAMPLES),PROD(CICS/ESA):                        *
*                                                                     *
*     PN= REASON REL YYMMDD HDXIII : REMARKS                          *
*    $D1= I06720 520 970103 HD1VCJB: Remove CVTPRODN Reference        *
*    $P0= Mnnnnn 311 900228 HDZZUNK: Created.                         *
*    $P1= M90474 330 910807 HDBWSH : Prologue fixed.                  *
*    $01= PK48575 660 071017 HDJDCH: Migrate PK48575 from SPA R650
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         IEZBITS
         EJECT
**********************************************************************
*           Communication Vector Table                               *
**********************************************************************
         CVT   DSECT=YES,LIST=NO,PREFIX=YES
         EJECT
**********************************************************************
*           Extended Communication Vector Table                      *
**********************************************************************
         IHAECVT DSECT=YES,LIST=NO
         EJECT
**********************************************************************
*           Global Data area                                         *
**********************************************************************
         IHAGDA
         EJECT
**********************************************************************
*           Prefixed Save area                                       *
**********************************************************************
         IHAPSA DSECT=YES,LIST=NO
         EJECT
**********************************************************************
*           Address space control block                              *
**********************************************************************
         IHAASCB DSECT=YES,LIST=NO
         EJECT
**********************************************************************
*           Address space extension block                            *
**********************************************************************
         IHAASXB DSECT=YES,LIST=NO
         EJECT
*******************************************************************@01A
*           Address space secondary block                          @01A
*******************************************************************@01A
         IHAASSB LIST=NO                                           @01A
         EJECT                                                     @01A
**********************************************************************
*           Task control block                                       *
**********************************************************************
         IKJTCB DSECT=YES,LIST=NO
         EJECT
**********************************************************************
*           SMF timing control table definition                      *
**********************************************************************
         IEFTCT DSECT=YES
         EJECT
**********************************************************************
*  The following DSECT describes the area which is passed between    *
*  this program and DFH0STAT, the calling program. This DSECT must   *
*  match the 01 structure STATASCB-FIELDS in program DFH0STAT.       *
**********************************************************************
ASCB_FIELDS     DSECT
MVS_PROD_NAME   DS   CL8                                           @D1C
ADSP_TCTLWM     DS   F
ADSP_TCTHWM     DS   F
ADSP_TCTELWM    DS   F
ADSP_TCTEHWM    DS   F
REGN_SZE_BELOW  DS   F
REGN_SZE_ABOVE  DS   F
REGN_SZE_ESTAB  DS   F
                DS   XL2
CPU_MODEL       DS   XL2
ADSP_CPU_TIME   DS   XL8
ADSP_SRB_TIME   DS   XL8
CURRENT_TOD     DS   XL8
                DS   XL8
                DS   XL8
EPVT_SIZE       DS   F
ECSA_SIZE       DS   F
ESQA_SIZE       DS   F
SQA_SIZE        DS   F
CSA_SIZE        DS   F
PVT_SIZE        DS   F
ECSA_ALLOC      DS   F
ESQA_ALLOC      DS   F
SQA_ALLOC       DS   F
CSA_ALLOC       DS   F
ECSA_CONV       DS   F
CSA_CONV        DS   F
         EJECT
DFHEISTG DSECT
         EJECT
DFH$STAS AMODE 31
DFH$STAS RMODE ANY
DFH$STAS DFHEIENT CODEREG=(R11),EIBREG=(R9)
         L     R2,DFHEICAP             GET CALLERS COMMAREA
         USING ASCB_FIELDS,R2
         SPACE ,
***********************************************************************
*        Locate the PSA (prefix storage area at location zero)        *
*        Locate the CVT and back off to the CVT prefix                *
*        Copy the MVS release information                             *
*        Locate the ECVT                                              *
***********************************************************************
         SPACE
         USING PSA,0                   ADDRESSABILITY TO PSA AT LOC 0
         L     R4,FLCCVT               ADDRESS OF THE CVT
         S     R4,=A(CVTMAP-CVTFIX)    BACK OFF TO PREFIX
         USING CVTFIX,R4               ADDRESSABILITY
         MVC   MVS_PROD_NAME,CVTPRODN  GET THE MVS PRODUCT NAME
         MVC   CPU_MODEL,CVTMDL        GET THE CPU MODEL
         L     R5,CVTECVT              GET EXTENDED CVT
         USING ECVT,R5                 ADDRESSABILITY
         DROP  0,R5                    DONE WITH PSA AND ECVT
         SPACE ,
         L     R5,CVTGDA               GET GLOBAL DATA AREA
         USING GDA,R5                  ADDRESSABILITY
         MVC   EPVT_SIZE,GDAEPVTS      EPVT SIZE
         MVC   ECSA_SIZE,GDAECSAS      ECSA SIZE
         MVC   ESQA_SIZE,GDAESQAS      ESQA SIZE
         MVC   SQA_SIZE,GDASQASZ       SQA SIZE
         MVC   CSA_SIZE,GDACSASZ       CSA SIZE
         MVC   PVT_SIZE,GDAPVTSZ       PVT SIZE
         SPACE ,
         MVC   ECSA_ALLOC,GDA_ECSA_ALLOC   ECSA ALLOCATED
         MVC   ESQA_ALLOC,GDA_ESQA_ALLOC   ESQA ALLOCATED
         MVC   SQA_ALLOC,GDA_SQA_ALLOC     SQA ALLOCATED
         MVC   CSA_ALLOC,GDA_CSA_ALLOC     CSA ALLOCATED
         MVC   ECSA_CONV,GDA_ECSA_CONV     ECSA CONVERTED TO ESQA
         MVC   CSA_CONV,GDA_CSA_CONV       CSA CONVERTED TO SQA
         SPACE ,
         DROP  R4,R5                   DONE WITH CVT AND GDA
         SPACE
***********************************************************************
*        Locate the PSA (prefix storage area at location zero)        *
*        Locate the current ASCB (from PSAAOLD)                       *
*        Locate the accumulated cpu and srb time from the ascb        *
***********************************************************************
         STCK  CURRENT_TOD             CURRENT TOD IN STCK FORMAT
         CALLDISP ,                    FORCE ASCB UPDATE
         USING PSA,0                   ADDRESSABILITY TO PSA AT LOC 0
         L     R4,PSAAOLD              LOCATE CURRENT ASCB
         USING ASCB,R4                 ADDRESSABILITY
         L     R3,ASCBASSB             Locate ASSB                 @01A
         USING ASSB,R3                                             @01A
         LM    R14,R15,ASSBPHTM        Load preemtable time        @01A
         LM    R0,R1,ASCBEJST          Load accumulated ADSP time  @01A
         ALR   R14,R0                  Add top 4 bytes             @01A
         ALR   R15,R1                  Add lower 4 bytes           @01A
         BC    12,NOTOVER              Take branch if no carry     @01A
         LA    R0,1                    Set R0 to 1                 @01A
         ALR   R14,R0                  Add carry bit               @01A
NOTOVER  DS    0H                                                  @01A
         STM   R14,R15,ADSP_CPU_TIME   Save total accumulated time @01A
         MVC   ADSP_SRB_TIME,ASCBSRBT  ACCUMULATED ADSP SRB TIME
         DROP  0,R4,R3                 DONE WITH PSA,ASCB&ASSB     @01C
         SPACE
***********************************************************************
*        Locate the PSA (prefix storage area at location zero)        *
*        Locate the current TCB (from PSATOLD)                        *
*        Locate the Storage Information within Timing Control Table   *
***********************************************************************
         SPACE
         USING PSA,0               ADDRESSABILITY TO PSA AT LOC 0
         L     R4,PSATOLD          ADDRESS CURRENT TCB
         DROP  0                   DONE WITH PSA
         USING TCB,R4              ADDRESSABILITY
         L     R5,TCBTCT           TIMING CONTROL TABLE ADDRESS
         USING SMFTCT,R5           ADDRESSABILITY
         L     R6,TCTCRTBL         ADDRESS OF STORAGE INFORMATION
         USING TCTCORE,R6
         SPACE
***********************************************************************
*        Extract the Region storage details                           *
*        (NB. This information is the same as that output in message  *
*        IEF274I at Job Step termination and also output in the SMF   *
*        Record Type 30)                                              *
***********************************************************************
         SPACE
         MVC   ADSP_TCTLWM,TCTLWM            LOW PRIVATE BELOW - LWM
         MVC   ADSP_TCTHWM,TCTHWM            HIGH PRIVATE BELOW - HWM
         MVC   ADSP_TCTELWM,TCTELWM          LOW PRIVATE ABOVE - LWM
         MVC   ADSP_TCTEHWM,TCTEHWM          HIGH PRIVATE ABOVE - HWM
         MVC   REGN_SZE_BELOW,TCTRGNB        REGION SIZE BELOW
         MVC   REGN_SZE_ABOVE,TCTERGNB       REGION SIZE ABOVE
         MVC   REGN_SZE_ESTAB,TCTRSZ         REGION SIZE ESTABLISHED
         SPACE
         DROP  R5,R6
         SPACE
RETURN   DS 0H
         EXEC CICS RETURN
         SPACE
         LTORG
         END
